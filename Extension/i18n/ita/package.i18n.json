/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"c_cpp.capabilities.untrustedWorkspaces.description": "Le impostazioni multiple possono comportare l'esecuzione dei processi locali nell'area di lavoro, quali C_Cpp.clang_format_path, C_Cpp.addNodeAddonIncludePaths, C_Cpp.default.compilerPath, C_Cpp.default.configurationProvider, C_Cpp.default.compileCommands e le proprietà equivalenti in c_cpp_properties.json.",
	"c_cpp.command.configurationSelect.title": "Seleziona una configurazione...",
	"c_cpp.command.configurationProviderSelect.title": "Cambia provider di configurazione...",
	"c_cpp.command.configurationEditJSON.title": "Modifica configurazioni (JSON)",
	"c_cpp.command.configurationEditUI.title": "Modifica configurazioni (interfaccia utente)",
	"c_cpp.command.switchHeaderSource.title": "Scambia intestazione/origine",
	"c_cpp.command.enableErrorSquiggles.title": "Abilita i segni di revisione per gli errori",
	"c_cpp.command.disableErrorSquiggles.title": "Disabilita i segni di revisione per gli errori",
	"c_cpp.command.toggleIncludeFallback.title": "Attiva/Disattiva fallback del motore IntelliSense in caso di errori di inclusione",
	"c_cpp.command.toggleDimInactiveRegions.title": "Attiva/Disattiva colorazione delle aree inattive",
	"c_cpp.command.resetDatabase.title": "Reimposta database IntelliSense",
	"c_cpp.command.takeSurvey.title": "Partecipa al sondaggio",
	"c_cpp.command.restartIntelliSenseForFile.title": "Riavvia IntelliSense per il file attivo",
	"c_cpp.command.logDiagnostics.title": "Registra diagnostica",
	"c_cpp.command.referencesViewGroupByType.title": "Raggruppa per tipo riferimento",
	"c_cpp.command.referencesViewUngroupByType.title": "Separa per tipo riferimento",
	"c_cpp.command.rescanWorkspace.title": "Ripeti analisi dell'area di lavoro",
	"c_cpp.command.vcpkgClipboardInstallSuggested.title": "Copia il comando di installazione di vcpkg negli Appunti",
	"c_cpp.command.vcpkgOnlineHelpSuggested.title": "Visitare la pagina della Guida di vcpkg",
	"c_cpp.command.generateEditorConfig.title": "Genera il contenuto di EditorConfig dalle impostazioni di Formato VC",
	"c_cpp.command.GoToNextDirectiveInGroup.title": "Passa alla direttiva successiva del preprocessore nel gruppo condizionale",
	"c_cpp.command.GoToPrevDirectiveInGroup.title": "Passa alla direttiva precedente del preprocessore nel gruppo condizionale",
	"c_cpp.command.RunCodeAnalysisOnActiveFile.title": "Esegui analisi del codice su File attivo",
	"c_cpp.command.RunCodeAnalysisOnOpenFiles.title": "Esegui analisi del codice su Apri file",
	"c_cpp.command.RunCodeAnalysisOnAllFiles.title": "Esegui analisi del codice su Tutti i file",
	"c_cpp.command.RemoveAllCodeAnalysisProblems.title": "Cancellare tutti i problemi Code Analysis",
	"c_cpp.command.BuildAndDebugFile.title": "Debug file C/C++",
	"c_cpp.command.BuildAndRunFile.title": "Esegui file C/C++",
	"c_cpp.command.AddDebugConfiguration.title": "Aggiungere configurazione di debug",
	"c_cpp.configuration.maxConcurrentThreads.markdownDescription": "Numero massimo di thread simultanei da utilizzare per l'elaborazione del servizio di linguaggio. Il valore è un suggerimento e non può essere sempre utilizzato. Il valore predefinito di `null` (vuoto) utilizza il numero di processori logici disponibili.",
	"c_cpp.configuration.maxCachedProcesses.markdownDescription": "Numero massimo di processi memorizzati nella cache da utilizzare per l'elaborazione del servizio di linguaggio. Il valore predefinito di `null` (vuoto) utilizza il doppio del numero di processori logici disponibili.",
	"c_cpp.configuration.maxMemory.markdownDescription": "Memoria massima (in MB) disponibile per l'elaborazione del servizio di linguaggio. Un numero minore di processi verrà memorizzato nella cache ed eseguito contemporaneamente dopo il superamento dell'utilizzo della memoria. Il valore predefinito di `null` (vuoto) utilizza la memoria disponibile del sistema.",
	"c_cpp.configuration.intelliSense.maxCachedProcesses.markdownDescription": "Numero massimo di processi IntelliSense da mantenere in esecuzione. Il valore predefinito di `null` (vuoto) usa un valore ereditato da `#C_Cpp.maxCachedProcesses#`.",
	"c_cpp.configuration.intelliSense.maxMemory.markdownDescription": "I processi IntelliSense meno recenti verranno arrestati prima della creazione di nuovi processi dopo il superamento di utilizzo della memoria (in MB). Il valore predefinito di `null` (vuoto) usa il valore ereditato da `#C_Cpp.maxMemory#`.",
	"c_cpp.configuration.references.maxConcurrentThreads.markdownDescription": "Numero massimo di thread simultanei da utilizzare per 'Trova tutti i riferimenti' e 'Rinomina'. Il valore predefinito di `null` (vuoto) usa il valore ereditato da `#C_Cpp.maxConcurrentThreads#`.",
	"c_cpp.configuration.references.maxCachedProcesses.markdownDescription": "Numero massimo di processi da mantenere in memoria per 'Trova tutti i riferimenti' e 'Rinomina'. Il valore predefinito `0` disabilita questa funzionalità. Il valore di `null` (vuoto) usa il valore ereditato da `#C_Cpp.maxCachedProcesses#`.",
	"c_cpp.configuration.references.maxMemory.markdownDescription": "Un numero inferiore di processi 'Trova tutti i riferimenti' e 'Rinomina' verrà memorizzato nella cache ed eseguito contemporaneamente dopo il superamento di utilizzo della memoria (in MB). Il valore predefinito di `null` (vuoto) usa il valore ereditato da `#C_Cpp.maxMemory#`.",
	"c_cpp.configuration.codeAnalysis.maxConcurrentThreads.markdownDescription": "Numero massimo di thread simultanei da utilizzare per analisi del codice. Il valore predefinito di `null` (vuoto) usa metà del valore ereditato da `#C_Cpp.maxConcurrentThreads#`.",
	"c_cpp.configuration.codeAnalysis.maxMemory.markdownDescription": "Un numero minore di processi di analisi del codice verrà eseguito simultaneamente dopo il superamento dell'utilizzo di memoria (in MB). Il valore predefinito di `null` (vuoto) usa il valore ereditato da `#C_Cpp.maxMemory#`.",
	"c_cpp.configuration.codeAnalysis.updateDelay.markdownDescription": "Controlla il ritardo in millisecondi prima dell'avvio dell'elaborazione di analisi del codice dopo l'attivazione di un salvataggio da una modifica quando `#files.autoSave#` è `afterDelay` e `#C_Cpp.codeAnalysis.runAutomatically#` è `true`.",
	"c_cpp.configuration.codeAnalysis.exclude.markdownDescription": "Configurare i criteri GLOB per escludere cartelle e file per l'analisi del codice. I file non inclusi nella cartella dell'area di lavoro sono sempre esclusi. Eredita i valori da `#files.exclude#` e `#C_Cpp.files.exclude#`. Altre informazioni sui criteri GLOB [here] (https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).",
	"c_cpp.configuration.codeAnalysis.excludeBoolean.markdownDescription": "Criterio GLOB da usare per trovare percorsi file. Impostare su `True` o `False` per abilitare o disabilitare il criterio.",
	"c_cpp.configuration.codeAnalysis.excludeWhen.markdownDescription": "Controllo aggiuntivo sugli elementi di pari livello di un file corrispondente. Usare `$(basename)` come variabile del nome file corrispondente.",
	"c_cpp.configuration.codeAnalysis.runAutomatically.markdownDescription": "Se è `true`, analisi del codice verrà eseguito automaticamente su un file dopo l'apertura o il salvataggio.",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showDisable.markdownDescription": "Se è 'true', l'azione codice 'Disabilita' verrà visualizzata quando disponibile (all'analisi codice successiva). Quando si usa l'azione codice 'Disabilita', aggiunge il codice di avviso all'impostazione 'C_Cpp.codeAnalysis.clangTidy.checks.disabled'.",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showDocumentation.markdownDescription": "Se è 'true', l'azione codice 'Mostra documentazione per' verrà visualizzata quando disponibile (all'analisi codice successiva).",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.description": "Controlla quali opzioni di azione codice per il problema Code Analysis 'Cancella' sono disponibili. La modifica dell'impostazione per visualizzare altre opzioni potrebbe richiedere la ripetizione dell'analisi codice.",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.None.description": "Non mostrare azioni codice 'Cancella'.",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.AllOnly.description": "Mostrare solo l'azione codice 'Cancella tutto' (o 'Cancella tutti <type>' se è presente un solo tipo o 'Cancella questo' se è presente un solo problema).",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.AllAndAllType.description": "Mostrare l'azione codice 'Cancella tutto' (se sono presenti più tipi di problema) e l'azione codice 'Cancella tutti <type>' (o 'Cancella questo' se è presente un solo problema per <type>)",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.AllAndAllTypeAndThis.description": "Mostrare le azioni codice 'Cancella tutto' (se sono presenti più tipi di problema), 'Cancella tutti <type>' (se sono presenti più problemi per <type>) e 'Cancella questo'",
	"c_cpp.configuration.codeAnalysis.clangTidy.enabled.markdownDescription": "Se è `true`, l'analisi del codice che usa `clang-tidy` verrà abilitata ed eseguita automaticamente se `#C_Cpp.codeAnalysis.runAutomatically#` è `true` (impostazione predefinita).",
	"c_cpp.configuration.codeAnalysis.clangTidy.path.markdownDescription": "Percorso completo dell'eseguibile `clang-tidy`. Se non è specificato, `clang-tidy` è disponibile nel percorso dell'ambiente usato. Se non viene trovato nel percorso dell'ambiente, verrà usato `clang-tidy` in bundle con l'estensione.",
	"c_cpp.configuration.codeAnalysis.clangTidy.config.markdownDescription": "Specifica una configurazione `clang-tidy` in formato YAML/JSON: `{Checks: '-*,clang-analyzer-*', CheckOptions: [{chiave: x, valore: y}]}`. Quando il valore è vuoto, `clang-tidy` tenterà di trovare un file denominato `.clang-tidy` per ogni file di origine nelle directory padre.",
	"c_cpp.configuration.codeAnalysis.clangTidy.fallbackConfig.markdownDescription": "Specifica una configurazione `clang-tidy` in formato YAML/JSON da usare come fallback quando `#C_Cpp.codeAnalysis.clangTidy.config#` non è impostato e non è stato trovato alcun file `.clang-tidy`: `{Checks: '-*,clang-analyzer-*', CheckOptions: [{chiave: x, valore: y}]}`.",
	"c_cpp.configuration.codeAnalysis.clangTidy.headerFilter.markdownDescription": "Espressione regolare estesa POSIX (ERE) corrispondente ai nomi delle intestazioni da cui eseguire la diagnostica di output. La diagnostica dal file principale di ogni unità di conversione viene sempre visualizzata. La variabile `${workspaceFolder}` è supportata e viene usata come valore di fallback predefinito se non esiste alcun file `.clang-tidy`. Se questa opzione non è `null` (vuota), esegue l'override dell'opzione `HeaderFilterRegex` in un file `.clang-tidy`, se presente.",
	"c_cpp.configuration.codeAnalysis.clangTidy.args.markdownDescription": "Argomenti aggiuntivi della riga di comando da passare a `clang-tidy`. Hanno la precedenza sulle impostazioni equivalenti di `C_Cpp.codeAnalysis.clangTidy.*`.",
	"c_cpp.configuration.codeAnalysis.clangTidy.useBuildPath.markdownDescription": "Se `true` e `compileCommands` sono impostati, l'argomento `-p=<build-path>` viene passato a `clang-tidy` anziché agli argomenti di compilazione passati dopo `--`. Questa operazione potrebbe non funzionare se le variabili di ambiente non sono impostate in modo da poter trovare direttive include di sistema.",
	"c_cpp.configuration.codeAnalysis.clangTidy.checks.enabled.markdownDescription": "Elenco dei controlli `clang-tidy` abilitati. I valori vengono aggiunti a `Checks` in un file `.clang-tidy` o `#C_Cpp.codeAnalysis.clangTidy.config#`, se presente. Il controllo predefinito `clang-analyzer-*` viene sempre usato a meno che non sia disabilitato in modo esplicito.",
	"c_cpp.configuration.codeAnalysis.clangTidy.checks.disabled.markdownDescription": "Elenco dei controlli `clang-tidy` disabilitati. I valori vengono aggiunti a `Checks` in un file `.clang-tidy` o `#C_Cpp.codeAnalysis.clangTidy.config#`, se presente.",
	"c_cpp.configuration.formatting.description": "Configurare il motore di formattazione.",
	"c_cpp.configuration.formatting.clangFormat.markdownDescription": "Per formattare il codice, verrà usato `clang-format`.",
	"c_cpp.configuration.formatting.vcFormat.markdownDescription": "Per formattare il codice, verrà usato il motore di formattazione Visual C++.",
	"c_cpp.configuration.formatting.Default.markdownDescription": "Per impostazione predefinita, per formattare il codice verrà usato `clang-format`. Verrà tuttavia usato il motore di formattazione di Visual C++ se viene trovato un file con estensione `.editorconfig` con impostazioni pertinenti in una posizione più vicina al codice da formattare e `#C_Cpp.clang_format_style#` è impostato sul valore predefinito: `file`.",
	"c_cpp.configuration.formatting.Disabled.markdownDescription": "La formattazione del codice verrà disabilitata.",
	"c_cpp.configuration.vcFormat.indent.braces.markdownDescription": "Le parentesi graffe vengono rientrate in base al valore specificato nell'impostazione `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.description": "Determina l'elemento rispetto al quale viene impostato il rientro della nuova riga.",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.outermostParenthesis.description": "Imposta un rientro per la nuova riga rispetto alla parentesi di apertura più esterna.",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.innermostParenthesis.description": "Imposta un rientro per la nuova riga rispetto alla parentesi di apertura più interna.",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.statementBegin.description": "Imposta un rientro per la nuova riga rispetto all'inizio dell'istruzione corrente.",
	"c_cpp.configuration.vcFormat.indent.withinParentheses.markdownDescription": "Quando digitata, una nuova riga viene allineata sotto la parentesi di apertura o in base al valore di `#C_Cpp.vcFormat.indent.multiLineRelativeTo#`.",
	"c_cpp.configuration.vcFormat.indent.withinParentheses.alignToParenthesis.markdownDescription": "La nuova riga viene allineata sotto la parentesi di apertura.",
	"c_cpp.configuration.vcFormat.indent.withinParentheses.indent.markdownDescription": "Il rientro per la nuova riga è impostato in base al valore di `#C_Cpp.vcFormat.indent.multiLineRelativeTo#`.",
	"c_cpp.configuration.vcFormat.indent.preserveWithinParentheses.description": "Nel codice esistente mantiene l'allineamento esistente del rientro per le nuove righe all'interno delle parentesi.",
	"c_cpp.configuration.vcFormat.indent.caseLabels.markdownDescription": "Le etichette vengono rientrate rispetto alla relativa istruzione switch in base al valore specificato nell'impostazione `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.caseContents.markdownDescription": "Il codice all'interno del blocco `case` viene rientrato rispetto alla relativa etichetta in base al valore specificato nell'impostazione `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.caseContentsWhenBlock.markdownDescription": "Imposta un rientro per le parentesi graffe dopo un'istruzione case in base al valore specificato nell'impostazione `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.lambdaBracesWhenParameter.markdownDescription": "Imposta un rientro per le parentesi graffe delle funzioni lambda usate come parametri di funzione rispetto all'inizio dell'istruzione in base al valore specificato nell'impostazione `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.description": "Posizione delle etichette GoTo.",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.oneLeft.markdownDescription": "Posiziona le etichette GoTo a sinistra del rientro del codice corrente in base al valore specificato nell'impostazione `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.leftmostColumn.markdownDescription": "Posiziona le etichette goto in corrispondenza del bordo più a sinistra del codice.",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.none.markdownDescription": "Le etichette goto non verranno formattate.",
	"c_cpp.configuration.vcFormat.indent.preprocessor.description": "Posizione delle direttive del preprocessore.",
	"c_cpp.configuration.vcFormat.indent.preprocessor.oneLeft.markdownDescription": "Le direttive del preprocessore vengono posizionate a sinistra del rientro del codice corrente in base al valore specificato nell'impostazione `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.preprocessor.leftmostColumn.markdownDescription": "Le direttive del preprocessore vengono posizionate in corrispondenza del bordo più a sinistra del codice.",
	"c_cpp.configuration.vcFormat.indent.preprocessor.none.markdownDescription": "Le direttive del preprocessore non verranno formattate.",
	"c_cpp.configuration.vcFormat.indent.accessSpecifiers.markdownDescription": "Gli identificatori di accesso sono rientrati rispetto alle definizioni di classe o struct in base al valore specificato nell'impostazione `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.namespaceContents.markdownDescription": "Il codice viene rientrato rispetto allo spazio dei nomi che lo contiene in base al valore specificato nell'impostazione `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.preserveComments.description": "I rientri dei commenti non vengono modificati durante le operazioni di formattazione.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.namespace.description": "Posizione delle parentesi graffe di apertura per gli spazi dei nomi.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.type.description": "Posizione delle parentesi graffe di apertura per le definizioni di tipo.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.lambda.description": "Posizione delle parentesi graffe di apertura per le funzioni lambda.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.function.description": "Posizione delle parentesi graffe di apertura per le funzioni.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.block.description": "Posizione delle parentesi graffe di apertura per i blocchi di controllo.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.newLine.description": "Le parentesi graffe di apertura vengono spostate in una nuova riga.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.sameLine.description": "Le parentesi graffe di apertura vengono mantenute sulla stessa riga e prima di ognuna di esse viene aggiunto uno spazio.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.ignore.description": "Le parentesi graffe di apertura non vengono formattate.",
	"c_cpp.configuration.vcFormat.newLine.scopeBracesOnSeparateLines.description": "Posiziona le parentesi graffe di apertura e di chiusura per gli ambiti su righe diverse.",
	"c_cpp.configuration.vcFormat.newLine.closeBraceSameLine.emptyType.description": "Per i tipi vuoti, sposta le parentesi graffe di chiusura sulla stessa riga delle parentesi graffe di apertura.",
	"c_cpp.configuration.vcFormat.newLine.closeBraceSameLine.emptyFunction.description": "Per i corpi di funzione vuoti, sposta le parentesi graffe di chiusura sulla stessa riga delle parentesi graffe di apertura.",
	"c_cpp.configuration.vcFormat.newLine.beforeCatch.markdownDescription": "Inserisce `catch` e parole chiave simili su una nuova riga.",
	"c_cpp.configuration.vcFormat.newLine.beforeElse.markdownDescription": "Inserisce `else` su una nuova riga.",
	"c_cpp.configuration.vcFormat.newLine.beforeWhileInDoWhile.markdownDescription": "Inserire `while` in un ciclo `do`-`while` su una nuova riga.",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.description": "Spaziatura tra i nomi di funzione e le parentesi di apertura degli elenchi di argomenti.",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.insert.description": "Aggiunge uno spazio prima della parentesi di apertura di una funzione.",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.remove.description": "Gli spazi prima della parentesi di apertura di una funzione vengono rimossi.",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.ignore.description": "Gli spazi vengono lasciati inalterati.",
	"c_cpp.configuration.vcFormat.space.withinParameterListParentheses.description": "Viene aggiunto uno spazio dopo la parentesi di apertura e prima della parentesi di chiusura negli elenchi dei parametri di funzione.",
	"c_cpp.configuration.vcFormat.space.betweenEmptyParameterListParentheses.description": "Quando un elenco di parametri di funzione è vuoto, viene inserito uno spazio tra le relative parentesi.",
	"c_cpp.configuration.vcFormat.space.afterKeywordsInControlFlowStatements.description": "Viene aggiunto uno spazio tra la parola chiave e la parentesi di apertura nelle istruzioni del flusso di controllo.",
	"c_cpp.configuration.vcFormat.space.withinControlFlowStatementParentheses.description": "Viene aggiunto uno spazio dopo la parentesi di apertura e prima della parentesi di chiusura nelle istruzioni del flusso di controllo.",
	"c_cpp.configuration.vcFormat.space.beforeLambdaOpenParenthesis.description": "Viene aggiunto uno spazio prima della parentesi di apertura degli elenchi di argomenti lambda.",
	"c_cpp.configuration.vcFormat.space.withinCastParentheses.description": "Viene aggiunto uno spazio dopo la parentesi di apertura e prima della parentesi di chiusura di un cast di tipo C.",
	"c_cpp.configuration.vcFormat.space.afterCastCloseParenthesis.description": "Viene aggiunto uno spazio dopo le parentesi di chiusura di un cast di tipo C.",
	"c_cpp.configuration.vcFormat.space.withinExpressionParentheses.description": "Viene aggiunto uno spazio dopo la parentesi di apertura e prima della parentesi di chiusura di un'espressione tra parentesi.",
	"c_cpp.configuration.vcFormat.space.beforeBlockOpenBrace.description": "Viene aggiunto uno spazio prima delle parentesi graffe di apertura di blocchi di ambito.",
	"c_cpp.configuration.vcFormat.space.betweenEmptyBraces.description": "Quando sono vuote e sulla stessa riga, tra le parentesi graffe viene inserito uno spazio.",
	"c_cpp.configuration.vcFormat.space.beforeInitializerListOpenBrace.description": "Viene aggiunto uno spazio prima della parentesi graffa di apertura di elenchi di inizializzatori e inizializzazioni uniformi.",
	"c_cpp.configuration.vcFormat.space.withinInitializerListBraces.description": "Viene aggiunto uno spazio dopo la parentesi graffa di apertura e prima della parentesi graffa di chiusura di elenchi di inizializzatori e inizializzazioni uniformi.",
	"c_cpp.configuration.vcFormat.space.preserveInInitializerList.description": "Gli spazi prima e dopo le virgole vengono mantenuti all'interno di elenchi di inizializzatori e inizializzazioni uniformi.",
	"c_cpp.configuration.vcFormat.space.beforeOpenSquareBracket.description": "Viene aggiunto uno spazio prima delle parentesi quadre di apertura.",
	"c_cpp.configuration.vcFormat.space.withinSquareBrackets.description": "Viene aggiunto uno spazio dopo la parentesi quadra di apertura e prima della parentesi quadra di chiusura.",
	"c_cpp.configuration.vcFormat.space.beforeEmptySquareBrackets.description": "Quando le parentesi quadre sono vuote, viene aggiunto uno spazio prima della parentesi quadra di apertura.",
	"c_cpp.configuration.vcFormat.space.betweenEmptySquareBrackets.description": "Quando le parentesi quadre sono vuote, viene inserito uno spazio tra esse.",
	"c_cpp.configuration.vcFormat.space.groupSquareBrackets.description": "Per le matrici multidimensionali, tutto lo spazio tra le parentesi viene rimosso. Le altre impostazioni che controllano lo spazio vengono sottoposte a override.",
	"c_cpp.configuration.vcFormat.space.withinLambdaBrackets.description": "Viene aggiunto uno spazio dopo la parentesi quadra di apertura e prima della parentesi quadra di chiusura.",
	"c_cpp.configuration.vcFormat.space.betweenEmptyLambdaBrackets.description": "Quando le parentesi quadre sono vuote, viene inserito uno spazio tra esse.",
	"c_cpp.configuration.vcFormat.space.beforeComma.description": "Viene aggiunto uno spazio prima di ogni virgola.",
	"c_cpp.configuration.vcFormat.space.afterComma.description": "Viene aggiunto uno spazio dopo ogni virgola.",
	"c_cpp.configuration.vcFormat.space.removeAroundMemberOperators.description": "Gli spazi prima e dopo gli operatori di accesso a membro, gli operatori di puntatore a membro e gli operatori di risoluzione dell'ambito vengono rimossi.",
	"c_cpp.configuration.vcFormat.space.beforeInheritanceColon.description": "Viene aggiunto uno spazio prima dei due punti per i tipi ereditati nelle definizioni di classe.",
	"c_cpp.configuration.vcFormat.space.beforeConstructorColon.description": "Viene aggiunto uno spazio prima dei due punti nelle definizioni di costruttore.",
	"c_cpp.configuration.vcFormat.space.removeBeforeSemicolon.description": "Vengono rimossi gli spazi prima di ogni punto e virgola.",
	"c_cpp.configuration.vcFormat.space.insertAfterSemicolon.description": "Viene inserito uno spazio dopo ogni punto e virgola.",
	"c_cpp.configuration.vcFormat.space.removeAroundUnaryOperator.description": "Vengono rimossi gli spazi tra gli operatori unari e i relativi operandi.",
	"c_cpp.configuration.vcFormat.space.aroundBinaryOperator.description": "Spazi intorno agli operatori binari.",
	"c_cpp.configuration.vcFormat.space.aroundAssignmentOperator.description": "Spazi intorno agli operatori di assegnazione.",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.description": "Spazi intorno a operatori di riferimento e puntatore.",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.left.description": "Operatori di riferimento e puntatore sono allineati a sinistra.",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.center.description": "Operatori di riferimento e puntatore sono centrati.",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.right.description": "Operatori di riferimento e puntatore sono allineati a destra.",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.ignore.description": "Operatori di riferimento e puntatore non vengono formattati.",
	"c_cpp.configuration.vcFormat.space.aroundTernaryOperator.description": "Spazi intorno agli operatori condizionali.",
	"c_cpp.configuration.vcFormat.space.aroundOperators.insert.description": "Viene aggiunto uno spazio prima e dopo l'operatore.",
	"c_cpp.configuration.vcFormat.space.aroundOperators.remove.description": "Vengono rimossi gli spazi prima e dopo l'operatore.",
	"c_cpp.configuration.vcFormat.space.aroundOperators.ignore.description": "Gli spazi vengono lasciati inalterati.",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.description": "Opzioni di ritorno a capo per i blocchi.",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.oneLiners.markdownDescription": "Un blocco di codice completo immesso su una sola riga viene mantenuto su una sola riga, indipendentemente dai valori di qualsiasi impostazione `C_Cpp.vcFormat.newLine.*`.",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.allOneLineScopes.markdownDescription": "Codice di qualsiasi tipo in cui le parentesi graffe di apertura e chiusura sono nella stessa riga viene mantenuto in una sola riga, indipendentemente dai valori di una delle impostazioni `C_Cpp.vcFormat.newLine.*`.",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.never.markdownDescription": "I blocchi di codice vengono sempre formattati in base ai valori delle impostazioni `C_Cpp.vcFormat.newLine.*`.",
	"c_cpp.configuration.clang_format_path.markdownDescription": "Percorso completo del file eseguibile `clang-format`. Se non è specificato, verrà usato lo strumento `clang-format` disponibile nel percorso dell'ambiente. Se `clang-format` non viene trovato nel percorso dell'ambiente, verrà usato il `clang-format` fornito in bundle con l'estensione.",
	"c_cpp.configuration.clang_format_style.markdownDescription": "Stile di codifica. Attualmente supporta: `Visual Studio`, `LLVM`, `Google`, `Chromium`, `Mozilla`, `WebKit`, `Microsoft`, `GNU`. Usare `file` per caricare lo stile da un file `.clang-format` presente nella directory corrente o padre. Usare `{key: value, ...}` per impostare parametri specifici. Ad esempio, lo stile `Visual Studio` è simile a: `{ BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: False, IndentCaseLabels: False, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: False }`",
	"c_cpp.configuration.clang_format_fallbackStyle.markdownDescription": "Nome dello stile predefinito usato come fallback nel caso in cui `clang-format` venga richiamato con lo stile `file`, ma il file `clang-format` non viene trovato. I valori possibili sono `Visual Studio`, `LLVM`, `Google`, `Chromium`, `Mozilla`, `WebKit`, `Microsoft`, `GNU`, `none`. In alternativa, usare `{chiave: valore, ...}` per impostare parametri specifici. Ad esempio, lo stile `Visual Studio` è simile a: `{ BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }`.",
	"c_cpp.configuration.clang_format_sortIncludes.markdownDescription": "Se è impostata, esegue l'override del comportamento di ordinamento di inclusione determinato dal parametro `SortIncludes`.",
	"c_cpp.configuration.intelliSenseEngine.description": "Controlla il provider IntelliSense.",
	"c_cpp.configuration.intelliSenseEngine.default.description": "Fornisce risultati compatibili con il contesto tramite un processo IntelliSense separato.",
	"c_cpp.configuration.intelliSenseEngine.tagParser.description": "Fornisce risultati 'fuzzy' che non sono compatibili con il contesto.",
	"c_cpp.configuration.intelliSenseEngine.disabled.description": "Disattiva le funzionalità del servizio di linguaggio C/C++.",
	"c_cpp.configuration.intelliSenseEngineFallback.markdownDescription": "Controlla se il motore IntelliSense passerà automaticamente al parser di tag per le unità di conversione contenenti errori `#include`.",
	"c_cpp.configuration.autocomplete.markdownDescription": "Controlla il provider di completamento automatico. Se è `Disabled` e si vuole il completamento basato su parole, sarà necessario impostare anche `\"[cpp]\": {\"editor.wordBasedSuggestions\": true}` (e analogamente per i linguaggi `c` e `cuda-cpp`).",
	"c_cpp.configuration.autocomplete.default.description": "Usa il motore IntelliSense attivo.",
	"c_cpp.configuration.autocomplete.disabled.description": "Usa il completamento basato su parole fornito da Visual Studio Code.",
	"c_cpp.configuration.errorSquiggles.description": "Controlla se i possibili errori di compilazione rilevati dal motore IntelliSense verranno segnalati all'editor. Controlla inoltre se vengono segnalati avvisi di analisi del codice se non è possibile trovare le inclusioni. Questa impostazione viene ignorata dal motore del parser di tag.",
	"c_cpp.configuration.dimInactiveRegions.description": "Controlla se i blocchi del preprocessore inattivo vengono colorati in modo diverso rispetto al codice attivo. Questa impostazione non ha alcun effetto se IntelliSense è disabilitato o se si usa il tema Contrasto elevato predefinito.",
	"c_cpp.configuration.inactiveRegionOpacity.markdownDescription": "Controlla l'opacità dei blocchi del preprocessore inattivi. Può essere impostata su un valore compreso tra `0,1` e `1,0`. Questa impostazione viene applicata solo se è abilitata l'attenuazione delle aree inattive.",
	"c_cpp.configuration.inactiveRegionForegroundColor.description": "Controlla la colorazione dei caratteri dei blocchi del preprocessore inattivi. L'input è costituito da codice a colori esadecimale o da un colore del tema valido. Se non è impostata, per impostazione predefinita viene usato lo schema di colorazione della sintassi dell'editor. Questa impostazione viene applicata solo se è abilitata l'attenuazione delle aree inattive.",
	"c_cpp.configuration.inactiveRegionBackgroundColor.description": "Controlla la colorazione di sfondo dei blocchi del preprocessore inattivi. L'input è costituito da codice a colori esadecimale o da un colore del tema valido. Se non è impostata, l'impostazione predefinita è trasparente. Questa impostazione viene applicata solo se è abilitata l'attenuazione delle aree inattive.",
	"c_cpp.configuration.loggingLevel.markdownDescription": "Livello di dettaglio della registrazione nel pannello di output. L'ordine dei livelli da meno dettagliato a più dettagliato è: `None` < `Error` < `Warning` < `Information` < `Debug`.",
	"c_cpp.configuration.autoAddFileAssociations.markdownDescription": "Controlla se i file vengono aggiunti automaticamente a `files.associations` quando sono la destinazione di un'operazione di spostamento da un file C/C++.",
	"c_cpp.configuration.workspaceParsingPriority.markdownDescription": "Controlla se durante l'analisi dei file dell'area di lavoro non attivi viene usata la modalità di sospensione per evitare l'uso di tutta la CPU. I valori `highest`/`high`/`medium`/`low` corrispondono all'incirca al 100/75/50/25% di utilizzo della CPU.",
	"c_cpp.configuration.workspaceSymbols.description": "Simboli da includere nei risultati della query quando viene richiamato 'Vai al simbolo nell'area di lavoro'.",
	"c_cpp.configuration.exclusionPolicy.markdownDescription": "Indica all'estensione quando usare l'opzione `#files.exclude#` (e `#C_Cpp.files.exclude#`) per determinare i file da aggiungere al database di esplorazione del codice durante l'attraversamento dei percorsi nella matrice `browse.path`. Se l'opzione `#files.exclude#` contiene solo cartelle, `checkFolders` è la scelta migliore e consentirà di velocizzare l'inizializzazione del database di esplorazione del codice nell'estensione.",
	"c_cpp.configuration.exclusionPolicy.checkFolders.description": "I filtri di esclusione verranno valutati una sola volta per cartella (i singoli file non verranno controllati).",
	"c_cpp.configuration.exclusionPolicy.checkFilesAndFolders.description": "I filtri di esclusione verranno valutati in base a ogni file e cartella rilevati.",
	"c_cpp.configuration.preferredPathSeparator.markdownDescription": "Carattere usato come separatore di percorso per i risultati di completamento automatico di `#include`.",
	"c_cpp.configuration.simplifyStructuredComments.markdownDescription": "Se è `true`, le descrizioni comando al passaggio del mouse e del completamento automatico visualizzeranno solo alcune etichette di commenti strutturati. In caso contrario, vengono visualizzati tutti i commenti.",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.string.markdownDescription": "Criterio con cui inizia un blocco di commento su più righe o su una sola riga. Il criterio di continuazione è impostato su `* ` per i blocchi di commento su più righe o su questa stringa per i blocchi di commento su una sola riga.",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.object.begin.description": "Criterio con cui inizia un blocco di commento su più righe o su una sola riga.",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.object.continue.description": "Testo che verrà inserito alla riga successiva quando si preme INVIO all'interno di un blocco di commento su più righe o su una sola riga.",
	"c_cpp.configuration.commentContinuationPatterns.description": "Definisce il comportamento dell'editor quando si preme il tasto INVIO all'interno di un blocco di commento su più righe o su una sola riga.",
	"c_cpp.configuration.configurationWarnings.description": "Determina se verranno visualizzate le notifiche popup quando un'estensione del provider di configurazione non riesce a fornire una configurazione per un file di origine.",
	"c_cpp.configuration.intelliSenseCachePath.markdownDescription": "Definisce il percorso della cartella per le intestazioni precompilate memorizzate nella cache usate da IntelliSense. Il percorso predefinito della cache è `%LocalAppData%/Microsoft/vscode-cpptools` in Windows, `$XDG_CACHE_HOME/vscode-cpptools/` in Linux (o `$HOME/.cache/vscode-cpptools/` se `XDG_CACHE_HOME` non è definito) e `$HOME/Library/Caches/vscode-cpptools/` in macOS. Verrà usato il percorso predefinito se non ne viene specificato nessuno o se ne viene specificato uno non valido.",
	"c_cpp.configuration.intelliSenseCacheSize.markdownDescription": "Dimensioni massime dello spazio su disco rigido per area di lavoro in megabyte (MB) per le intestazioni precompilate memorizzate nella cache. L'utilizzo effettivo potrebbe aggirarsi intorno a questo valore. Le dimensioni predefinite sono pari a `5120` MB. La memorizzazione nella cache dell'intestazione precompilata è disabilitata quando le dimensioni sono pari a `0`.",
	"c_cpp.configuration.intelliSenseMemoryLimit.markdownDescription": "Limite di utilizzo della memoria in megabyte (MB) di un processo IntelliSense. Il limite predefinito è `4096` e il limite massimo è `16384`. Quando viene superato il limite, l'estensione verrà arrestata e riavvierà un processo IntelliSense.",
	"c_cpp.configuration.intelliSenseUpdateDelay.description": "Controlla il ritardo in millisecondi prima che IntelliSense avvii l'aggiornamento dopo una modifica.",
	"c_cpp.configuration.default.includePath.markdownDescription": "Valore da utilizzare in una configurazione se `includePath` non è specificato in `c_cpp_properties.json`. Se si specifica `includePath`, aggiungere `${default}` alla matrice per inserire i valori da questa impostazione. In genere, ciò non deve includere le inclusioni di sistema, pertanto impostare `#C_Cpp.default.compilerPath#`",
	"c_cpp.configuration.default.defines.markdownDescription": "Valore da usare in una configurazione se `defines` non è specificato oppure valori da inserire se `${default}` è presente in `defines`.",
	"c_cpp.configuration.default.macFrameworkPath.markdownDescription": "Valore da usare in una configurazione se `macFrameworkPath` non è specificato oppure valori da inserire se `${default}` è presente in `macFrameworkPath`.",
	"c_cpp.configuration.default.windowsSdkVersion.markdownDescription": "Versione del percorso di inclusione di Windows SDK da usare in Windows, ad esempio `10.0.17134.0`.",
	"c_cpp.configuration.default.compileCommands.markdownDescription": "Valore da usare in una configurazione se `compileCommands` non è specificato o impostato su `${default}`.",
	"c_cpp.configuration.default.forcedInclude.markdownDescription": "Valore da usare in una configurazione se `forcedInclude` non è specificato oppure valori da inserire se `${default}` è presente in `forcedInclude`.",
	"c_cpp.configuration.default.intelliSenseMode.markdownDescription": "Valore da usare in una configurazione se `intelliSenseMode` non è specificato o impostato su `${default}`.",
	"c_cpp.configuration.default.compilerPath.markdownDescription": "Valore da usare in una configurazione se `compilerPath` non è specificato o impostato su `${default}`.",
	"c_cpp.configuration.default.compilerArgs.markdownDescription": "Valore da usare nella configurazione se `compilerArgs` non è specificato o impostato su `${default}`.",
	"c_cpp.configuration.default.cStandard.markdownDescription": "Valore da usare in una configurazione se `cStandard` non è specificato o impostato su `${default}`.",
	"c_cpp.configuration.default.cppStandard.markdownDescription": "Valore da usare in una configurazione se `cppStandard` non è specificato o impostato su `${default}`.",
	"c_cpp.configuration.default.configurationProvider.markdownDescription": "Valore da usare in una configurazione se `configurationProvider` non è specificato o impostato su `${default}`.",
	"c_cpp.configuration.default.mergeConfigurations.markdownDescription": "Impostare su `true` per unire percorsi di inclusione, definizioni e inclusioni forzate con quelli di un provider di configurazione.",
	"c_cpp.configuration.default.browse.path.markdownDescription": "Valore da usare in una configurazione se `browse.path` non è specificato oppure valori da inserire se `${default}` è presente in `browse.path`.",
	"c_cpp.configuration.default.browse.databaseFilename.markdownDescription": "Valore da usare in una configurazione se `browse.databaseFilename` non è specificato o impostato su `${default}`.",
	"c_cpp.configuration.default.browse.limitSymbolsToIncludedHeaders.markdownDescription": "Valore da usare in una configurazione se `browse.limitSymbolsToIncludedHeaders` non è specificato o impostato su `${default}`.",
	"c_cpp.configuration.default.systemIncludePath.markdownDescription": "Valore da usare per il percorso di inclusione di sistema. Se è impostato, esegue l'override del percorso di inclusione di sistema acquisito con le impostazioni `compilerPat` e `compileCommands`.",
	"c_cpp.configuration.default.enableConfigurationSquiggles.markdownDescription": "Controlla se l'estensione segnala errori rilevati in `c_cpp_properties.json`.",
	"c_cpp.configuration.default.customConfigurationVariables.markdownDescription": "Valore da usare in una configurazione se `customConfigurationVariables` non è impostato oppure valori da inserire se `${default}` è presente come chiave in `customConfigurationVariables`.",
	"c_cpp.configuration.updateChannel.markdownDescription": "Impostare su `Insiders` per scaricare e installare automaticamente le build Insider più recenti dell'estensione, che includono funzionalità in arrivo e correzioni di bug.",
	"c_cpp.configuration.updateChannel.deprecationMessage": "Questa impostazione è deprecata. Le versioni preliminari delle estensioni ora sono disponibili tramite il Marketplace.",
	"c_cpp.configuration.default.dotConfig.markdownDescription": "Il valore da usare in una configurazione se `dotConfig` non è specificato oppure il valore da inserire se `${default}` è presente in `dotConfig`.",
	"c_cpp.configuration.experimentalFeatures.description": "Controlla se le funzionalità \"sperimentali\" sono utilizzabili.",
	"c_cpp.configuration.suggestSnippets.markdownDescription": "Se è `true`, i frammenti vengono forniti dal server di linguaggio.",
	"c_cpp.configuration.enhancedColorization.markdownDescription": "Se questa opzione è abilitata, il codice viene colorato in base a IntelliSense. Questa impostazione si applica solo se `#C_Cpp.intelliSenseEngine#` è impostato su `Default`.",
	"c_cpp.configuration.codeFolding.description": "Se è abilitata, gli intervalli di riduzione del codice vengono fornite dal server di linguaggio.",
	"c_cpp.configuration.vcpkg.enabled.markdownDescription": "Abilita i servizi di integrazione per l'[utilità di gestione dipendenze di vcpkg](https://aka.ms/vcpkg/).",
	"c_cpp.configuration.addNodeAddonIncludePaths.markdownDescription": "Aggiungere percorsi di inclusione da `nan` e `node-addon-api` quando sono dipendenze.",
	"c_cpp.configuration.renameRequiresIdentifier.markdownDescription": "Se è `true`, con 'Rinomina simbolo' sarà richiesto un identificatore C/C++ valido.",
	"c_cpp.configuration.autocompleteAddParentheses.markdownDescription": "Se è `true`, il completamento automatico aggiungerà automaticamente `(` dopo le chiamate di funzione. In tal caso potrebbe essere aggiunto anche `)`, a seconda del valore dell'impostazione `#editor.autoClosingBrackets#`.",
	"c_cpp.configuration.filesExclude.markdownDescription": "Configurare i criteri GLOB per escludere le cartelle (e i file se `#C_Cpp.exclusionPolicy#` viene modificato). Sono specifici dell'estensione C/C++ e si aggiungono a `#files.exclude#`, ma diversamente da `#files.exclude#` si applicano anche ai percorsi esterni alla cartella dell'area di lavoro corrente e non vengono rimossi dalla visualizzazione Esplora risorse. Altre informazioni sui criteri GLOB [here] (https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).",
	"c_cpp.configuration.filesExcludeBoolean.markdownDescription": "Criterio GLOB da usare per trovare percorsi file. Impostare su `true` o `false` per abilitare o disabilitare il criterio.",
	"c_cpp.configuration.filesExcludeWhen.markdownDescription": "Controllo aggiuntivo sugli elementi di pari livello di un file corrispondente. Usare `$(basename)` come variabile del nome file corrispondente.",
	"c_cpp.configuration.debugger.useBacktickCommandSubstitution.markdownDescription": "Se è `true`, per la sostituzione del comando della shell del debugger verrà usato il carattere backtick obsoleto (`).",
	"c_cpp.configuration.legacyCompilerArgsBehavior.markdownDescription": "Abilita il comportamento precedente alla versione 1.10.0 per la gestione dell'escape della shell nelle impostazioni arg del compilatore. L'escape della shell non è più previsto o supportato per impostazione predefinita nelle matrici arg a partire dalla versione 1.10.0.",
	"c_cpp.configuration.legacyCompilerArgsBehavior.deprecationMessage": "Questa impostazione è temporanea per supportare la transizione al comportamento corretto nella versione 1.10.0.",
	"c_cpp.contributes.views.cppReferencesView.title": "C/C++: Risultati altri riferimenti",
	"c_cpp.contributes.viewsWelcome.contents": "Per altre informazioni su launch.json, vedere [Configurazione del debug C/C++](https://code.visualstudio.com/docs/cpp/launch-json-reference).",
	"c_cpp.configuration.debugShortcut.description": "Mostrare il pulsante di riproduzione \"Esegui ed esegui debug\" e l'ingranaggio \"Aggiungi configurazione di debug\" nella barra del titolo dell'editor per i file C++.",
	"c_cpp.debuggers.pipeTransport.description": "Se presente, indica al debugger di connettersi a un computer remoto usando come pipe un altro eseguibile che inoltra l'input/output standard tra VS Code e l'eseguibile back-end del debugger abilitato per MI, ad esempio gdb.",
	"c_cpp.debuggers.pipeTransport.default.pipeProgram": "immettere il percorso assoluto per il nome del programma pipe, ad esempio '/usr/bin/ssh'.",
	"c_cpp.debuggers.pipeTransport.default.debuggerPath": "Percorso completo del debugger nel computer di destinazione, ad esempio /usr/bin/gdb.",
	"c_cpp.debuggers.pipeTransport.debuggerPath.description": "Percorso completo del debugger nel computer di destinazione, ad esempio /usr/bin/gdb.",
	"c_cpp.debuggers.pipeTransport.pipeCwd.description": "Percorso completo della directory di lavoro del programma pipe.",
	"c_cpp.debuggers.pipeTransport.pipeProgram.description": "Comando pipe completo da eseguire.",
	"c_cpp.debuggers.pipeTransport.pipeArgs.description": "Argomenti della riga di comando passati al programma pipe per configurare la connessione.",
	"c_cpp.debuggers.pipeTransport.pipeEnv.description": "Variabili di ambiente passate al programma pipe.",
	"c_cpp.debuggers.pipeTransport.quoteArgs.description": "Indica se i singoli argomenti di pipeProgram devono essere racchiusi tra virgolette quando contengono caratteri, ad esempio spazi o tabulazioni. Se è 'false', il comando del debugger non verrà più racchiuso automaticamente tra virgolette. L'impostazione predefinita è 'true'.",
	"c_cpp.debuggers.logging.description": "Flag facoltativi per determinare i tipi di messaggi da registrare nella Console di debug.",
	"c_cpp.debuggers.logging.exceptions.description": "Flag facoltativo per determinare se i messaggi di eccezione devono essere registrati nella Console di debug. Il valore predefinito è true.",
	"c_cpp.debuggers.logging.moduleLoad.description": "Flag facoltativo per determinare se gli eventi di caricamento del modulo devono essere registrati nella Console di debug. Il valore predefinito è true.",
	"c_cpp.debuggers.logging.programOutput.description": "Flag facoltativo per determinare se l'output del programma deve essere registrato nella Console di debug. Il valore predefinito è true.",
	"c_cpp.debuggers.logging.engineLogging.description": "Flag facoltativo per determinare se i messaggi del motore di debug di diagnostica devono essere registrati nella Console di debug. Il valore predefinito è false.",
	"c_cpp.debuggers.logging.trace.description": "Flag facoltativo per determinare se la traccia dei comandi dell'adattatore di diagnostica deve essere registrata nella Console di debug. Il valore predefinito è false.",
	"c_cpp.debuggers.logging.traceResponse.description": "Flag facoltativo per determinare se la traccia dei comandi e delle risposte dell'adattatore di diagnostica deve essere registrata nella Console di debug. Il valore predefinito è false.",
	"c_cpp.debuggers.cppvsdbg.logging.threadExit.description": "Flag facoltativo per determinare se i messaggi di uscita del thread devono essere registrati nella Console di debug. Impostazione predefinita: false.",
	"c_cpp.debuggers.cppvsdbg.logging.processExit.description": "Flag facoltativo per determinare se i messaggi di uscita del processo devono essere registrati nella Console di debug. Impostazione predefinita: true.",
	"c_cpp.debuggers.text.description": "Comando del debugger da eseguire.",
	"c_cpp.debuggers.description.description": "Descrizione facoltativa del comando.",
	"c_cpp.debuggers.ignoreFailures.description": "Se è true, gli errori del comando devono essere ignorati. Il valore predefinito è false.",
	"c_cpp.debuggers.program.description": "Percorso completo dell'eseguibile del programma.",
	"c_cpp.debuggers.args.description": "Argomenti della riga di comando passati al programma.",
	"c_cpp.debuggers.cppdbg.type.description": "Tipo del motore. Deve essere \"cppdbg\".",
	"c_cpp.debuggers.cppvsdbg.type.description": "Tipo del motore. Deve essere \"cppvsdbg\".",
	"c_cpp.debuggers.targetArchitecture.description": "Architettura dell'oggetto del debug. Verrà rilevata automaticamente a meno che non sia impostato questo parametro. Valori consentiti: x86, arm, arm64, mips, x64, amd64, x86_64.",
	"c_cpp.debuggers.cwd.description": "Directory di lavoro della destinazione.",
	"c_cpp.debuggers.setupCommands.description": "Uno o più comandi GDB/LLDB da eseguire per configurare il debugger sottostante. Esempio: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].",
	"c_cpp.debuggers.postRemoteConnectCommands.description": "Uno o più comandi eseguiti dopo la connessione remota a un server di debug.",
	"c_cpp.debuggers.customLaunchSetupCommands.description": "Se specificato, sostituisce con altri comandi i comandi predefiniti usati per avviare una destinazione. Può ad esempio essere impostato su \"-target-attach\" per eseguire il collegamento a un processo di destinazione. Se si specifica un elenco di comandi vuoto, i comandi di avvio non verranno sostituiti con altri comandi. Tale impostazione è utile se come opzioni della riga di comando del debugger vengono specificate opzioni di avvio. Esempio: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].",
	"c_cpp.debuggers.launchCompleteCommand.description": "Il comando da eseguire dopo il debugger è completamente configurato in modo da consentire l'esecuzione del processo di destinazione. I valori consentiti sono \"exec-run\", \"exec-continue\", \"None\". Il valore predefinito è \"exec-run\".",
	"c_cpp.debuggers.cppdbg.visualizerFile.description": "File con estensione natvis da usare durante il debug di questo processo. Questa opzione non è compatibile con la riformattazione GDB. Se si usa questa impostazione, vedere anche \"showDisplayString\".",
	"c_cpp.debuggers.cppdbg.svdPath.description": "Percorso completo del file SVD di un dispositivo incorporato.",
	"c_cpp.debuggers.cppvsdbg.visualizerFile.description": "File con estensione natvis da usare durante il debug di questo processo.",
	"c_cpp.debuggers.showDisplayString.description": "Quando si specifica un oggetto visualizerFile, showDisplayString abilita la stringa di visualizzazione. L'attivazione di questa opzione può comportare un rallentamento delle prestazioni durante il debug.",
	"c_cpp.debuggers.environment.description": "Variabili di ambiente da aggiungere all'ambiente per il programma. Esempio: [ { \"name\": \"config\", \"value\": \"Debug\" } ], non [ { \"config\": \"Debug\" } ].",
	"c_cpp.debuggers.envFile.description": "Percorso assoluto di un file contenente le definizioni delle variabili di ambiente. Questo file contiene su ogni riga coppie chiave-valore separate da un segno di uguale, ad esempio CHIAVE=VALORE.",
	"c_cpp.debuggers.additionalSOLibSearchPath.description": "Elenco di directory delimitate da punto e virgola da usare per la ricerca di file con estensione so. Esempio: \"c:\\dir1;c:\\dir2\".",
	"c_cpp.debuggers.MIMode.description": "Indica il debugger della console a cui si connetterà MIDebugEngine. I valori consentiti sono \"gdb\" e \"lldb\".",
	"c_cpp.debuggers.miDebuggerPath.description": "Percorso del debugger MI, ad esempio gdb. Se non viene specificato, il debugger verrà cercato prima in PATH.",
	"c_cpp.debuggers.miDebuggerArgs.description": "Argomenti aggiuntivi per il debugger MI, ad esempio gdb.",
	"c_cpp.debuggers.miDebuggerServerAddress.description": "Indirizzo di rete del server del debugger MI a cui connettersi. Esempio: localhost:1234.",
	"c_cpp.debuggers.stopAtEntry.description": "Parametro facoltativo. Se è true, il debugger deve arrestarsi in corrispondenza del punto di ingresso della destinazione. Se viene passato ProcessId, non ha alcun effetto.",
	"c_cpp.debuggers.debugServerPath.description": "Percorso completo facoltativo del server di debug da avviare. L'impostazione predefinita è Null. Viene usata insieme a \"miDebugServerAddress\" o al proprio server con un comando \"customSetupCommand\" che esegue \"-target-select remote <server:port>\".",
	"c_cpp.debuggers.debugServerArgs.description": "Argomenti facoltativi del server di debug. L'impostazione predefinita è null.",
	"c_cpp.debuggers.serverStarted.description": "Criterio facoltativo avviato dal server per cercare nell'output del server di debug. L'impostazione predefinita è null.",
	"c_cpp.debuggers.filterStdout.description": "Cerca il criterio avviato dal server nel flusso stdout e registra stdout nell'output di debug. L'impostazione predefinita è true.",
	"c_cpp.debuggers.filterStderr.description": "Cerca il criterio avviato dal server nel flusso stderr e registra stderr nell'output di debug. L'impostazione predefinita è false.",
	"c_cpp.debuggers.serverLaunchTimeout.description": "Tempo facoltativo in millisecondi in cui il debugger deve attendere l'avvio di debugServer. L'impostazione predefinita è 10000.",
	"c_cpp.debuggers.coreDumpPath.description": "Percorso completo facoltativo di un file dump di base per il programma specificato. L'impostazione predefinita è null.",
	"c_cpp.debuggers.cppdbg.externalConsole.description": "Se è true, viene avviata una console per l'oggetto del debug. Se è false, in Linux e Windows verrà visualizzato nella console integrata.",
	"c_cpp.debuggers.cppvsdbg.externalConsole.description": "[Deprecato da 'console'] Se è true, viene avviata una console per l'oggetto del debug. Se è false, non viene avviata alcuna console.",
	"c_cpp.debuggers.cppvsdbg.console.description": "Indica dove avviare la destinazione di debug. Se non è specificata, l'impostazione predefinita è 'internalConsole'.",
	"c_cpp.debuggers.cppvsdbg.console.internalConsole.description": "Invia l'output alla Console di debug di Visual Studio Code. Non supporta la lettura dell'input della console, ad esempio 'std::cin' o 'scanf'.",
	"c_cpp.debuggers.cppvsdbg.console.integratedTerminal.description": "Terminale integrato di Visual Studio Code.",
	"c_cpp.debuggers.cppvsdbg.console.externalTerminal.description": "Le applicazioni della console verranno avviate in una finestra del terminale esterna. La finestra verrà riutilizzata in scenari di riavvio e non scomparirà automaticamente alla chiusura dell'applicazione.",
	"c_cpp.debuggers.cppvsdbg.console.newExternalWindow.description": "Le applicazioni della console verranno avviate nella finestra della console esterna, che verrà terminata alla chiusura dell'applicazione. Le applicazioni non della console vengono eseguite senza un terminale e stdout/stderr verrà ignorato.",
	"c_cpp.debuggers.avoidWindowsConsoleRedirection.description": "Se è true, disabilita il reindirizzamento della console dell'oggetto del debug richiesto per il supporto del terminale integrato.",
	"c_cpp.debuggers.sourceFileMap.description": "Mapping facoltativi dei file di origine passati al motore di debug. Esempio: '{ '/original/source/path':'/current/source/path' }'.",
	"c_cpp.debuggers.processId.anyOf.description": "ID processo facoltativo a cui collegare il debugger. Usare \"${command:pickProcess}\" per ottenere un elenco dei processi locali in esecuzione a cui collegarsi. Tenere presente che alcune piattaforme richiedono privilegi di amministratore per collegarsi a un processo.",
	"c_cpp.debuggers.symbolSearchPath.description": "Elenco di directory delimitate da punto e virgola da usare per la ricerca di file di simboli, ovvero PDB. Esempio: \"c:\\dir1;c:\\dir2\".",
	"c_cpp.debuggers.dumpPath.description": "Percorso completo facoltativo di un file dump per il programma specificato. Esempio: \"c:\\temp\\app.dmp\". L'impostazione predefinita è Null.",
	"c_cpp.debuggers.enableDebugHeap.description": "Se è false, il processo verrà avviato con l'heap di debug disabilitato. Imposta la variabile di ambiente '_NO_DEBUG_HEAP' su '1'.",
	"c_cpp.debuggers.symbolLoadInfo.description": "Controllo esplicito del caricamento dei simboli.",
	"c_cpp.debuggers.symbolLoadInfo.loadAll.description": "Se è true, verranno caricati i simboli per tutte le librerie; in caso contrario, non verrà caricato alcun simbolo di solib. Il valore predefinito è true.",
	"c_cpp.debuggers.symbolLoadInfo.exceptionList.description": "Elenco di nomi di file (caratteri jolly consentiti) separati da punti e virgola ';'. Modifica il comportamento di LoadAll. Se LoadAll è True, non carica i simboli per le librerie corrispondenti a qualsiasi nome dell'elenco. In caso contrario, carica solo i simboli per le librerie corrispondenti. Esempio: 'foo.so;bar.so'.",
	"c_cpp.debuggers.requireExactSource.description": "Flag facoltativo per richiedere che il codice sorgente corrente corrisponda al PDB.",
	"c_cpp.debuggers.stopAtConnect.description": "Se è true, il debugger deve arrestarsi dopo la connessione alla destinazione. Se è false, il debugger continuerà dopo la connessione. Il valore predefinito è false.",
	"c_cpp.debuggers.hardwareBreakpoints.description": "Controllo esplicito del comportamento del punto di interruzione hardware per le destinazioni remote.",
	"c_cpp.debuggers.hardwareBreakpoints.require.description": "Se è true, utilizzare sempre i punti di interruzione hardware. Il valore predefinito è false.",
	"c_cpp.debuggers.hardwareBreakpoints.limit.description": "Limite facoltativo per il numero di punti di interruzione hardware disponibili da usare. Applicato solo quando \"require\" è true e \"limit\" è maggiore di 0. Il valore predefinito è 0.",
	"c_cpp.taskDefinitions.name.description": "Nome dell'attività.",
	"c_cpp.taskDefinitions.command.description": "Percorso di un compilatore o di uno script che esegue la compilazione.",
	"c_cpp.taskDefinitions.args.description": "Argomenti aggiuntivi da passare al compilatore o allo script di compilazione.",
	"c_cpp.taskDefinitions.options.description": "Opzioni aggiuntive del comando.",
	"c_cpp.taskDefinitions.options.cwd.description": "Directory di lavoro corrente del programma o dello script eseguito. Se omesso, viene usata la radice dell'area di lavoro corrente di Visual Studio Code.",
	"c_cpp.taskDefinitions.detail.description": "Dettagli aggiuntivi dell'attività.",
	"c_cpp.debuggers.sourceFileMap.sourceFileMapEntry.description": "Percorsi correnti e della fase di compilazione degli stessi alberi di origine. I file trovati in EditorPath vengono associati al percorso CompileTimePath per la corrispondenza dei punti di interruzione e associati da CompileTimePath a EditorPath durante la visualizzazione dei percorsi delle analisi dello stack.",
	"c_cpp.debuggers.sourceFileMap.sourceFileMapEntry.editorPath.description": "Percorso dell'albero di origine che verrà usato dall'editor.",
	"c_cpp.debuggers.sourceFileMap.sourceFileMapEntry.useForBreakpoints.description": "False se questa voce viene usata solo per il mapping dei percorsi dello stack frame. True se questa voce deve essere usata anche quando si specificano i percorsi dei punti di interruzione.",
	"c_cpp.debuggers.symbolOptions.description": "Opzioni per controllare il modo in cui vengono trovati e caricati i simboli (file PDB).",
	"c_cpp.debuggers.VSSymbolOptions.description": "Fornisce la configurazione per l'individuazione e il caricamento dei simboli nell'adattatore di debug.",
	"c_cpp.debuggers.VSSymbolOptions.searchPaths.description": "Matrice di URL del server dei simboli, ad esempio http​://MyExampleSymbolServer, o di directory, ad esempio /build/symbols, in cui eseguire la ricerca dei file PDB. La ricerca verrà eseguita in queste directory oltre che nei percorsi predefiniti, in aggiunta al modulo e al percorso in cui è stato rilasciato originariamente il file PDB.",
	"c_cpp.debuggers.VSSymbolOptions.searchMicrosoftSymbolServer.description": "Se 'true', il server dei simboli Microsoft (https​://msdl.microsoft.com​/download/symbols) viene aggiunto al percorso di ricerca dei simboli. Se non è specificata, l'impostazione predefinita di questa opzione è 'false'.",
	"c_cpp.debuggers.VSSymbolOptions.cachePath.description": "Directory in cui i simboli scaricati dai server dei simboli devono essere memorizzati nella cache. Se non è specificata, in Windows il debugger userà come impostazione predefinita %TEMP%\\SymbolCache.",
	"c_cpp.debuggers.VSSymbolOptions.moduleFilter.description": "Fornisce le opzioni per controllare i moduli (file DLL) per i quali il debugger tenterà di caricare i simboli (file PDB).",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.description": "Fornisce la configurazione per il caricamento dei simboli nell'adattatore di debug.",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.mode.description": "Controlla in quale delle due modalità operative di base funziona il filtro del modulo.",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.mode.loadAllButExcluded.enumDescriptions": "Carica i simboli per tutti i moduli a meno che il modulo non si trovi nella matrice 'excludedModules'.",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.mode.loadOnlyIncluded.enumDescriptions": "Non provare a caricare i simboli per qualsiasi modulo a meno che non si trovi nella matrice 'includedModules' oppure non sia incluso tramite l'impostazione 'includeSymbolsNextToModules'.",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.excludedModules.description": "Matrice di moduli per cui il debugger non deve caricare i simboli. I caratteri jolly, ad esempio MyCompany.*.dll, sono supportati.\n\nQuesta proprietà viene ignorata a meno che 'mode' non sia impostato su 'loadAllButExcluded'.",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.includedModules.description": "Matrice di moduli per cui il debugger deve caricare i simboli. I caratteri jolly, ad esempio MyCompany.*.dll, sono supportati.\n\nQuesta proprietà viene ignorata a meno che 'mode' non sia impostato su 'loadOnlyIncluded'.",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.includeSymbolsNextToModules.description": "Se è true, per qualsiasi modulo non presente nella matrice 'includedModules', il debugger eseguirà comunque il controllo in aggiunta al modulo stesso e all'eseguibile di avvio, ma non controllerà nei percorsi dell'elenco di ricerca dei simboli. L'impostazione predefinita di questa opzione è 'true'.\n\nQuesta proprietà viene ignorata a meno che 'mode' non sia impostato su 'loadOnlyIncluded'.",
	"c_cpp.semanticTokenTypes.referenceType.description": "Stile per i tipi di riferimento C++/CLI.",
	"c_cpp.semanticTokenTypes.cliProperty.description": "Stile per le proprietà C++/CLI.",
	"c_cpp.semanticTokenTypes.genericType.description": "Stile per tipi generici C++/CLI.",
	"c_cpp.semanticTokenTypes.valueType.description": "Stile per i tipi di valore C++/CLI.",
	"c_cpp.semanticTokenTypes.templateFunction.description": "Stile per le funzioni modello C++.",
	"c_cpp.semanticTokenTypes.templateType.description": "Stile per i tipi di modello C++.",
	"c_cpp.semanticTokenTypes.operatorOverload.description": "Stile per gli operatori di overload di C++.",
	"c_cpp.semanticTokenTypes.memberOperatorOverload.description": "Stile per le funzioni membro dell'operatore di overload di C++.",
	"c_cpp.semanticTokenTypes.newOperator.description": "Stile per gli operatori C++ `new` o `delete`.",
	"c_cpp.semanticTokenTypes.customLiteral.description": "Stile per le stringhe letterali definite dall'utente di C++.",
	"c_cpp.semanticTokenTypes.numberLiteral.description": "Stile per i numeri letterali C++ definiti dall'utente.",
	"c_cpp.semanticTokenTypes.stringLiteral.description": "Stile per le stringhe letterali definite dall'utente di C++.",
	"c_cpp.semanticTokenModifiers.global.description": "Stile da usare per i simboli globali.",
	"c_cpp.semanticTokenModifiers.local.description": "Stile da usare per i simboli locali."
}