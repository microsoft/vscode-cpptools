/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.name": "Identificatore di configurazione. Mac, Linux e Win32 sono identificatori speciali delle configurazioni che verranno selezionati automaticamente in queste piattaforme, ma come identificatore è possibile specificarne uno qualsiasi.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.compilerPath": "Percorso completo del compilatore usato, ad esempio /usr/bin/gcc, per abilitare una versione più accurata di IntelliSense.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.compilerArgs": "Argomenti del compilatore per modificare le direttive include o define usate, ad esempio -nostdinc++, -m32 e così via.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.cStandard": "Versione dello standard del linguaggio C da usare per IntelliSense. Nota: gli standard GNU vengono usati solo per eseguire query sul compilatore impostato per ottenere le definizioni di GNU. IntelliSense emulerà la versione dello standard di C equivalente.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.cppStandard": "Versione dello standard del linguaggio C++ da usare per IntelliSense. Nota: gli standard GNU vengono usati solo per eseguire query sul compilatore impostato per ottenere le definizioni di GNU. IntelliSense emulerà la versione dello standard di C++ equivalente.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.compileCommands": "Percorso completo del file compile_commands.json per l'area di lavoro.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.includePath": "Elenco di percorsi che il motore IntelliSense userà durante la ricerca delle intestazioni incluse. La ricerca in questi percorsi non è ricorsiva. Specificare '**' per indicare la ricerca ricorsiva. Ad esempio: con '${workspaceFolder}/**' la ricerca verrà estesa a tutte le sottodirectory, mentre con '${workspaceFolder}' sarà limitata a quella corrente.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.macFrameworkPath": "Elenco di percorsi che il motore IntelliSense userà durante la ricerca delle intestazioni incluse da framework Mac. Supportato solo nella configurazione Mac.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.windowsSdkVersion": "Versione del percorso di inclusione di Windows SDK da usare in Windows, ad esempio '10.0.17134.0'.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.defines": "Elenco di definizioni del preprocessore che il motore IntelliSense userà durante l'analisi dei file. Facoltativamente, usare = per impostare un valore, ad esempio VERSION=1.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.intelliSenseMode": "Modalità IntelliSense da usare per eseguire il mapping a una variante della piattaforma e dell'architettura di MSVC, gcc o Clang. Se non è impostata o se è impostata su ${default}, sarà l'estensione a scegliere il valore predefinito per tale piattaforma. L'impostazione predefinita di Windows è windows-msvc-x64, quella di Linux è linux-gcc-x64 e quella di macOS è macos-clang-x64. Le modalità IntelliSense che specificano solo varianti <compilatore>-<architettura> (ad esempio gcc-x64) sono modalità legacy e vengono convertite automaticamente nelle varianti <piattaforma>-<compilatore>-<architettura> in base alla piattaforma host.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.forcedInclude": "Elenco di file che devono essere inclusi prima di qualsiasi file include in un'unità di conversione.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.configurationProvider": "ID di un'estensione VS Code che può fornire informazioni di configurazione IntelliSense per i file di origine.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.browse.properties.limitSymbolsToIncludedHeaders": "true per elaborare solo i file inclusi direttamente o indirettamente come intestazioni; false per elaborare tutti i file nei percorsi di inclusione specificati.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.browse.properties.databaseFilename": "Percorso del database dei simboli generato. Se viene specificato un percorso relativo, sarà relativo al percorso di archiviazione predefinito dell'area di lavoro.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.browse.properties.path": "Elenco di percorsi da usare per l'indicizzazione e l'analisi dei simboli dell'area di lavoro (usati da Vai alla definizione, Trova tutti i riferimenti e così via). Per impostazione predefinita, la ricerca in questi percorsi è ricorsiva. Specificare '**' per indicare la ricerca non ricorsiva. Ad esempio, con '${workspaceFolder}' la ricerca verrà estesa a tutte le sottodirectory, mentre con '${workspaceFolder}/*' sarà limitata a quella corrente.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.customConfigurationVariables": "Variabili personalizzate su cui è possibile eseguire query tramite il comando ${cpptools:activeConfigCustomVariable} da usare per le variabili di input in launch.json o tasks.json.",
	"c_cpp_properties.schema.json.definitions.env": "Variabili personalizzate che è possibile riutilizzare in qualsiasi punto del file usando la sintassi ${variabile} o ${env:variabile}.",
	"c_cpp_properties.schema.json.definitions.version": "Versione del file di configurazione. Questa proprietà è gestita dall'estensione. Non modificarla.",
	"c_cpp_properties.schema.json.definitions.enableConfigurationSquiggles": "Controlla se l'estensione segnalerà errori rilevati in c_cpp_properties.json."
}