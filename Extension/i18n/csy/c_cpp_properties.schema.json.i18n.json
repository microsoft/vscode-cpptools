/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.name": "Identifikátor konfigurace. `Mac`, `Linux`a `Win32` jsou speciální identifikátory pro konfigurace, které se pro dané platformy vyberou automaticky, ale jinak může být identifikátorem cokoli.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.compilerPath": "Úplná cesta ke kompilátoru, který se použije, třeba `/usr/bin/gcc`. Umožní přesnější IntelliSense.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.compilerArgs": "Argumenty kompilátoru pro úpravu použitých zahrnutí nebo definic, například `-nostdinc++`, `-m32` atd. Argumenty, které přijímají další argumenty oddělené mezerou, by se měly zadat jako samostatné argumenty v poli, například pro `--sysroot <arg>` použijte `\"--sysroot\", \"<arg>\"`.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.cStandard": "Verze standardu jazyka C, která se použije pro IntelliSense. Poznámka: Standardy GNU se používají jen k odeslání dotazu nastavenému kompilátoru, aby se získaly definice GNU. IntelliSense bude emulovat ekvivalentní verzi standardu C.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.cppStandard": "Verze standardu jazyka C++, která se použije pro IntelliSense. Poznámka: Standardy GNU se používají jen k odeslání dotazu nastavenému kompilátoru, aby se získaly definice GNU. IntelliSense bude emulovat ekvivalentní verzi standardu C++.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.compileCommands": "Úplná cesta k souboru `compile_commands.json` pro pracovní prostor.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.includePath": "Seznam cest, které modul IntelliSense použije při hledání zahrnutých hlaviček. Hledání v těchto cestách není rekurzivní. Pokud chcete zapnout rekurzivní hledání, zadejte `**`. Například při zadání `${workspaceFolder}/**` se bude hledat ve všech podadresářích, zatímco při zadání `${workspaceFolder}` nebude. Obvykle by se neměly zahrnovat systémové vložené soubory. Místo toho nastavte `C_Cpp.default.compilerPath`.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.macFrameworkPath": "Seznam cest pro modul IntelliSense, který se použije při hledání zahrnutých hlaviček z architektur Mac. Podporuje se jen pro konfiguraci pro Mac.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.windowsSdkVersion": "Verze cesty pro vložené soubory sady Windows SDK, která se má použít ve Windows, např. `10.0.17134.0`.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.dotConfig": "Cesta k souboru .config vytvořenému systémem Kconfig. Systém Kconfig vygeneruje soubor se všemi definicemi pro sestavení projektu. Příkladem projektů, které používají systém Kconfig, jsou Linux Kernel a NuttX RTOS.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.defines": "Seznam definic preprocesoru, které modul IntelliSense použije při parsování souborů. Volitelně můžete pomocí `=` nastavit hodnotu, například `VERSION=1`.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.intelliSenseMode": "Režim IntelliSense, který se použije a mapuje na variantu platformy a architektury MSVC, gcc nebo Clang. Pokud se nenastaví nebo nastaví na `${default}`, rozšíření zvolí výchozí režim pro danou platformu. Výchozí možnost pro Windows je `windows-msvc-x64`, pro Linux `linux-gcc-x64` a pro macOS `macos-clang-x64`. Režimy IntelliSense, které specifikují pouze varianty `<kompilátor>-<architektura>` (např. `gcc-x64`), jsou starší režimy a automaticky se převádí na varianty `<platforma>-<kompilátor>-<architektura>` založené na hostitelské platformě.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.forcedInclude": "Seznam souborů, které by se měly zahrnout dříve než kterýkoli vložený soubor v jednotce překladu",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.configurationProvider": "ID rozšíření VS Code, které může funkci IntelliSense poskytnout informace o konfiguraci pro zdrojové soubory.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.mergeConfigurations": "Nastavte možnost `true`, pokud chcete sloučit cesty k zahrnutým souborům, direktivy define a vynucená zahrnutí s těmi od poskytovatele konfigurace.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.browse.properties.limitSymbolsToIncludedHeaders": "Nastavte na hodnotu `true`, pokud chcete zpracovat jen soubory přímo nebo nepřímo zahrnuté jako hlavičky. Pokud chcete zpracovat všechny soubory na zadaných cestách pro vložené soubory, nastavte na hodnotu `false`.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.browse.properties.databaseFilename": "Cesta k vygenerované databázi symbolů. Pokud se zadá relativní cesta, nastaví se jako relativní k výchozímu umístění úložiště pracovního prostoru.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.browse.properties.path": "Seznam cest, které se použijí pro indexování a parsování symbolů pracovního prostoru (použijí se pro funkce Go to Definition, Find All References apod.). Hledání na těchto cestách je standardně rekurzivní. Pokud chcete zadat nerekurzivní vyhledávání, zadejte `*`. Například `${workspaceFolder}` prohledá všechny podadresáře, ale `${workspaceFolder}/*` ne.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.customConfigurationVariables": "Vlastní proměnné, na které se dá poslat dotaz prostřednictvím příkazu `${cpptools:activeConfigCustomVariable}`, aby se použily jako vstupní proměnné v souborech `launch.json` nebo `tasks.json`.",
	"c_cpp_properties.schema.json.definitions.env": "Vlastní proměnné, které se dají opakovaně použít kdekoli v tomto souboru pomocí syntaxe `${proměnná}` nebo `${env:proměnná}`.",
	"c_cpp_properties.schema.json.definitions.version": "Verze konfiguračního souboru. Tuto vlastnost spravuje rozšíření. Neměňte ji prosím.",
	"c_cpp_properties.schema.json.definitions.enableConfigurationSquiggles": "Určuje, jestli rozšíření ohlásí chyby zjištěné v souboru `c_cpp_properties.json`."
}