/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"c_cpp.subheaders.intelliSense.title": "IntelliSense",
	"c_cpp.subheaders.formatting.title": "Formato",
	"c_cpp.subheaders.codeDocumentation.title": "Documentación del código",
	"c_cpp.subheaders.codeAnalysis.title": "Análisis de código",
	"c_cpp.subheaders.debugging.title": "Depuración",
	"c_cpp.subheaders.resourceManagement.title": "Administración de recursos",
	"c_cpp.subheaders.miscellaneous.title": "Varios",
	"c_cpp.capabilities.untrustedWorkspaces.description": "La configuración múltiple puede provocar que los procesos sean locales en el área de trabajos que se va a ejecutar, por ejemplo, C_Cpp.clang_format_path, C_Cpp.codeAnalysis.clangTidy.path, C_Cpp.addNodeAddonIncludePaths, C_Cpp.default.compilerPath, C_Cpp.default.configurationProvider y C_Cpp.default.compileCommands y las propiedades equivalentes en c_cpp_properties.json.",
	"c_cpp.command.configurationSelect.title": "Seleccione una configuración...",
	"c_cpp.command.configurationProviderSelect.title": "Cambiar el proveedor de configuración...",
	"c_cpp.command.configurationEditJSON.title": "Editar configuraciones (JSON)",
	"c_cpp.command.configurationEditUI.title": "Editar configuraciones (interfaz de usuario)",
	"c_cpp.command.selectIntelliSenseConfiguration.title": "Seleccionar configuración de IntelliSense...",
	"c_cpp.command.installCompiler.title": "Instalar un compilador de C++",
	"c_cpp.command.rescanCompilers.title": "Volver a examinar los compiladores",
	"c_cpp.command.switchHeaderSource.title": "Cambiar el encabezado o el origen",
	"c_cpp.command.enableErrorSquiggles.title": "Habilitar el subrayado ondulado de errores",
	"c_cpp.command.disableErrorSquiggles.title": "Deshabilitar el subrayado ondulado de errores",
	"c_cpp.command.toggleIncludeFallback.title": "Alternar el elemento Fallback del motor de IntelliSense cuando se producen errores de include",
	"c_cpp.command.toggleDimInactiveRegions.title": "Alternar el coloreado de las regiones inactivas",
	"c_cpp.command.resetDatabase.title": "Restablecer la base de datos de IntelliSense",
	"c_cpp.command.takeSurvey.title": "Realizar encuesta",
	"c_cpp.command.restartIntelliSenseForFile.title": "Reiniciar IntelliSense para el archivo activo",
	"c_cpp.command.logDiagnostics.title": "Registrar diagnósticos",
	"c_cpp.command.referencesViewGroupByType.title": "Agrupar por tipo de referencia",
	"c_cpp.command.referencesViewUngroupByType.title": "Desagrupar por tipo de referencia",
	"c_cpp.command.rescanWorkspace.title": "Volver a examinar el área de trabajo",
	"c_cpp.command.vcpkgClipboardInstallSuggested.title": "Copiar el comando vcpkg install en el Portapapeles",
	"c_cpp.command.vcpkgOnlineHelpSuggested.title": "Visitar la página de ayuda de vcpkg",
	"c_cpp.command.generateEditorConfig.title": "Generar contenido de EditorConfig a partir de la configuración de formato de VC",
	"c_cpp.command.GoToNextDirectiveInGroup.title": "Ir a la directiva del preprocesador siguiente en el grupo condicional",
	"c_cpp.command.GoToPrevDirectiveInGroup.title": "Ir a la directiva del preprocesador anterior en el grupo condicional",
	"c_cpp.command.CreateDeclarationOrDefinition.title": "Crear declaración o definición",
	"c_cpp.command.RunCodeAnalysisOnActiveFile.title": "Ejecutar Code Analysis en el archivo activo",
	"c_cpp.command.RunCodeAnalysisOnOpenFiles.title": "Ejecutar análisis de código en archivos abiertos",
	"c_cpp.command.RunCodeAnalysisOnAllFiles.title": "Ejecutar análisis de código en todos los archivos",
	"c_cpp.command.RemoveAllCodeAnalysisProblems.title": "Borrar todos los problemas de Code Analysis",
	"c_cpp.command.BuildAndDebugFile.title": "Depurar archivo C/C++",
	"c_cpp.command.BuildAndRunFile.title": "Ejecutar archivo C/C++",
	"c_cpp.command.AddDebugConfiguration.title": "Agregar configuración de depuración",
	"c_cpp.command.GenerateDoxygenComment.title": "Generar comentario de Doxygen",
	"c_cpp.command.addSshTarget.title": "Agregar destino SSH",
	"c_cpp.command.removeSshTarget.title": "Quitar destino SSH",
	"c_cpp.command.setActiveSshTarget.title": "Establecer este destino SSH como destino activo",
	"c_cpp.command.selectActiveSshTarget.title": "Selección de un destino SSH activo",
	"c_cpp.command.selectSshTarget.title": "Seleccionar destino SSH",
	"c_cpp.command.activeSshTarget.title": "Obtención del destino SSH activo",
	"c_cpp.command.refreshCppSshTargetsView.title": "Actualizar",
	"c_cpp.command.sshTerminal.title": "Conectarse a este destino SSH en un nuevo terminal",
	"c_cpp.configuration.maxConcurrentThreads.markdownDescription": "Número máximo de subprocesos simultáneos que se usarán para el procesamiento del servicio de lenguaje. El valor es una sugerencia y no se puede usar siempre. El valor predeterminado de `null` (vacío) usa el número de procesadores lógicos disponibles.",
	"c_cpp.configuration.maxCachedProcesses.markdownDescription": "Número máximo de procesos almacenados en caché que se usarán para el procesamiento del servicio de lenguaje. El valor predeterminado de `null` (vacío) usa el doble de procesadores lógicos disponibles.",
	"c_cpp.configuration.maxMemory.markdownDescription": "Memoria máxima (en MB) disponible para el procesamiento del servicio de lenguaje. Menos procesos se almacenarán en caché y se ejecutarán simultáneamente después de que se supere el uso de memoria. El valor predeterminado de `null` (vacío) usa la memoria libre del sistema.",
	"c_cpp.configuration.intelliSense.maxCachedProcesses.markdownDescription": "Número máximo de procesos de IntelliSense que se van a seguir ejecutando. El valor predeterminado `null` (vacío) usa el valor heredado de `#C_Cpp.maxCachedProcesses#`.",
	"c_cpp.configuration.intelliSense.maxMemory.markdownDescription": "Los procesos anteriores de IntelliSense se cerrarán antes de que se creen nuevos procesos después de superar este uso de memoria (en MB). El valor predeterminado de `null` (vacío) usa el valor heredado de `#C_Cpp.maxMemory#`.",
	"c_cpp.configuration.references.maxConcurrentThreads.markdownDescription": "Número máximo de subprocesos simultáneos que se usarán para 'Buscar todas las referencias' y 'Cambiar nombre'. El valor predeterminado de `null` (vacío) usa el valor heredado de `#C_Cpp.maxConcurrentThreads#`.",
	"c_cpp.configuration.references.maxCachedProcesses.markdownDescription": "Número máximo de procesos que se mantendrán en memoria para 'Buscar todas las referencias' y 'Cambiar nombre'. El valor `0` deshabilita esta característica. El valor `null` (vacío) usa el valor heredado de `#C_Cpp.maxCachedProcesses#`.",
	"c_cpp.configuration.references.maxMemory.markdownDescription": "Menos procesos de 'Buscar todas las referencias' y 'Cambiar nombre' se ejecutarán simultáneamente después de superar este uso de memoria (en MB). El valor predeterminado de `null` (vacío) usa el valor heredado de `#C_Cpp.maxMemory#`.",
	"c_cpp.configuration.codeAnalysis.maxConcurrentThreads.markdownDescription": "Número máximo de subprocesos simultáneos que se usarán para análisis de código. El valor predeterminado de `null` (vacío) usa la mitad del valor heredado de `#C_Cpp.maxConcurrentThreads#`.",
	"c_cpp.configuration.codeAnalysis.maxMemory.markdownDescription": "Menos procesos de análisis de código se ejecutarán simultáneamente después de superar este uso de memoria (en MB). El valor predeterminado de `null` (vacío) usa el valor heredado de `#C_Cpp.maxMemory#`.",
	"c_cpp.configuration.codeAnalysis.updateDelay.markdownDescription": "Controla el retraso en milisegundos antes de que el análisis de código empiece a procesarse después de que se desencadene un guardado desde una edición cuando `#files.autoSave#` es `afterDelay` y `#C_Cpp.codeAnalysis.runAutomatically#` es `true`.",
	"c_cpp.configuration.codeAnalysis.exclude.markdownDescription": "Configure patrones globales para excluir carpetas y archivos para el análisis de código. Los archivos que no estén en la carpeta del área de trabajo siempre se excluyen. Hereda valores de `#files.exclude#` y `#C_Cpp.files.exclude#`. Más información sobre los patrones globales [aquí](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).",
	"c_cpp.configuration.codeAnalysis.excludeBoolean.markdownDescription": "El patrón global con el que se van a comparar las rutas de acceso de los archivos. Establézcalo en `true` o `false` para habilitarlo o deshabilitarlo.",
	"c_cpp.configuration.codeAnalysis.excludeWhen.markdownDescription": "Comprobación adicional de los elementos del mismo nivel de un archivo coincidente. Usa `$(basename)` como variable para el nombre del archivo coincidente.",
	"c_cpp.configuration.codeAnalysis.runAutomatically.markdownDescription": "Si es `true`, el análisis de código se ejecutará automáticamente en un archivo después de abrirlo o guardarlo.",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showDisable.markdownDescription": "Si es `true`, la acción de código 'Deshabilitar' se mostrará cuando esté disponible (la próxima vez que se ejecute el análisis de código). Cuando se usa la acción de código 'Deshabilitar', agrega el código de advertencia a la configuración `C_Cpp.codeAnalysis.clangTidy.checks.disabled`.",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showDocumentation.markdownDescription": "Si es `true`, la acción de código 'Mostrar documentación de' se mostrará cuando esté disponible (la próxima vez que se ejecute el análisis de código).",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.description": "Controla qué opciones de acción de código de problema de análisis de código 'Borrar' están disponibles. Cambiar la configuración para mostrar más opciones puede requerir volver a ejecutar el análisis de código.",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.None.description": "No mostrar acciones de código 'Borrar'.",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.AllOnly.description": "Mostrar solo la acción de código 'Borrar todo' (o 'Borrar todos los <type>' si solo hay un tipo o 'Borrar esto' si solo hay un problema).",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.AllAndAllType.description": "Mostrar la acción de código 'Borrar todo' (si hay varios tipos de problema) y la acción de código 'Borrar todos los <type>' (o 'Borrar esto' si solo hay un problema para el <type>)",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.AllAndAllTypeAndThis.description": "Mostrar las acciones de código 'Borrar todo' (si hay varios tipos de problema), 'Borrar todos los <type>' (si hay varios problemas para el <type>) y 'Borrar este'",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.formatFixes.markdownDescription": "Si es `true`, el formato se ejecutará en las líneas modificadas por las acciones de código \"Corregir\".",
	"c_cpp.configuration.codeAnalysis.clangTidy.enabled.markdownDescription": "Si es `true`, el análisis de código que usa `clang-tidy` se habilitará y se ejecutará automáticamente si `#C_Cpp.codeAnalysis.runAutomatically#` es `true` (valor predeterminado).",
	"c_cpp.configuration.codeAnalysis.clangTidy.path.markdownDescription": "Ruta de acceso completa del archivo ejecutable de `clang-tidy`. Si no se especifica y `clang-tidy` está disponible en la ruta de acceso del entorno, se usará este. Si no se encuentra en la ruta de acceso del entorno, se usará el `clang-tidy` incluido con la extensión.",
	"c_cpp.configuration.codeAnalysis.clangTidy.config.markdownDescription": "Especifica una configuración `clang-tidy` en formato YAML/JSON: `{Checks: '-*,clang-analyzer-*', CheckOptions: [{clave: x, valor: y}]}`. Cuando el valor está vacío, `clang-tidy` intentará encontrar un archivo denominado `.clang-tidy` para cada archivo de origen en sus directorios primarios.",
	"c_cpp.configuration.codeAnalysis.clangTidy.fallbackConfig.markdownDescription": "Especifica una configuración `clang-tidy` en formato YAML/JSON que se usará como reserva cuando no se establezca `#C_Cpp.codeAnalysis.clangTidy.config#` y no se encuentre ningún archivo `.clang-tidy`: `{Checks: '-*,clang-analyzer-*', CheckOptions: [{clave: x, valor: y}]}`.",
	"c_cpp.configuration.codeAnalysis.clangTidy.headerFilter.markdownDescription": "Expresión regular extendida (ERE) POSIX que coincide con los nombres de los encabezados de los que se van a generar diagnósticos. Siempre se muestran los diagnósticos del archivo principal de cada unidad de traducción. Se admite la variable `${workspaceFolder}` (y se usa como valor de reserva predeterminado si no existe ningún archivo `.clang-tidy`). Si esta opción no es `null` (vacía), invalida la opción `HeaderFilterRegex` en un archivo `.clang-tidy`, si existe.",
	"c_cpp.configuration.codeAnalysis.clangTidy.args.markdownDescription": "Argumentos adicionales de la línea de comandos que se pasan a `clang-tidy`. Tienen prioridad sobre la configuración equivalente `C_Cpp.codeAnalysis.clangTidy.*`.",
	"c_cpp.configuration.codeAnalysis.clangTidy.useBuildPath.markdownDescription": "Si se establece `true` y `compileCommands`, el argumento `-p=<build-path>` se pasa a `clang-tidy` en lugar de pasar los argumentos de compilación después de `--`. Esto puede no funcionar si no se establecen las variables de entorno para que se puedan encontrar las inclusiones del sistema.",
	"c_cpp.configuration.codeAnalysis.clangTidy.checks.enabled.markdownDescription": "Lista de comprobaciones `clang-tidy` habilitadas. Los valores se anexan a `Checks` en un archivo `.clang-tidy` o `#C_Cpp.codeAnalysis.clangTidy.config#`, si los hay. La comprobación predeterminada `clang-analyzer-*` se usa siempre a menos que se deshabilite explícitamente.",
	"c_cpp.configuration.codeAnalysis.clangTidy.checks.disabled.markdownDescription": "Lista de comprobaciones `clang-tidy` deshabilitadas. Los valores se anexan a `Checks` en un archivo `.clang-tidy` o `#C_Cpp.codeAnalysis.clangTidy.config#`, si los hay.",
	"c_cpp.configuration.formatting.description": "Configura el motor de formato",
	"c_cpp.configuration.formatting.clangFormat.markdownDescription": "`clang-format` se usará para formatear el código.",
	"c_cpp.configuration.formatting.vcFormat.markdownDescription": "El motor de formato de Visual C++ se usará para formatear el código.",
	"c_cpp.configuration.formatting.Default.markdownDescription": "De forma predeterminada, se usará `clang-format` para dar formato al código. Sin embargo, se usará el motor de formato de Visual C++ si se encuentra un archivo `.editorconfig` con la configuración pertinente más cerca del código al que se da formato y `#C_Cpp.clang_format_style#` es el valor predeterminado: `file`.",
	"c_cpp.configuration.formatting.Disabled.markdownDescription": "El formato del código se deshabilitará.",
	"c_cpp.configuration.vcFormat.indent.braces.markdownDescription": "Se aplica a las llaves la sangría especificada en la configuración de `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.description": "Determina a qué se refiere la sangría de la nueva línea.",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.outermostParenthesis.description": "Aplica sangría a la nueva línea en relación con el paréntesis de apertura más externo.",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.innermostParenthesis.description": "Aplica sangría a la nueva línea en relación con el paréntesis de apertura más interno.",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.statementBegin.description": "Aplica sangría a la nueva línea en relación con el principio de la instrucción actual.",
	"c_cpp.configuration.vcFormat.indent.withinParentheses.markdownDescription": "Al escribirse una línea nueva, se alinea bajo el paréntesis de apertura o en función del valor `#C_Cpp.vcFormat.indent.multiLineRelativeTo#`.",
	"c_cpp.configuration.vcFormat.indent.withinParentheses.alignToParenthesis.markdownDescription": "La línea nueva se alinea bajo el paréntesis de apertura.",
	"c_cpp.configuration.vcFormat.indent.withinParentheses.indent.markdownDescription": "Se aplica sangría a la línea nueva en función de `#C_Cpp.vcFormat.indent.multiLineRelativeTo#`.",
	"c_cpp.configuration.vcFormat.indent.preserveWithinParentheses.description": "En el código existente, conserve la alineación de sangría existente de las líneas nuevas entre paréntesis.",
	"c_cpp.configuration.vcFormat.indent.caseLabels.markdownDescription": "Se aplica sangría a las etiquetas en relación con las instrucciones switch según la cantidad especificada en el valor `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.caseContents.markdownDescription": "Se aplica sangría al código dentro del bloque `case` en relación con su etiqueta según la cantidad especificada en la configuración `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.caseContentsWhenBlock.markdownDescription": "Se aplica sangría a las llaves siguiendo una instrucción case, según lo especificado en la configuración de `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.lambdaBracesWhenParameter.markdownDescription": "Se aplica sangría a las llaves de expresiones lambda usadas como parámetros de función en relación con el inicio de la instrucción, según lo especificado en la configuración de `#editor.tabSize#`",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.description": "La posición de las etiquetas goto.",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.oneLeft.markdownDescription": "Coloca las etiquetas goto a la izquierda de la sangría de código actual, según la cantidad especificada en la configuración de `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.leftmostColumn.markdownDescription": "Coloca las etiquetas goto en el borde izquierdo del código.",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.none.markdownDescription": "Las etiquetas Goto no se formatearán.",
	"c_cpp.configuration.vcFormat.indent.preprocessor.description": "La posición de las directivas de preprocesador.",
	"c_cpp.configuration.vcFormat.indent.preprocessor.oneLeft.markdownDescription": "Las directivas de preprocesador se colocan a la izquierda de la sangría de código actual, según la cantidad especificada en la configuración de `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.preprocessor.leftmostColumn.markdownDescription": "Las directivas de preprocesador se colocan en el borde izquierdo del código.",
	"c_cpp.configuration.vcFormat.indent.preprocessor.none.markdownDescription": "Las directivas de preprocesador no se formatearán.",
	"c_cpp.configuration.vcFormat.indent.accessSpecifiers.markdownDescription": "Se aplica sangría a los especificadores de acceso en relación con las definiciones de clase o estructura según la cantidad especificada en el valor `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.namespaceContents.markdownDescription": "Se aplica sangría al código en relación con su espacio de nombres envolvente, según lo especificado en la configuración de `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.preserveComments.description": "La sangría de los comentarios no se cambia durante las operaciones de formato.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.namespace.description": "La posición de las llaves de apertura para los espacios de nombres.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.type.description": "La posición de las llaves de apertura para las definiciones de tipo.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.lambda.description": "La posición de las llaves de apertura para las funciones lambda.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.function.description": "La posición de las llaves de apertura para las funciones.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.block.description": "La posición de las llaves de apertura de los bloques de control.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.newLine.description": "Las llaves de apertura se mueven a una nueva línea.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.sameLine.description": "Las llaves de apertura se mantienen en la misma línea y se agrega un espacio delante de cada una.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.ignore.description": "Las llaves de apertura no tienen formato.",
	"c_cpp.configuration.vcFormat.newLine.scopeBracesOnSeparateLines.description": "Coloca las llaves de apertura y de cierre para los ámbitos en líneas separadas.",
	"c_cpp.configuration.vcFormat.newLine.closeBraceSameLine.emptyType.description": "Para los tipos vacíos, mueve las llaves de cierre a la misma línea que las de apertura.",
	"c_cpp.configuration.vcFormat.newLine.closeBraceSameLine.emptyFunction.description": "Para los cuerpos de función vacíos, mueve las llaves de cierre a la misma línea que las de apertura.",
	"c_cpp.configuration.vcFormat.newLine.beforeCatch.markdownDescription": "Coloca `catch` y palabras clave similares en una línea nueva.",
	"c_cpp.configuration.vcFormat.newLine.beforeElse.markdownDescription": "Coloca `else` en una línea nueva.",
	"c_cpp.configuration.vcFormat.newLine.beforeWhileInDoWhile.markdownDescription": "Coloca `while` en un bucle `do`-`while` en una línea nueva.",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.description": "Espaciado entre nombres de funciones y paréntesis de apertura de listas de argumentos.",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.insert.description": "Agrega un espacio delante del paréntesis de apertura de una función.",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.remove.description": "Se quitan los espacios que están delante del paréntesis de apertura de una función.",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.ignore.description": "Los espacios se dejan tal como se insertan.",
	"c_cpp.configuration.vcFormat.space.withinParameterListParentheses.description": "Se agrega un espacio después del paréntesis de apertura y también antes del paréntesis de cierre de las listas de parámetros de función.",
	"c_cpp.configuration.vcFormat.space.betweenEmptyParameterListParentheses.description": "Cuando una lista de parámetros de función está vacía, se inserta un espacio entre los paréntesis de esta.",
	"c_cpp.configuration.vcFormat.space.afterKeywordsInControlFlowStatements.description": "Se agrega un espacio entre la palabra clave y el paréntesis de apertura en las instrucciones de flujo de control.",
	"c_cpp.configuration.vcFormat.space.withinControlFlowStatementParentheses.description": "Se agrega un espacio después del paréntesis de apertura y también antes del paréntesis de cierre de las instrucciones de flujo de control.",
	"c_cpp.configuration.vcFormat.space.beforeLambdaOpenParenthesis.description": "Se agrega un espacio delante del paréntesis de apertura de las listas de argumentos lambda.",
	"c_cpp.configuration.vcFormat.space.withinCastParentheses.description": "Se agrega un espacio después del paréntesis de apertura y también antes del paréntesis de cierre de una conversión de estilo de C.",
	"c_cpp.configuration.vcFormat.space.afterCastCloseParenthesis.description": "Se agrega un espacio después del paréntesis de cierre de una conversión de estilo de C.",
	"c_cpp.configuration.vcFormat.space.withinExpressionParentheses.description": "Se agrega un espacio después del paréntesis de apertura y también antes del paréntesis de cierre de una expresión entre paréntesis.",
	"c_cpp.configuration.vcFormat.space.beforeBlockOpenBrace.description": "Se agrega un espacio delante de las llaves de apertura de los bloques de ámbito.",
	"c_cpp.configuration.vcFormat.space.betweenEmptyBraces.description": "Cuando las llaves están vacías y en la misma línea, se inserta un espacio entre ellas.",
	"c_cpp.configuration.vcFormat.space.beforeInitializerListOpenBrace.description": "Se agrega un espacio delante de la llave de apertura de inicialización uniforme y las listas de inicializadores.",
	"c_cpp.configuration.vcFormat.space.withinInitializerListBraces.description": "Se agrega un espacio después de la llave de apertura y también antes de la llave de cierre de las listas de inicializadores e inicialización uniforme.",
	"c_cpp.configuration.vcFormat.space.preserveInInitializerList.description": "Los espacios alrededor de las comas se mantienen en la inicialización uniforme y las listas de inicializadores.",
	"c_cpp.configuration.vcFormat.space.beforeOpenSquareBracket.description": "Se agrega un espacio delante de los corchetes de apertura.",
	"c_cpp.configuration.vcFormat.space.withinSquareBrackets.description": "Se agrega un espacio después del corchete de apertura y también antes del corchete de cierre.",
	"c_cpp.configuration.vcFormat.space.beforeEmptySquareBrackets.description": "Cuando los corchetes están vacíos, se agrega un espacio delante del corchete de apertura.",
	"c_cpp.configuration.vcFormat.space.betweenEmptySquareBrackets.description": "Cuando los corchetes están vacíos, se inserta un espacio entre ellos.",
	"c_cpp.configuration.vcFormat.space.groupSquareBrackets.description": "En las matrices multidimensionales, se quita todo espacio entre corchetes. Se invalida cualquier otra configuración de control del espacio.",
	"c_cpp.configuration.vcFormat.space.withinLambdaBrackets.description": "Se agrega un espacio después del corchete de apertura y también antes del corchete de cierre.",
	"c_cpp.configuration.vcFormat.space.betweenEmptyLambdaBrackets.description": "Cuando los corchetes están vacíos, se inserta un espacio entre ellos.",
	"c_cpp.configuration.vcFormat.space.beforeComma.description": "Se agrega un espacio delante de cada coma.",
	"c_cpp.configuration.vcFormat.space.afterComma.description": "Se agrega un espacio después de cada coma.",
	"c_cpp.configuration.vcFormat.space.removeAroundMemberOperators.description": "Se quitan los espacios alrededor de los operadores de acceso a miembros, los operadores de puntero a miembro y los operadores de resolución de ámbito.",
	"c_cpp.configuration.vcFormat.space.beforeInheritanceColon.description": "Se agrega un espacio delante de los dos puntos para los tipos heredados en las definiciones de clase.",
	"c_cpp.configuration.vcFormat.space.beforeConstructorColon.description": "Se agrega un espacio delante de los dos puntos en las definiciones de constructor.",
	"c_cpp.configuration.vcFormat.space.removeBeforeSemicolon.description": "Se quitan los espacios delante de cada punto y coma.",
	"c_cpp.configuration.vcFormat.space.insertAfterSemicolon.description": "Se inserta un espacio después de cada punto y coma.",
	"c_cpp.configuration.vcFormat.space.removeAroundUnaryOperator.description": "Se quitan los espacios entre los operadores unarios y los operandos.",
	"c_cpp.configuration.vcFormat.space.aroundBinaryOperator.description": "Espacios alrededor de los operadores binarios.",
	"c_cpp.configuration.vcFormat.space.aroundAssignmentOperator.description": "Espacios alrededor de los operadores de asignación.",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.description": "Espacios alrededor de los operadores de puntero y de referencia.",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.left.description": "Los operadores de puntero y de referencia se alinean a la izquierda.",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.center.description": "Los operadores de puntero y de referencia se centran.",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.right.description": "Los operadores de puntero y de referencia se alinean a la derecha.",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.ignore.description": "Los operadores de puntero y de referencia no tienen formato.",
	"c_cpp.configuration.vcFormat.space.aroundTernaryOperator.description": "Espacios alrededor de los operadores condicionales.",
	"c_cpp.configuration.vcFormat.space.aroundOperators.insert.description": "Se agrega un espacio delante de operador y también después de este.",
	"c_cpp.configuration.vcFormat.space.aroundOperators.remove.description": "Se quitan los espacios delante y detrás del operador.",
	"c_cpp.configuration.vcFormat.space.aroundOperators.ignore.description": "Los espacios se dejan tal como se insertan.",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.description": "Opciones de ajuste para bloques.",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.oneLiners.markdownDescription": "Un bloque de código completo que se escribe en una línea se mantiene en una línea, independientemente de los valores de la configuración `C_Cpp.vcFormat.newLine.*`.",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.allOneLineScopes.markdownDescription": "Cualquier código en el que la llave de apertura y de cierre se escriba en una línea se mantiene en una sola línea, independientemente de cualquiera de los valores de configuración de `C_Cpp.vcFormat.newLine.*`.",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.never.markdownDescription": "Los bloques de código siempre tienen formato basado en los valores de la configuración `C_Cpp.vcFormat.newLine.*`.",
	"c_cpp.configuration.clang_format_path.markdownDescription": "Ruta de acceso completa del archivo ejecutable de `clang-format`. Si no se especifica y `clang-format` está disponible en la ruta de acceso del entorno, se usará este. Si no se encuentra en la ruta de acceso del entorno, se usará el `clang-format` incluido con la extensión.",
	"c_cpp.configuration.clang_format_style.markdownDescription": "Estilo de codificación. Actualmente, admite: `Visual Studio`, `LLVM`, `Google`, `Chromium`, `Mozilla`, `WebKit`, `Microsoft`, `GNU`. Use `file` para cargar el estilo de un archivo `.clang-format` en el directorio actual o primario, o use `file:<path>/.clang-format` para hacer referencia a una ruta de acceso específica. Use `{clave: valor, ...}` para establecer parámetros específicos. Por ejemplo, el estilo de `Visual Studio` es similar a: `{ BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }`.",
	"c_cpp.configuration.clang_format_fallbackStyle.markdownDescription": "Nombre del estilo predefinido que se usa como elemento fallback en el caso de que se invoque a `clang-format` con el estilo `file` y no se encuentre el archivo `.clang-format`. Los valores posibles son `Visual Studio`, `LLVM`, `Google`, `Chromium`, `Mozilla`, `WebKit`, `Microsoft`, `GNU`, `none` o usar `{clave: valor, ...}` para establecer parámetros específicos. Por ejemplo, el estilo `Visual Studio` es similar a: `{ BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }`.",
	"c_cpp.configuration.clang_format_sortIncludes.markdownDescription": "Si se establece, invalida el comportamiento de ordenación de inclusiones que determina el parámetro `SortIncludes`.",
	"c_cpp.configuration.intelliSenseEngine.description": "Controla el proveedor de IntelliSense.",
	"c_cpp.configuration.intelliSenseEngine.default.description": "Proporciona resultados que reconocen el contexto a través de un proceso de IntelliSense independiente.",
	"c_cpp.configuration.intelliSenseEngine.tagParser.description": "Proporciona resultados \"fuzzy\" que no tienen en cuenta el contexto.",
	"c_cpp.configuration.intelliSenseEngine.disabled.description": "Desactiva las características del servicio de lenguaje C/C++.",
	"c_cpp.configuration.intelliSenseEngineFallback.markdownDescription": "Controla si el motor de IntelliSense cambiará automáticamente al Analizador de etiquetas para las unidades de traducción que contengan errores de `#include`.",
	"c_cpp.configuration.autocomplete.markdownDescription": "Controla el proveedor de finalización automática. Si está establecido en `disabled` y desea la finalización basada en palabras, también tendrá que establecer `\"[cpp]\": {\"editor.wordBasedSuggestions\": true}` (y de forma similar para los lenguajes `c` y `cuda-cpp`).",
	"c_cpp.configuration.autocomplete.default.description": "Usa el motor de IntelliSense activo.",
	"c_cpp.configuration.autocomplete.disabled.description": "Usa la finalización basada en palabras proporcionada por Visual Studio Code.",
	"c_cpp.configuration.errorSquiggles.description": "Controla si los posibles errores de compilación detectados por el motor de IntelliSense se notificarán al editor. También controla si se notifican advertencias de análisis de código si no se encuentran las inclusiones. El motor del analizador de etiquetas omite esta configuración.",
	"c_cpp.configuration.dimInactiveRegions.description": "Controla si los bloques de preprocesador inactivos se colorean de forma diferente a la del código activo. Esta configuración no tiene efecto si IntelliSense está deshabilitado o si usa el tema de contraste alto predeterminado.",
	"c_cpp.configuration.inactiveRegionOpacity.markdownDescription": "Controla la opacidad de los bloques de preprocesador inactivos. Escala el valor entre `0.1` y `1.0`. Esta configuración solo se aplica cuando está habilitada la atenuación de regiones inactivas.",
	"c_cpp.configuration.inactiveRegionForegroundColor.description": "Controla el color de la fuente en los bloques de preprocesador inactivos. La entrada se realiza en forma de código de color hexadecimal o de un color para temas válido. Si no se establece, se usa como valor predeterminado la combinación de colores de la sintaxis del editor. Esta configuración solo se aplica cuando está habilitada la atenuación de regiones inactivas.",
	"c_cpp.configuration.inactiveRegionBackgroundColor.description": "Controla el color de fondo de los bloques de preprocesador inactivos. La entrada se realiza en forma de código de color hexadecimal o de un color para temas válido. Si no se establece, el valor predeterminado es transparente. Esta configuración solo se aplica cuando está habilitada la atenuación de regiones inactivas.",
	"c_cpp.configuration.inlayHints.autoDeclarationTypes.enabled.markdownDescription": "Mostrar sugerencias de incrustación para el tipo deducido cuando se usa `auto` en una declaración:\n```cpp \n\n auto index /* : int */ = 0;\n```",
	"c_cpp.configuration.inlayHints.autoDeclarationTypes.showOnLeft.markdownDescription": "Mostrar sugerencias de incrustación para el tipo deducido cuando se usa `auto` en una declaración:\n```cpp \n\n auto /* int */ index = 0;\n```",
	"c_cpp.configuration.inlayHints.parameterNames.enabled.markdownDescription": "Mostrar sugerencias de incrustación para nombres de parámetros:\n```cpp \n\n int a = getArea(/* width: */ x, /* height: */ y);\n```",
	"c_cpp.configuration.inlayHints.parameterNames.hideLeadingUnderscores.markdownDescription": "Ocultar el `_` inicial en las sugerencias de nombre de parámetro.",
	"c_cpp.configuration.inlayHints.parameterNames.suppressWhenArgumentContainsName.markdownDescription": "Suprima las sugerencias de nombre de parámetro cuando el texto del argumento o el comentario insertado contenga el nombre del parámetro:\n```cpp \n\n int a = getArea(width, /* height: */ y);\n```",
	"c_cpp.configuration.inlayHints.referenceOperator.enabled.markdownDescription": "Muestra el operador de referencia de sugerencia de incrustación `&` para los parámetros pasados por una referencia no const:\n```cpp \n\n swap(/* &first: */ str1, /* &last: */ str2);\n```",
	"c_cpp.configuration.inlayHints.referenceOperator.showSpace.markdownDescription": "Controla si un espacio se muestra después de `&` para parámetros pasados por referencia no-const:\n```cpp \n\n swap(/* & first: */ str1, /* & last: */ str2);\n```",
	"c_cpp.configuration.loggingLevel.markdownDescription": "Nivel de detalle del registro en el panel de salida. El orden de los niveles de menos detallado a más detallado es: `None` < `Error` < `Warning` < `Information` < `Debug`.",
	"c_cpp.configuration.autoAddFileAssociations.markdownDescription": "Controla si los archivos se agregan automáticamente a `#files.associations#` cuando son el destino de una operación de navegación desde un archivo de C/C++.",
	"c_cpp.configuration.workspaceParsingPriority.markdownDescription": "Controla si el análisis de los archivos de área de trabajo no activos los pone en suspensión para evitar el uso del 100% de la CPU. Los valores `highest`/`high`/`medium`/`low` corresponden a un uso de la CPU aproximado del 100%, 75%, 50% y 25% respectivamente.",
	"c_cpp.configuration.workspaceSymbols.description": "Símbolos que se incluirán en los resultados de la consulta cuando se invoque 'Ir al símbolo en el área de trabajo '.",
	"c_cpp.configuration.exclusionPolicy.markdownDescription": "Indica a la extensión cuándo usar la configuración `#files.exclude#` (y `#C_Cpp.files.exclude#`) al determinar qué archivos se deben agregar a la base de datos de navegación de código mientras se recorren las rutas de acceso de la matriz `browse.path`. Si la configuración `#files.exclude#` solo contiene carpetas, entonces `checkFolders` es la mejor opción y aumentará la velocidad con la que la extensión puede inicializar la base de datos de navegación de código.",
	"c_cpp.configuration.exclusionPolicy.checkFolders.description": "Los filtros de exclusión solo se evaluarán una vez por carpeta (no se comprueban los archivos individuales).",
	"c_cpp.configuration.exclusionPolicy.checkFilesAndFolders.description": "Los filtros de exclusión se evaluarán con cada archivo y carpeta encontrados.",
	"c_cpp.configuration.preferredPathSeparator.markdownDescription": "Carácter usado como separador de ruta de acceso para los resultados de finalización automática de instrucciones `#include`.",
	"c_cpp.configuration.simplifyStructuredComments.markdownDescription": "Si es `true`, la información sobre herramientas al mantener el puntero y autocompletar solo mostrará ciertas etiquetas de comentarios estructurados. De lo contrario, se muestran todos los comentarios.",
	"c_cpp.configuration.doxygen.generateOnType.description": "Controla si se va a insertar automáticamente el comentario de Doxygen después de escribir el estilo de comentario elegido.",
	"c_cpp.configuration.doxygen.generatedStyle.description": "La cadena de caracteres utilizada como línea de inicio del comentario de Doxygen.",
	"c_cpp.configuration.doxygen.sectionTags.description": "Seleccione las etiquetas de sección de Doxygen que quiere que aparezcan al mantener el puntero en el área de información sobre herramientas cuando esté habilitada la opción 'simplificar comentarios estructurados'. ",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.string.markdownDescription": "Patrón que comienza un bloque de comentario de una o varias líneas. El valor predeterminado del patrón de continuación es ` * ` para los bloques de comentario multilínea o esta cadena para los bloques de comentario de una línea.",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.object.begin.description": "Patrón que comienza un bloque de comentario de una o varias líneas.",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.object.continue.description": "Texto que se insertará en la línea siguiente cuando se presione Entrar dentro de un bloque de comentario de una o varias líneas.",
	"c_cpp.configuration.commentContinuationPatterns.description": "Define el comportamiento del editor para cuando se presiona la tecla Entrar dentro de un bloque de comentario de una o varias líneas.",
	"c_cpp.configuration.configurationWarnings.description": "Determina si se muestran notificaciones emergentes cuando una extensión del proveedor de configuración no puede proporcionar una configuración para un archivo de código fuente.",
	"c_cpp.configuration.intelliSenseCachePath.markdownDescription": "Define la ruta de acceso de la carpeta para los encabezados precompilados almacenados en caché que usa IntelliSense. La ruta de acceso de caché predeterminada es `%LocalAppData%/Microsoft/vscode-cpptools` en Windows, `$XDG_CACHE_HOME/vscode-cpptools/` en Linux (o `$HOME/.cache/vscode-cpptools/` si `XDG_CACHE_HOME` no se ha definido) y `$HOME/Library/Caches/vscode-cpptools/` en Mac. La ruta de acceso predeterminada se utiliza si no se especifica ninguna ruta de acceso o se especifica una que no es válida.",
	"c_cpp.configuration.intelliSenseCacheSize.markdownDescription": "Tamaño máximo del espacio del disco duro por área de trabajo en megabytes (MB) para los encabezados precompilados almacenados en caché. El uso real puede fluctuar en torno a este valor. El tamaño predeterminado es `5120` MB. El almacenamiento en caché de encabezados precompilados está deshabilitado cuando el tamaño es `0`.",
	"c_cpp.configuration.intelliSenseMemoryLimit.markdownDescription": "Límite de uso de memoria en megabytes (MB) de un proceso de IntelliSense. El límite predeterminado es de `4096` y el límite máximo es de `16384`. La extensión se cerrará y reiniciará un proceso de IntelliSense cuando supere el límite.",
	"c_cpp.configuration.intelliSenseUpdateDelay.description": "Controla el retraso en milisegundos antes de que IntelliSense inicie la actualización después de una modificación.",
	"c_cpp.configuration.default.includePath.markdownDescription": "Valor que se va a usar en una configuración si no se especifica `includePath` en `c_cpp_properties.json`. Si se especifica `includePath`, agregue `${default}` a la matriz para insertar los valores de esta configuración. Normalmente, esto no debe incluir las inclusiones del sistema; en su lugar, establezca `#C_Cpp.default.compilerPath#`.",
	"c_cpp.configuration.default.defines.markdownDescription": "Valor que debe usarse en una configuración si no se especifica `defines`, o bien los valores que se deben insertar si se especifica `${default}` en `defines`.",
	"c_cpp.configuration.default.macFrameworkPath.markdownDescription": "Valor que debe usarse en una configuración si no se especifica `macFrameworkPath`, o bien los valores que deben insertarse si se especifica `${default}` en `macFrameworkPath`.",
	"c_cpp.configuration.default.windowsSdkVersion.markdownDescription": "Versión de la ruta de acceso de inclusión de Windows SDK que debe usarse en Windows; por ejemplo, `10.0.17134.0`.",
	"c_cpp.configuration.default.compileCommands.markdownDescription": "Valor que debe usarse en una configuración si no se especifica `compileCommands` o si se establece en `${default}`.",
	"c_cpp.configuration.default.forcedInclude.markdownDescription": "Valor que debe usarse en una configuración si no se especifica `forcedInclude`, o bien los valores que deben insertarse si se especifica `${default}` en `forcedInclude`.",
	"c_cpp.configuration.default.intelliSenseMode.markdownDescription": "Valor que debe usarse en una configuración si no se especifica `intelliSenseMode` o si se establece en `${default}`.",
	"c_cpp.configuration.default.compilerPath.markdownDescription": "Valor que debe usarse en una configuración si no se especifica `compilerPath` o si se establece en `${default}`.",
	"c_cpp.configuration.default.compilerArgs.markdownDescription": "Valor que debe usarse en una configuración si no se especifica `compilerArgs` o si se establece en `${default}`.",
	"c_cpp.configuration.default.cStandard.markdownDescription": "Valor que debe usarse en una configuración si no se especifica `cStandard` o si se establece en `${default}`.",
	"c_cpp.configuration.default.cppStandard.markdownDescription": "Valor que debe usarse en una configuración si no se especifica `cppStandard` o si se establece en `${default}`.",
	"c_cpp.configuration.default.configurationProvider.markdownDescription": "Valor que debe usarse en una configuración si no se especifica `configurationProvider` o si se establece en `${default}`.",
	"c_cpp.configuration.default.mergeConfigurations.markdownDescription": "Se establece en `true` para combinar las rutas de acceso de inclusión, las definiciones y las inclusión forzadas con las de un proveedor de configuración.",
	"c_cpp.configuration.default.browse.path.markdownDescription": "Valor que debe usarse en una configuración si no se especifica `browse.path`, o bien los valores que deben insertarse si se especifica `${default}` en `browse.path`.",
	"c_cpp.configuration.default.browse.databaseFilename.markdownDescription": "Valor que debe usarse en una configuración si no se ha especificado `browse.databaseFilename` o se ha establecido en `${default}`.",
	"c_cpp.configuration.default.browse.limitSymbolsToIncludedHeaders.markdownDescription": "Valor que debe usarse en una configuración si no se ha especificado `browse.limitSymbolsToIncludedHeaders` o se ha establecido en `${default}`.",
	"c_cpp.configuration.default.systemIncludePath.markdownDescription": "Valor que debe usarse para la ruta de acceso de inclusión del sistema. Si se establece, invalida la ruta de acceso de inclusión del sistema adquirida a través de las opciones de configuración `compilerPath` y `compileCommands`.",
	"c_cpp.configuration.default.enableConfigurationSquiggles.markdownDescription": "Controla si la extensión notificará los errores detectados en `c_cpp_properties.json`.",
	"c_cpp.configuration.default.customConfigurationVariables.markdownDescription": "Valor que debe usarse en una configuración si no se establece `customConfigurationVariables`, o bien los valores que se deben insertar si se especifica `${default}` como clave en `customConfigurationVariables`.",
	"c_cpp.configuration.updateChannel.markdownDescription": "Establezca esta opción en `Insiders` para descargar e instalar automáticamente las compilaciones más recientes de Insiders para la extensión, que incluyen nuevas características y correcciones de errores.",
	"c_cpp.configuration.updateChannel.deprecationMessage": "Esta configuración está en desuso. Las extensiones de versión preliminar ya están disponibles a través de Marketplace.",
	"c_cpp.configuration.default.dotConfig.markdownDescription": "Valor que debe usarse en una configuración si no se especifica `dotConfig`, o bien los valores que se deben insertar si se especifica `${default}` en `dotConfig`.",
	"c_cpp.configuration.experimentalFeatures.description": "Controla si se pueden usar las características \"experimentales\".",
	"c_cpp.configuration.suggestSnippets.markdownDescription": "Si se establece en `true`, el servidor de lenguaje proporciona los fragmentos de código.",
	"c_cpp.configuration.caseSensitiveFileSupport.markdownDescription": "Si se establece en `default`, el sistema de archivos del área de trabajo no distingue mayúsculas de minúsculas en Windows y distingue mayúsculas de minúsculas en macOS o Linux. Si se establece en `enabled`, el sistema de archivos del área de trabajo distingue mayúsculas de minúsculas en Windows.",
	"c_cpp.configuration.enhancedColorization.markdownDescription": "Si se habilita esta opción, el código se colorea de acuerdo con IntelliSense. Esta configuración solo se aplica si `#C_Cpp.intelliSenseEngine#` se establece en `default`.",
	"c_cpp.configuration.codeFolding.description": "Si está habilitada, el servidor de lenguaje proporciona intervalos de plegado de código.",
	"c_cpp.configuration.markdownInComments.description": "Seleccione si Markdown estará disponible en la información sobre herramientas que aparece al mantener el puntero. De manera predeterminada, solo se aplicará un subconjunto de Markdown a los comentarios de la información sobre herramientas que aparece al mantener el puntero.",
	"c_cpp.configuration.markdownInComments.subsetEnabled.description": "Habilita todas las características de Markdown en la información sobre herramientas que aparece al mantener el puntero, excepto las que incluyen los caracteres \"_\" y \"*\".",
	"c_cpp.configuration.markdownInComments.enabled.description": "Habilite todas las características de Markdown en la información sobre herramientas que aparece al mantener el puntero.",
	"c_cpp.configuration.markdownInComments.disabled.description": "Deshabilite todas las características de Markdown en la información sobre herramientas que aparece al mantener el puntero.",
	"c_cpp.configuration.hover.description": "Si se deshabilita, el servidor de lenguaje ya no proporciona detalles al mantener el puntero.",
	"c_cpp.configuration.vcpkg.enabled.markdownDescription": "Habilita los servicios de integración para el [administrador de dependencias de vcpkgs](https://aka.ms/vcpkg/).",
	"c_cpp.configuration.addNodeAddonIncludePaths.markdownDescription": "Agrega rutas de acceso de inclusión de `nan` y `node-addon-api` cuando sean dependencias.",
	"c_cpp.configuration.renameRequiresIdentifier.markdownDescription": "Si es `true`, 'Cambiar nombre de símbolo' requerirá un identificador de C/C++ válido.",
	"c_cpp.configuration.autocompleteAddParentheses.markdownDescription": "Si es `true`, la opción de autocompletar agregará `(` de forma automática después de las llamadas a funciones, en cuyo caso puede que también se agregue `)`, en función del valor de la configuración de `editor.autoClosingBrackets`.",
	"c_cpp.configuration.filesExclude.markdownDescription": "Configura patrones globales para excluir carpetas (y archivos si se cambia `#C_Cpp.exclusionPolicy#`). Estos son específicos de la extensión de C/C++ y se agregan a `#files.exclude#`, pero a diferencia de `#files.exclude#` también se aplican a rutas fuera de la carpeta del área de trabajo actual y no se quitan de la Vista del explorador. Más información acerca de los patrones de globales [aquí](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).",
	"c_cpp.configuration.filesExcludeBoolean.markdownDescription": "El patrón global con el que se van a comparar las rutas de acceso de los archivos. Establézcalo en `true` o `false` para habilitarlo o deshabilitarlo.",
	"c_cpp.configuration.filesExcludeWhen.markdownDescription": "Comprobación adicional de los elementos del mismo nivel de un archivo coincidente. Usa `$(basename)` como variable para el nombre del archivo coincidente.",
	"c_cpp.configuration.debugger.useBacktickCommandSubstitution.markdownDescription": "Si es `true`, la sustitución de comandos del shell del depurador usará un acento grave obsoleto ``(`)``.",
	"c_cpp.configuration.legacyCompilerArgsBehavior.markdownDescription": "Habilite el comportamiento anterior a la v1.10.0 para saber cómo se controla el escape del shell en la configuración del argumento del compilador. El escape de shell ya no se espera ni se admite de forma predeterminada en las matrices de argumentos a partir de la v1.10.0.",
	"c_cpp.configuration.legacyCompilerArgsBehavior.deprecationMessage": "Esta configuración es temporal para admitir la transición al comportamiento corregido en la v1.10.0.",
	"c_cpp.configuration.sshTargetsView.description": "Controla si la vista Destinos SSH es visible. De forma predeterminada, habilite la vista cuando se invoque un comando SSH.",
	"c_cpp.contributes.views.cppReferencesView.title": "C/C++: resultados de otras referencias",
	"c_cpp.contributes.views.sshTargetsView.title": "Cpptools: destinos SSH",
	"c_cpp.contributes.viewsWelcome.contents": "Para obtener más información sobre launch.json, vea [Configuración de depuración de C/C++](https://code.visualstudio.com/docs/cpp/launch-json-reference).",
	"c_cpp.configuration.debugShortcut.description": "Mostrar el botón de reproducción \"Ejecutar y depurar\" y el engranaje \"Agregar configuración de depuración\" en la barra de título del editor para archivos de C++.",
	"c_cpp.debuggers.pipeTransport.description": "Cuando se especifica, indica al depurador que se conecte a un equipo remoto usando otro archivo ejecutable como canalización que retransmitirá la entrada o la salida estándar entre VS Code y el archivo ejecutable del back-end del depurador habilitado para MI (por ejemplo, gdb).",
	"c_cpp.debuggers.pipeTransport.default.pipeProgram": "escriba la ruta de acceso absoluta para el nombre del programa de canalización; por ejemplo, \"/usr/bin/ssh\".",
	"c_cpp.debuggers.pipeTransport.default.debuggerPath": "Ruta de acceso completa al depurador en la máquina de destino. Por ejemplo, /usr/bin/gdb.",
	"c_cpp.debuggers.pipeTransport.debuggerPath.description": "Ruta de acceso completa al depurador en la máquina de destino. Por ejemplo, /usr/bin/gdb.",
	"c_cpp.debuggers.pipeTransport.pipeCwd.description": "Ruta de acceso completa al directorio de trabajo del programa de canalización.",
	"c_cpp.debuggers.pipeTransport.pipeProgram.description": "Comando de canalización completo para ejecutar.",
	"c_cpp.debuggers.pipeTransport.pipeArgs.description": "Argumentos de la línea de comandos que se pasan al programa de canalización para configurar la conexión.",
	"c_cpp.debuggers.pipeTransport.pipeEnv.description": "Variables de entorno que se pasan al programa de canalización.",
	"c_cpp.debuggers.pipeTransport.quoteArgs.description": "Si los argumentos individuales de pipeProgram contienen caracteres (como espacios o tabulaciones), ¿debe incluirse entre comillas? Si es \"falso\", el comando del depurador dejará de incluirse entre comillas automáticamente. El valor predeterminado es \"verdadero\".",
	"c_cpp.debuggers.logging.description": "Marcas opcionales que determinan los tipos de mensajes que deben registrarse en la Consola de depuración.",
	"c_cpp.debuggers.logging.exceptions.description": "Marca opcional que determina si los mensajes de excepción deben registrarse en la Consola de depuración. El valor predeterminado es true.",
	"c_cpp.debuggers.logging.moduleLoad.description": "Marca opcional que determina si los eventos de carga de módulos deben registrarse en la Consola de depuración. El valor predeterminado es true.",
	"c_cpp.debuggers.logging.programOutput.description": "Marca opcional que determina si la salida del programa debe registrarse en la Consola de depuración. El valor predeterminado es true.",
	"c_cpp.debuggers.logging.engineLogging.description": "Marca opcional que determina si los mensajes del motor de depuración de diagnóstico deben registrarse en la Consola de depuración. El valor predeterminado es false.",
	"c_cpp.debuggers.logging.trace.description": "Marca opcional que determina si el seguimiento de comandos del adaptador de diagnóstico debe registrarse en la Consola de depuración. El valor predeterminado es false.",
	"c_cpp.debuggers.logging.traceResponse.description": "Marca opcional que determina si el seguimiento de comandos y respuestas del adaptador de diagnóstico debe registrarse en la Consola de depuración. El valor predeterminado es false.",
	"c_cpp.debuggers.cppvsdbg.logging.threadExit.description": "Marca opcional que determina si los mensajes de salida de subprocesos deben registrarse en la Consola de depuración. El valor predeterminado es falso.",
	"c_cpp.debuggers.cppvsdbg.logging.processExit.description": "Marca opcional que determina si los mensajes de salida de subprocesos deben registrarse en la Consola de depuración. El valor predeterminado es \"false\".",
	"c_cpp.debuggers.text.description": "Comando del depurador para ejecutar.",
	"c_cpp.debuggers.description.description": "Descripción opcional del comando.",
	"c_cpp.debuggers.ignoreFailures.description": "Si se establece en true, los errores del comando deben omitirse. El valor predeterminado es false.",
	"c_cpp.debuggers.program.description": "Ruta de acceso completa al ejecutable del programa.",
	"c_cpp.debuggers.args.description": "Argumentos de la línea de comandos que se pasan al programa.",
	"c_cpp.debuggers.cppdbg.type.description": "Tipo de motor. Debe ser \"cppdbg\".",
	"c_cpp.debuggers.cppvsdbg.type.description": "Tipo de motor. Debe ser \"cppvsdbg\".",
	"c_cpp.debuggers.targetArchitecture.description": "Arquitectura del depurado. Se detectará automáticamente, a menos que se haya establecido este parámetro. Los valores permitidos son x86, arm, arm64, mips, x64, amd64 y x86_64.",
	"c_cpp.debuggers.cwd.description": "Directorio de trabajo del destino.",
	"c_cpp.debuggers.setupCommands.description": "Uno o varios comandos GDB/LLDB que deben ejecutarse para configurar el depurador subyacente. Ejemplo: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].",
	"c_cpp.debuggers.postRemoteConnectCommands.description": "Uno o varios comandos que se ejecutan después de la conexión remota a un servidor de depuración.",
	"c_cpp.debuggers.customLaunchSetupCommands.description": "Si se proporciona, reemplaza los comandos predeterminados que se usan para iniciar un destino con otros comandos. Por ejemplo, puede ser \"-target-attach\" para asociar a un proceso de destino. Una lista de comandos vacía reemplaza los comandos de inicio por un valor vacío, lo que puede ser útil si se proporcionan opciones de inicio como opciones de la línea de comandos al depurador. Ejemplo: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].",
	"c_cpp.debuggers.launchCompleteCommand.description": "Comando que debe ejecutarse una vez que el depurador se haya configurado por completo para que se ejecute el proceso de destino. Los valores permitidos son \"exec-run\", \"exec-continue\", \"None\". El valor predeterminado es \"exec-run\".",
	"c_cpp.debuggers.cppdbg.visualizerFile.description": "Archivo .natvis que debe usarse para depurar este proceso. Esta opción no es compatible con la impresión con sangría de GDB. Vea también \"showDisplayString\" si utiliza esta configuración.",
	"c_cpp.debuggers.cppdbg.svdPath.description": "La ruta de acceso completa del archivo SVD de un dispositivo insertado.",
	"c_cpp.debuggers.cppvsdbg.visualizerFile.description": "Archivo. natvis que debe usarse para depurar este proceso.",
	"c_cpp.debuggers.showDisplayString.description": "Cuando se especifica visualizerFile, showDisplayString habilita la cadena para mostrar. La activación de esta opción puede ralentizar el rendimiento durante la depuración.",
	"c_cpp.debuggers.environment.description": "Variables del entorno que se agregan al entorno del programa. Ejemplo: [ { \"name\": \"config\", \"value\": \"Debug\" } ], no [ { \"config\": \"Debug\" } ].",
	"c_cpp.debuggers.envFile.description": "Ruta de acceso absoluta a un archivo que contiene definiciones de variables de entorno. Este archivo tiene pares de clave-valor separados por un signo igual por línea. Por ejemplo, CLAVE=VALOR.",
	"c_cpp.debuggers.additionalSOLibSearchPath.description": "Lista de directorios separados por punto y coma que debe usarse para buscar archivos .so. Ejemplo: \"c:\\dir1;c:\\dir2\".",
	"c_cpp.debuggers.MIMode.description": "Indica el depurador de la consola al que debe conectarse MIDebugEngine. Los valores permitidos son \"gdb\" y \"lldb\".",
	"c_cpp.debuggers.miDebuggerPath.description": "Ruta de acceso del depurador MI (como gdb). Si no se especifica, se busca primero el depurador donde indica la instrucción path.",
	"c_cpp.debuggers.miDebuggerArgs.description": "Argumentos adicionales para el depurador MI (como gdb).",
	"c_cpp.debuggers.miDebuggerServerAddress.description": "Dirección de red del servidor del depurador MI al que debe conectarse (ejemplo: localhost:1234).",
	"c_cpp.debuggers.useExtendedRemote.description": "Conéctese al servidor del depurador de Instancia administrada con el modo extendido-remoto de destino.",
	"c_cpp.debuggers.stopAtEntry.description": "Parámetro opcional. Si se establece en true, el depurador debe detenerse en el punto de entrada del destino. Si se pasa processId, no tiene efecto.",
	"c_cpp.debuggers.debugServerPath.description": "Ruta de acceso completa opcional al servidor de depuración que se va a iniciar. El valor predeterminado es null. Se usa junto con \"miDebugServerAddress\" o su servidor propio con un comando \"customSetupCommand\" que ejecuta \"-target-select remote <server:port>\".",
	"c_cpp.debuggers.debugServerArgs.description": "Argumentos opcionales del servidor de depuración. El valor predeterminado es NULL.",
	"c_cpp.debuggers.serverStarted.description": "Patrón opcional iniciado por el servidor que debe buscarse en la salida del servidor de depuración. El valor predeterminado es NULL.",
	"c_cpp.debuggers.filterStdout.description": "Busca la secuencia stdout para el patrón iniciado por el servidor y registra stdout en la salida de depuración. El valor predeterminado es true.",
	"c_cpp.debuggers.filterStderr.description": "Busca la secuencia stderr para el patrón iniciado por el servidor y registra stderr en la salida de depuración. El valor predeterminado es false.",
	"c_cpp.debuggers.serverLaunchTimeout.description": "Tiempo opcional, en milisegundos, que el depurador debe esperar a que se inicie debugServer. El valor predeterminado es 10000.",
	"c_cpp.debuggers.coreDumpPath.description": "Ruta de acceso completa opcional a un archivo de volcado de memoria básico para el programa especificado. El valor predeterminado es NULL.",
	"c_cpp.debuggers.cppdbg.externalConsole.description": "Si se establece en true, se inicia una consola para el depurado. Si se establece en false, en Linux y Windows aparecerá en la consola integrada.",
	"c_cpp.debuggers.cppvsdbg.externalConsole.description": "[En desuso por la \"consola\"] Si se establece en true, se inicia una consola para el elemento depurado. Si se establece en false, no se inicia ninguna consola.",
	"c_cpp.debuggers.cppvsdbg.console.description": "Indica dónde se debe iniciar el destino de depuración. Si no se define, el valor predeterminado es \"internalConsole\".",
	"c_cpp.debuggers.cppvsdbg.console.internalConsole.description": "Salida a la Consola de depuración de VS Code. No se admite la lectura de entrada de la consola (ejemplo: \"std::cin\" o \"scanf\").",
	"c_cpp.debuggers.cppvsdbg.console.integratedTerminal.description": "Terminal integrado de VS Code.",
	"c_cpp.debuggers.cppvsdbg.console.externalTerminal.description": "Las aplicaciones de consola se iniciarán en una ventana de terminal de tipo externo. La ventana se volverá a usar en los escenarios de reinicio y no desaparecerá automáticamente cuando se cierre la aplicación.",
	"c_cpp.debuggers.cppvsdbg.console.newExternalWindow.description": "Las aplicaciones de consola se iniciarán en su propia ventana de consola externa, que terminará cuando la aplicación se detenga. Las aplicaciones que no sean de consola se ejecutarán sin un terminal y se omitirá stdout/stderr.",
	"c_cpp.debuggers.avoidWindowsConsoleRedirection.description": "Si se establece en true, se deshabilita la redirección de la consola del depurado necesaria para la compatibilidad con el terminal integrado.",
	"c_cpp.debuggers.sourceFileMap.description": "Asignaciones de archivo de código fuente opcionales que se pasan al motor de depuración. Ejemplo: \"{ \"/original/source/path\":\"/current/source/path\" }\".",
	"c_cpp.debuggers.processId.anyOf.description": "Id. de proceso opcional al que debe asociarse el depurador. Use \"${command:pickProcess}\" para obtener una lista de los procesos locales en ejecución a los que se puede asociar. Tenga en cuenta que algunas plataformas requieren privilegios de administrador para poder asociar el depurador a un proceso.",
	"c_cpp.debuggers.symbolSearchPath.description": "Lista de directorios separados por punto y coma que debe usarse para buscar archivos de símbolos (es decir, pdb). Ejemplo: \"c:\\dir1;c:\\dir2\".",
	"c_cpp.debuggers.dumpPath.description": "Ruta de acceso completa opcional a un archivo de volcado de memoria para el programa especificado. Ejemplo: \"c:\\temp\\app.dmp\". El valor predeterminado es null.",
	"c_cpp.debuggers.enableDebugHeap.description": "Si se establece en false, el proceso se iniciará con el montón de depuración deshabilitado. Esta opción establece la variable de entorno \"_NO_DEBUG_HEAP\" en \"1\".",
	"c_cpp.debuggers.symbolLoadInfo.description": "Control explícito de la carga de símbolos.",
	"c_cpp.debuggers.symbolLoadInfo.loadAll.description": "Si es true, se cargan los símbolos de todas las bibliotecas; de lo contrario, no se cargará ningún símbolo de la biblioteca compartida (solib). El valor predeterminado es true.",
	"c_cpp.debuggers.symbolLoadInfo.exceptionList.description": "Lista de nombres de archivo (se permiten carácteres comodín) separados por punto y coma \";\". Modifica el comportamiento de LoadAll. Si LoadAll es true, no se cargan los símbolos para las bibliotecas que coincidan con cualquier nombre de la lista. De lo contrario, solo se cargan los símbolos para las bibliotecas que coincidan. Ejemplo: \"foo.so;bar.so\".",
	"c_cpp.debuggers.requireExactSource.description": "Marca opcional que requiere que el código fuente actual coincida con el archivo PDB.",
	"c_cpp.debuggers.stopAtConnect.description": "Si es verdadero, el depurador debe detenerse después de conectar con el destino. Si es falso, el depurador continuará una vez se haya conectado. El valor predeterminado es falso.",
	"c_cpp.debuggers.hardwareBreakpoints.description": "Control explícito del comportamiento del punto de interrupción de hardware para destinos remotos.",
	"c_cpp.debuggers.hardwareBreakpoints.require.description": "Si es verdadero, se usarán siempre puntos de interrupción de hardware. El valor predeterminado es falso.",
	"c_cpp.debuggers.hardwareBreakpoints.limit.description": "Límite opcional del número de puntos de interrupción de hardware disponibles que se van a usar. Solo se aplica cuando \"require\" es true y \"Limit\" es mayor que 0. El valor predeterminado es 0.",
	"c_cpp.debuggers.variables.description": "Variables para la sustitución recursiva en esta configuración de inicio. Cada variable puede hacer referencia a otras.",
	"c_cpp.debuggers.variables.properties.description": "Variable para la sustitución recursiva en esta configuración de inicio. El valor puede hacer referencia a otras variables.",
	"c_cpp.debuggers.host.description": "Información del host.",
	"c_cpp.debuggers.host.user.description": "Usuario iniciando sesión en el host.",
	"c_cpp.debuggers.host.hostName.description": "Nombre de host.",
	"c_cpp.debuggers.host.port.description": "Puerto SSH en el host. El valor predeterminado es 22.",
	"c_cpp.debuggers.host.jumpHost.description": "Conéctese al host de destino estableciendo primero una conexión con los hosts de accesos directos.",
	"c_cpp.debuggers.host.localForward.description": "Reenviar conexiones al puerto TCP o socket Unix especificados en el host local (cliente) al host y puerto especificados, o bien al socket Unix, en el lado remoto",
	"c_cpp.debuggers.host.localForward.bindAddress.description": "Dirección local",
	"c_cpp.debuggers.host.localForward.port.description": "Puerto local",
	"c_cpp.debuggers.host.localForward.host.description": "Nombre de host",
	"c_cpp.debuggers.host.localForward.hostPort.description": "Puerto de host",
	"c_cpp.debuggers.host.localForward.localSocket.description": "Socket local",
	"c_cpp.debuggers.host.localForward.remoteSocket.description": "Socket remoto",
	"c_cpp.debuggers.deploySteps.description": "Pasos necesarios para implementar la aplicación. El orden es importante.",
	"c_cpp.debuggers.deploySteps.copyFile.description": "Copiar archivos mediante SCP o rsync.",
	"c_cpp.debuggers.deploySteps.copyFile.files.description": "Archivos que se van a copiar. Admite el patrón de ruta de acceso.",
	"c_cpp.debuggers.deploySteps.copyFile.targetDir.description": "Directorio de destino.",
	"c_cpp.debuggers.deploySteps.copyFile.recursive.description": "Si es true, copia las carpetas de forma recursiva.",
	"c_cpp.debuggers.deploySteps.copyFile.scpPath.description": "Ruta de acceso completa opcional al SCP. Asume que SCP está en PATH si no se especifica",
	"c_cpp.debuggers.deploySteps.copyFile.rsyncPath.description": "Ruta de acceso completa opcional a rsync. Se supone que rsync está en PATH si no se especifica",
	"c_cpp.debuggers.deploySteps.debug": "Si es true, se omite cuando se inicia sin depuración. Si es false, se omite al iniciar la depuración. Si no está definido, no se omitirá nunca.",
	"c_cpp.debuggers.deploySteps.ssh.description": "Paso del comando SSH.",
	"c_cpp.debuggers.deploySteps.ssh.command.description": "Comando que se ejecutará a través de SSH. Comando después de '-c' en el comando SSH.",
	"c_cpp.debuggers.deploySteps.ssh.sshPath.description": "Ruta de acceso completa opcional a SSH. Asume que SSH está en PATH si no se especifica",
	"c_cpp.debuggers.deploySteps.continueOn.description": "Patrón de finalización opcional en la salida. Cuando se ve este patrón en la salida, continúa con los procedimientos de implementación independientemente de si este paso devuelve resultados.",
	"c_cpp.debuggers.deploySteps.shell.description": "Paso del comando shell.",
	"c_cpp.debuggers.deploySteps.shell.command.description": "Comando de shell que se va a ejecutar.",
	"c_cpp.debuggers.vsCodeCommand.description": "VS Code comando que se invocará. Puede ser un comando en VS Code o una extensión activa.",
	"c_cpp.debuggers.vsCodeCommand.command.description": "Comando VS Code que se invocará.",
	"c_cpp.debuggers.vsCodeCommand.args.description": "Argumentos para el comando VS Code.",
	"c_cpp.taskDefinitions.name.description": "Nombre de la tarea.",
	"c_cpp.taskDefinitions.command.description": "Ruta de acceso a un compilador o script que realiza la compilación.",
	"c_cpp.taskDefinitions.args.description": "Argumentos adicionales que se pasan al compilador o al script de compilación.",
	"c_cpp.taskDefinitions.options.description": "Opciones de comando adicionales.",
	"c_cpp.taskDefinitions.options.cwd.description": "Directorio de trabajo actual del script o el programa ejecutado. Si se omite, se usa la raíz del área de trabajo actual de Code.",
	"c_cpp.taskDefinitions.detail.description": "Detalles adicionales de la tarea.",
	"c_cpp.debuggers.sourceFileMap.sourceFileMapEntry.description": "Rutas de acceso actuales y en tiempo de compilación a los mismos árboles de origen. Los archivos que se encuentran en EditorPath se asignan a la ruta de acceso CompileTimePath para la coincidencia de los puntos de interrupción y se asignan de CompileTimePath a EditorPath al mostrar ubicaciones de seguimiento de la pila.",
	"c_cpp.debuggers.sourceFileMap.sourceFileMapEntry.editorPath.description": "La ruta de acceso al árbol de origen que el editor va a usar.",
	"c_cpp.debuggers.sourceFileMap.sourceFileMapEntry.useForBreakpoints.description": "False si la entrada solo se usa para la asignación de ubicación del marco de pila. True si la entrada debe usarse también al especificar ubicaciones de los puntos de interrupción.",
	"c_cpp.debuggers.symbolOptions.description": "Opciones para controlar cómo se encuentran y se cargan los símbolos (archivos .pdb).",
	"c_cpp.debuggers.unknownBreakpointHandling.description": "Controla cómo se controlan los puntos de interrupción establecidos externamente (normalmente a través de comandos GDB sin procesar) cuando se alcanzan.\nLos valores permitidos son \"throw\", que actúa como si la aplicación iniciara una excepción y \"stop\", que solo pausa la sesión de depuración. El valor predeterminado es \"throw\".",
	"c_cpp.debuggers.VSSymbolOptions.description": "Proporciona la configuración para buscar y cargar símbolos en el adaptador de depuración.",
	"c_cpp.debuggers.VSSymbolOptions.searchPaths.description": "Matriz de direcciones URL del servidor de símbolos (ejemplo: http​://MiServidordeSímblosdeEjemplo) o de directorios (ejemplo: /compilar/symbols) para buscar archivos. pdb. Se buscarán estos directorios además de las ubicaciones predeterminadas, junto al módulo y la ruta de acceso en la que se anuló originalmente el archivo pdb.",
	"c_cpp.debuggers.VSSymbolOptions.searchMicrosoftSymbolServer.description": "Si es «verdadero», se agrega el servidor de símbolos de Microsoft (https​://msdl.microsoft.com​/download/symbols) a la ruta de búsqueda de símbolos. Si no se especifica, esta opción tendrá el valor predeterminado de «falso».",
	"c_cpp.debuggers.VSSymbolOptions.cachePath.description": "Directorio en el que se deberían almacenar en caché los símbolos descargados de los servidores de símbolos. Si no se especifica, el depurador usará de forma predeterminada %TEMP%\\SymbolCache en Windows.",
	"c_cpp.debuggers.VSSymbolOptions.moduleFilter.description": "Proporciona opciones para controlar los módulos (archivos .dll) para los que el depurador intenta cargar los símbolos (archivos .pdb).",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.description": "Proporciona la configuración para cargar símbolos en el adaptador de depuración.",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.mode.description": "Controla en cuál de los dos modos operativos básicos opera el filtro de módulo.",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.mode.loadAllButExcluded.enumDescriptions": "Cargar símbolos para todos los módulos a menos que el módulo esté en la matriz «excludedModules».",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.mode.loadOnlyIncluded.enumDescriptions": "No intente cargar los símbolos de NINGÚN módulo a menos que esté en la matriz «includedModules» o se incluya a través de la configuración «includeSymbolsNextToModules».",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.excludedModules.description": "Matriz de módulos para los que el depurador NO debería cargar símbolos. Se admiten los caracteres comodín (ejemplo: MiEmpresa.*.dll).\n\nEsta propiedad se ignora a menos que «modo» se establezca como «loadAllButExcluded».",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.includedModules.description": "Matriz de módulos para los que el depurador debería cargar símbolos. Se admiten los caracteres comodín (ejemplo: MiEmpresa.*.dll).\n\nEsta propiedad se ignora a menos que «modo» se establezca como «loadOnlyIncluded».",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.includeSymbolsNextToModules.description": "Si es verdadero, para cualquier módulo que NO esté en la matriz «includedModules», el depurador seguirá comprobando junto al propio módulo y el ejecutable de inicio, pero no comprobará las rutas en la lista de búsqueda de símbolos. Esta opción tiene el valor predeterminado «verdadero».\n\nEsta propiedad se omite a menos que «modo» esté establecido como «loadOnlyIncluded».",
	"c_cpp.semanticTokenTypes.referenceType.description": "Estilo para tipos de referencia de C++/CLI.",
	"c_cpp.semanticTokenTypes.cliProperty.description": "Estilo para las propiedades de C++/CLI.",
	"c_cpp.semanticTokenTypes.genericType.description": "Estilo para tipos genéricos de C++/CLI.",
	"c_cpp.semanticTokenTypes.valueType.description": "Estilo para tipos de valor de C++/CLI.",
	"c_cpp.semanticTokenTypes.templateFunction.description": "Estilo para funciones de plantilla de C++.",
	"c_cpp.semanticTokenTypes.templateType.description": "Estilo para tipos de plantilla de C++.",
	"c_cpp.semanticTokenTypes.operatorOverload.description": "Estilo para operadores sobrecargados de C++.",
	"c_cpp.semanticTokenTypes.memberOperatorOverload.description": "Estilo para funciones miembro de operador sobrecargado de C++.",
	"c_cpp.semanticTokenTypes.newOperator.description": "Estilo para operadores `new` o `delete` de C++.",
	"c_cpp.semanticTokenTypes.customLiteral.description": "Estilo para literales definidos por el usuario de C++.",
	"c_cpp.semanticTokenTypes.numberLiteral.description": "Estilo para números literales definidos por el usuario de C++.",
	"c_cpp.semanticTokenTypes.stringLiteral.description": "Estilo para cadenas literales definidas por el usuario de C++.",
	"c_cpp.semanticTokenModifiers.global.description": "Estilo que se va a usar para símbolos globales.",
	"c_cpp.semanticTokenModifiers.local.description": "Estilo que se va a usar para símbolos locales.",
	"c_cpp.debuggers.logging.natvisDiagnostics.description": "Marca opcional para determinar si los mensajes natvis de diagnóstico deben registrarse en la Consola de depuración. El valor predeterminado es None.",
	"c_cpp.debuggers.logging.category.verbose.description": "Registros que se usan para la investigación interactiva durante el desarrollo. Estos registros deben contener principalmente información útil para la depuración y no tener ningún valor a largo plazo.",
	"c_cpp.debuggers.logging.category.warning.description": "Registros que resaltan un evento anómalo o inesperado en el flujo de la aplicación, pero que no hacen que se detenga la ejecución de la aplicación de otro modo.",
	"c_cpp.debuggers.logging.category.error.description": "Registros que resaltan cuándo se detiene el flujo de ejecución actual debido a un error. Esto debe indicar un error en la actividad actual, no un error en toda la aplicación.",
	"c_cpp.debuggers.logging.category.none.description": "No se usa para escribir mensajes de registro. Especifica que una categoría de registro no debe escribir ningún mensaje.",
	"c_cpp.walkthrough.title": "Introducción al desarrollo de C++",
	"c_cpp.walkthrough.description": "Sumérgete en la enriquecida experiencia de desarrollo de C++ de VS Code.",
	"c_cpp.walkthrough.set.up.title": "Configurar el entorno de C++",
	"c_cpp.walkthrough.activating.description": "Activando la extensión de C++ para determinar si se ha configurado el entorno de C++.\nActivando extensión...",
	"c_cpp.walkthrough.no.compilers.windows.description": "No pudimos encontrar un compilador de C++ en el equipo, que es necesario para usar la extensión de C++. Siga las instrucciones de la derecha para instalar una y, a continuación, haga clic en “Buscar mi nuevo compilador”.\n[Buscar mi nuevo compilador](comando:C_Cpp.RescanCompilers?%22walkthrough%22)",
	"c_cpp.walkthrough.no.compilers.description": "No pudimos encontrar un compilador de C++ en el equipo, que es necesario para usar la extensión de C++. Seleccione “Instalar un compilador de C++” para tener un compilador instalado automáticamente o siga las instrucciones de la derecha para instalar uno y, a continuación, haga clic en “Buscar mi nuevo compilador”.\n[Instalar un compilador de C++](comando:C_Cpp.InstallCompiler?%22walkthrough%22)\n[Buscar mi nuevo compilador](comando:C_Cpp.RescanCompilers?%22walkthrough%22)",
	"c_cpp.walkthrough.compilers.found.description": "La extensión de C++ funciona con un compilador de C++. Seleccione una de las que ya están en el equipo haciendo clic en el botón siguiente.\n[Seleccionar mi compilador predeterminado](comando:C_Cpp.SelectIntelliSenseConfiguration?%22walkthrough%22)",
	"c_cpp.walkthrough.compilers.found.altText": "Imagen que muestra la selección de una selección rápida predeterminada del compilador y la lista de compiladores encontrados en el equipo de los usuarios, uno de los cuales está seleccionado.",
	"c_cpp.walkthrough.create.cpp.file.title": "Crear un archivo de C++",
	"c_cpp.walkthrough.create.cpp.file.description": "[Abrir](command:toSide:workbench.action.files.openFile) o [crear](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22cpp%22%7D) un archivo de C++. Asegúrese de guardarlo con la extensión \".cpp\", como \"helloworld.cpp\". \n[Crear un archivo de C++](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22cpp%22%7D)",
	"c_cpp.walkthrough.create.cpp.file.altText": "Abre un archivo de C++ o una carpeta con un proyecto de C++.",
	"c_cpp.walkthrough.command.prompt.title": "Volver a iniciar desde el símbolo del sistema del desarrollador",
	"c_cpp.walkthrough.command.prompt.description": "Al usar el compilador de Microsoft Visual Studio C++, la extensión de C++ requiere que inicies VS Code desde el símbolo del sistema del desarrollador. Sigue las instrucciones de la derecha para volver a iniciar.\n[Volver a cargar ventana](command:workbench.action.reloadWindow)",
	"c_cpp.walkthrough.run.debug.title": "Ejecución y depuración del archivo de C++",
	"c_cpp.walkthrough.run.debug.mac.description": "Abre el archivo de C++ y haz clic en el botón reproducir de la esquina superior derecha del editor o presiona F5 cuando estés en el archivo. Selecciona \"clang++ - Compilar y depurar archivo activo\" para ejecutarlo con el depurador.",
	"c_cpp.walkthrough.run.debug.linux.description": "Abre el archivo de C++ y haz clic en el botón reproducir de la esquina superior derecha del editor o presiona F5 cuando estés en el archivo. Selecciona \"g++ - Compilar y depurar archivo activo\" para ejecutarlo con el depurador.",
	"c_cpp.walkthrough.run.debug.windows.description": "Abre el archivo de C++ y haz clic en el botón reproducir de la esquina superior derecha del editor o presiona F5 cuando estés en el archivo. Selecciona \"cl.exe - Compilar y depurar archivo activo\" para ejecutarlo con el depurador.",
	"c_cpp.walkthrough.run.debug.windows.altText": "Imagen que muestra un punto de interrupción en un archivo de C++, el botón f5 y el símbolo de ejecución en la parte superior derecha",
	"c_cpp.walkthrough.customize.debugging.title": "Personalizar depuración",
	"c_cpp.walkthrough.customize.debugging.mac.description": "Para personalizar la configuración de depuración, seleccione el Explorador en la barra de actividad y abra una carpeta que incluya el archivo de C++. Abra el archivo de C++ y seleccione \"Agregar configuración de depuración\" a la derecha del botón de reproducción. La nueva configuración de depuración se guarda en el archivo launch.json del proyecto. \n[Learn More](https://code.visualstudio.com/docs/cpp/config-linux#_debug-helloworldcpp)",
	"c_cpp.walkthrough.customize.debugging.linux.description": "Para personalizar la configuración de depuración, seleccione el Explorador en la barra de actividad y abra una carpeta que incluya el archivo de C++. Abra el archivo de C++ y seleccione \"Agregar configuración de depuración\" a la derecha del botón de reproducción. La nueva configuración de depuración se guarda en el archivo launch.json del proyecto. \n[Learn More](https://code.visualstudio.com/docs/cpp/config-msvc#_debug-helloworldcpp)",
	"c_cpp.walkthrough.customize.debugging.windows.description": "Para personalizar la configuración de depuración, seleccione el Explorador en la barra de actividad y abra una carpeta que incluya el archivo de C++. Abra el archivo de C++ y seleccione \"Agregar configuración de depuración\" a la derecha del botón de reproducción. La nueva configuración de depuración se guarda en el archivo launch.json del proyecto. \n[Learn More](https://code.visualstudio.com/docs/cpp/config-clang-mac#_debug-helloworldcpp)",
	"c_cpp.walkthrough.customize.debugging.altText": "Imagen que muestra Agregar configuración de depuración en la lista desplegable",
	"c_cpp.codeActions.refactor.inline.macro.title": "Insertar macro",
	"c_cpp.codeActions.refactor.inline.macro.description": "Reemplace la invocación de macro por el código expandido.",
	"c_cpp.codeActions.refactor.extract.function.title": "Extraer a una función",
	"c_cpp.codeActions.refactor.extract.function.description": "Extraer el código seleccionado a una función libre o función miembro.",
	"c_cpp.configuration.refactoring.includeHeader.markdownDescription": "Controla si se incluye el archivo de encabezado de una función/símbolo refactorizado a su correspondiente archivo de origen al realizar una acción de refactorización, como crear declaración/definición.",
	"c_cpp.configuration.refactoring.includeHeader.always.description": "Incluya siempre el archivo de encabezado si no está incluido explícitamente en su archivo de origen.",
	"c_cpp.configuration.refactoring.includeHeader.ifNeeded.description": "Incluya el archivo de encabezado sólo si no está incluido explícitamente en su archivo de origen o mediante inclusión implícita.",
	"c_cpp.configuration.refactoring.includeHeader.never.description": "Nunca incluya el archivo de encabezado."
}