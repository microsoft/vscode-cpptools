/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.name": "Identyfikator konfiguracji. Wartości Mac, Linux i Win32 są specjalnymi identyfikatorami dla konfiguracji, które zostaną wybrane automatycznie na tych platformach, ale ten identyfikator może być dowolny.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.compilerPath": "Pełna ścieżka używanego kompilatora, na przykład /usr/bin/gcc. Umożliwia ona zwiększenie dokładności funkcji IntelliSense.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.compilerArgs": "Argumenty kompilatora do modyfikacji używanych elementów dołączanych lub definicji, na przykład -nostdinc++, -m32 itp.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.cStandard": "Wersja standardu języka C, która ma być używana na potrzeby funkcji IntelliSense. Uwaga: standardy GNU są używane tylko do wykonywania zapytań względem kompilatora w celu pobrania dyrektyw define systemu GNU, a funkcja IntelliSense będzie emulować odpowiednią wersję standardu języka C.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.cppStandard": "Wersja standardu języka C++, która ma być używana na potrzeby funkcji IntelliSense. Uwaga: standardy GNU są używane tylko do wykonywania zapytań względem kompilatora w celu pobrania dyrektyw define systemu GNU, a funkcja IntelliSense będzie emulować odpowiednią wersję standardu języka C++.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.compileCommands": "Pełna ścieżka do pliku compile_commands.json dla obszaru roboczego.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.includePath": "Lista ścieżek, których aparat IntelliSense ma używać podczas wyszukiwania dołączanych nagłówków. Wyszukiwanie w tych ścieżkach nie jest rekurencyjne. Użyj znaku „*”, aby określić wyszukiwanie rekurencyjne. Na przykład wartość „${workspaceFolder}/**” powoduje przeszukiwanie wszystkich podkatalogów, w przeciwieństwie do wartości „${workspaceFolder}”.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.macFrameworkPath": "Lista ścieżek, których aparat IntelliSense ma używać podczas wyszukiwania dołączanych nagłówków z platform na komputerach Mac. Obsługiwane tylko w konfiguracji dla komputerów Mac.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.windowsSdkVersion": "Wersja ścieżki dołączania zestawu Windows SDK do użycia w systemie Windows, na przykład „10.0.17134.0”.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.defines": "Lista definicji preprocesora, które mają być używane przez aparat IntelliSense podczas analizowania plików. Opcjonalnie można użyć operatora =, aby ustawić wartość, na przykład VERSION=1.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.intelliSenseMode": "Tryb funkcji IntelliSense do użycia, który jest mapowany na odpowiedni dla platformy i architektury wariant kompilatora MSVC, gcc albo Clang. Jeśli ta wartość nie zostanie ustawiona lub zostanie ustawiona na ${default}, rozszerzenie wybierze ustawienie domyślne dla danej platformy. Dla systemu Windows jest używana wartość domyślna windows-msvc-x64, dla systemu Linux — linux-gcc-x64, a dla systemu macOS — macos-clang-x64. Tryby funkcji IntelliSense, które określają tylko warianty <kompilator>-<architektura> (np. gcc-x64) to starsze tryby i są one automatycznie konwertowane na warianty <platforma>-<kompilator>-<architektura> w oparciu o platformę hosta.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.forcedInclude": "Lista plików, które powinny być dołączane przed wszelkimi dołączanymi plikami w jednostce translacji.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.configurationProvider": "Identyfikator rozszerzenia programu VS Code, które może udostępnić informacje o konfiguracji funkcji IntelliSense dla plików źródłowych.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.browse.properties.limitSymbolsToIncludedHeaders": "Wartość true, aby przetwarzać tylko pliki bezpośrednio lub pośrednio dołączone jako nagłówki. Wartość false, aby przetwarzać wszystkie pliki w określonych ścieżkach dołączania.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.browse.properties.databaseFilename": "Ścieżka do generowanej bazy danych symboli. Jeśli zostanie określona ścieżka względna, będzie to ścieżka względem domyślnej lokalizacji magazynowania obszaru roboczego.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.browse.properties.path": "Lista ścieżek używanych do indeksowania i analizowania symboli obszaru roboczego (używana m.in. przez funkcje Przejście do definicji, Znajdowanie wszystkich odwołań). Wyszukiwanie na tych ścieżkach jest domyślnie rekursywne. Za pomocą znaku „*” możesz oznaczyć wyszukiwanie jako nierekursywne. Na przykład „${workspaceFolder}” przeszukuje wszystkie podkatalogi, a „${workspaceFolder}/*” już nie.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.customConfigurationVariables": "Zmienne niestandardowe, względem których można wykonywać zapytania za pomocą polecenia ${cpptools:activeConfigCustomVariable}, aby użyć ich na potrzeby zmiennych wejściowych w plikach launch.json lub tasks.json.",
	"c_cpp_properties.schema.json.definitions.env": "Zmienne niestandardowe, których można używać ponownie w dowolnym miejscu tego pliku przy użyciu składni ${zmienna} lub ${env:zmienna}.",
	"c_cpp_properties.schema.json.definitions.version": "Wersja pliku konfiguracji. Tą właściwością zarządza rozszerzenie. Nie zmieniaj jej.",
	"c_cpp_properties.schema.json.definitions.enableConfigurationSquiggles": "Określa, czy rozszerzenie będzie raportować błędy wykryte w pliku c_cpp_properties.json."
}