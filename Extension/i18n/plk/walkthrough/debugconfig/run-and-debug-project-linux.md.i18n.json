/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"walkthrough.linux.title.run.and.debug.your.file": "Uruchom i debuguj plik C++ w systemie Linux",
	"walkthrough.linux.run.and.debug.your.file": "Aby uruchomić i debugować plik C++ w programie VS Code:",
	"walkthrough.linux.instructions1": "Otwórz plik źródłowy języka C++, który chcesz uruchomić i debugować. Upewnij się, że ten plik jest aktywny (obecnie wyświetlany i zaznaczony) w edytorze.",
	"walkthrough.linux.press.f5": "Naciśnij pozycję {0}. Ewentualnie z menu głównego wybierz pozycję {1}.",
	"walkthrough.linux.run": "Uruchom",
	"walkthrough.linux.start.debugging": "Rozpocznij debugowanie",
	"walkthrough.linux.select.compiler": "Wybierz kompilator {0}.",
	"walkthrough.linux.choose.build.active.file": "Wybierz kompilację {0}.",
	"walkthrough.linux.build.and.debug.active.file": "Kompiluj i debuguj aktywny plik",
	"walkthrough.linux.after.running": "Po uruchomieniu i debugowaniu pliku C++ po raz pierwszy zobaczysz dwa nowe pliki w folderze {0} projektu: {1} i {2}.",
	"walkthrough.linux.for.more.complex": "W przypadku bardziej złożonych scenariuszy kompilacji i debugowania można dostosować zadania kompilacji i konfiguracje debugowania w pozycjach {0} i {1}. Na przykład jeśli zwykle przekazujesz argumenty do kompilatora podczas kompilowania z poziomu wiersza polecenia, możesz określić te argumenty w pozycji{2} przy użyciu właściwości {3}. Podobnie można zdefiniować argumenty do przekazania do programu na potrzeby debugowania w pozycji{4}."
}