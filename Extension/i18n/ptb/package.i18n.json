/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"c_cpp.capabilities.untrustedWorkspaces.description": "Múltiplas configurações podem fazer com que processos locais ao espaço de trabalho sejam executados, por exemplo, C_Cpp.clang_format_path, C_Cpp.codeAnalysis.clangTidy.path, C_Cpp.addNodeAddonIncludePaths, C_Cpp.default.compilerPath, C_Cpp.default.configurationProvider, e C_Cpp.default.compileCommands, e as propriedades equivalentes em c_cpp_properties.json.",
	"c_cpp.command.configurationSelect.title": "Selecione uma Configuração...",
	"c_cpp.command.configurationProviderSelect.title": "Alterar Provedor de Configuração...",
	"c_cpp.command.configurationEditJSON.title": "Editar Configurações (JSON)",
	"c_cpp.command.configurationEditUI.title": "Editar Configurações (IU)",
	"c_cpp.command.switchHeaderSource.title": "Alternar Cabeçalho/Origem",
	"c_cpp.command.enableErrorSquiggles.title": "Habilitar Rabiscos de Erro",
	"c_cpp.command.disableErrorSquiggles.title": "Desabilitar Rabiscos de Erro",
	"c_cpp.command.toggleIncludeFallback.title": "Ativar/Desativar o Fallback do Mecanismo IntelliSense em Erros de Inclusão",
	"c_cpp.command.toggleDimInactiveRegions.title": "Ativar/Desativar a Colorização de Região Inativa",
	"c_cpp.command.resetDatabase.title": "Redefinir o Banco de Dados IntelliSense",
	"c_cpp.command.takeSurvey.title": "Responder Pesquisa",
	"c_cpp.command.restartIntelliSenseForFile.title": "Reiniciar o IntelliSense para o Arquivo Ativo",
	"c_cpp.command.logDiagnostics.title": "Diagnóstico de Log",
	"c_cpp.command.referencesViewGroupByType.title": "Agrupar por Tipo de Referência",
	"c_cpp.command.referencesViewUngroupByType.title": "Desagrupar por Tipo de Referência",
	"c_cpp.command.rescanWorkspace.title": "Examinar Novamente o Workspace",
	"c_cpp.command.vcpkgClipboardInstallSuggested.title": "Copiar o comando de instalação vcpkg para a área de transferência",
	"c_cpp.command.vcpkgOnlineHelpSuggested.title": "Visite a página de ajuda do vcpkg",
	"c_cpp.command.generateEditorConfig.title": "Gerar o conteúdo do EditorConfig por meio das configurações de Formato do VC",
	"c_cpp.command.GoToNextDirectiveInGroup.title": "Ir para a próxima diretiva de pré-processador no grupo condicional",
	"c_cpp.command.GoToPrevDirectiveInGroup.title": "Ir para a diretiva de pré-processador anterior no grupo condicional",
	"c_cpp.command.RunCodeAnalysisOnActiveFile.title": "Executar Code Analysis no Arquivo Ativo",
	"c_cpp.command.RunCodeAnalysisOnOpenFiles.title": "Executar Code Analysis em Abrir Arquivos",
	"c_cpp.command.RunCodeAnalysisOnAllFiles.title": "Executar Code Analysis em Todos os Arquivos",
	"c_cpp.command.RemoveAllCodeAnalysisProblems.title": "Limpar Todos os Problemas de Code Analysis",
	"c_cpp.command.BuildAndDebugFile.title": "Depurar Arquivo C/C++",
	"c_cpp.command.BuildAndRunFile.title": "Executar Arquivo C/C++",
	"c_cpp.command.AddDebugConfiguration.title": "Adicionar a Configuração de Depuração",
	"c_cpp.configuration.maxConcurrentThreads.markdownDescription": "O número máximo de threads simultâneos a serem usado para processamento de serviço de linguagem. O valor é uma dica e nem sempre pode ser usado. O padrão de `null` (vazio) usa o número de processadores lógicos disponíveis.",
	"c_cpp.configuration.maxCachedProcesses.markdownDescription": "O número máximo de processos armazenados em cache a serem usado para o processamento do serviço de linguagem. O padrão `null` (vazio) usa duas vezes o número de processadores lógicos disponíveis.",
	"c_cpp.configuration.maxMemory.markdownDescription": "A memória máxima (em MB) disponível para processamento do serviço de idioma. Menos processos serão armazenados em cache e executados simultaneamente depois que esse uso de memória for excedido. O padrão `null` (vazio) usa a memória livre do sistema.",
	"c_cpp.configuration.intelliSense.maxCachedProcesses.markdownDescription": "O número máximo de processos do IntelliSense a serem mantidos em execução. O padrão de `null` (vazio) usa o valor herdado de `#C_Cpp.maxCachedProcesses#`",
	"c_cpp.configuration.intelliSense.maxMemory.markdownDescription": "Os processos mais antigos do IntelliSense serão desligados antes que novos processos sejam criados depois que esse uso de memória (em MB) for excedido. O padrão de `null` (vazio) usa o valor herdado de `#C_Cpp.maxMemory#`.",
	"c_cpp.configuration.references.maxConcurrentThreads.markdownDescription": "O número máximo de threads simultâneos a serem usados para 'Localizar todas as referências' e 'Renomear'. O padrão de `null` (vazio) usa o valor herdado de `#C_Cpp.maxConcurrentThreads#`.",
	"c_cpp.configuration.references.maxCachedProcesses.markdownDescription": "O número máximo de processos para manter na memória para 'Encontrar todas as referências' e 'Renomear'. O padrão de `0` desabilita esse recurso. O valor de `null` (vazio) usa o valor herdado de `#C_Cpp.maxCachedProcesses#`.",
	"c_cpp.configuration.references.maxMemory.markdownDescription": "Menos processos 'Localizar Todas as Referências' e 'Renomear' serão armazenados em cache e executados simultaneamente depois que esse uso de memória (em MB) for excedido. O padrão de `null` (vazio) usa o valor herdado de `#C_Cpp.maxMemory#`.",
	"c_cpp.configuration.codeAnalysis.maxConcurrentThreads.markdownDescription": "O número máximo de threads simultâneos a serem usados para análise de código. O padrão `null` (vazio) usa metade do valor herdado de `#C_Cpp.maxConcurrentThreads#`.",
	"c_cpp.configuration.codeAnalysis.maxMemory.markdownDescription": "Menos processos de análise de código serão executados simultaneamente depois que esse uso de memória (em MB) for excedido. O padrão de `null` (vazio) usa o valor herdado de `#C_Cpp.maxMemory#`.",
	"c_cpp.configuration.codeAnalysis.updateDelay.markdownDescription": "Controla o atraso em milissegundos antes que a análise de código comece o processamento depois que um salvamento é disparado de uma edição quando `#files.autoSave#` é `afterDelay` e `#C_Cpp.codeAnalysis.runAutomatically#` é `true`.",
	"c_cpp.configuration.codeAnalysis.exclude.markdownDescription": "Configure padrões glob para excluir pastas e arquivos para análise de código. Arquivos que não estão na pasta do workspace são sempre excluídos. Herda valores de `#files.exclude#` e `#C_Cpp.files.exclude#`. Leia mais sobre padrões glob [aqui](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).",
	"c_cpp.configuration.codeAnalysis.excludeBoolean.markdownDescription": "O padrão glob para corresponder aos caminhos de arquivo. Defina como `true` ou `false` para habilitar ou desabilitar o padrão.",
	"c_cpp.configuration.codeAnalysis.excludeWhen.markdownDescription": "Verificação adicional nos irmãos de um arquivo correspondente. Use `$(basename)` como variável para o nome do arquivo correspondente.",
	"c_cpp.configuration.codeAnalysis.runAutomatically.markdownDescription": "Se for `true`, a análise de código será executada automaticamente em um arquivo depois que ele for aberto ou salvo.",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showDisable.markdownDescription": "Se for 'true', a ação de código 'Disable' será mostrada quando disponível (na próxima vez que a análise de código for executada). Quando a ação de código 'Desabilitar' é usada, ela adiciona o código de aviso à configuração 'C_Cpp.codeAnalysis.clangTidy.checks.disabled'.",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showDocumentation.markdownDescription": "Se for 'true', a ação de código 'Mostrar Documentação para' será mostrada quando disponível (na próxima vez que a análise de código for executada).",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.description": "Controla quais opções de ação de código de problema de análise de código 'Limpar' estão disponíveis. Alterar a configuração para mostrar mais opções pode exigir a re-execução da análise de código.",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.None.description": "Não mostrar ações de código 'Limpar'.",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.AllOnly.description": "Mostrar apenas a ação de código 'Limpar tudo' (ou 'Limpar todos <type>' se houver apenas um tipo ou 'Limpar isso' se houver apenas um problema).",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.AllAndAllType.description": "Mostrar a ação de código 'Limpar tudo' (se houver vários tipos de problema) e a ação de código 'Limpar tudo <type>' código de ação (ou 'Limpar isso' se houver apenas um problema para o <type>)",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.AllAndAllTypeAndThis.description": "Mostrar 'Limpar tudo' (se houver vários tipos de problema), 'Limpar todos os <type>' (se houver vários problemas para o <type>), e 'Limpar isso' para código de ações",
	"c_cpp.configuration.codeAnalysis.clangTidy.enabled.markdownDescription": "Se for `true`, a análise de código usando `clang-tidy` será habilitada e executada automaticamente se `#C_Cpp.codeAnalysis.runAutomatically#` for `true` (o padrão).",
	"c_cpp.configuration.codeAnalysis.clangTidy.path.markdownDescription": "O caminho completo do executável `clang-tidy`. Se não for especificado, o `clang-tidy` estará disponível no caminho do ambiente usado. Se não for encontrado no caminho do ambiente, o `clang-tidy` empacotado com a extensão será usado.",
	"c_cpp.configuration.codeAnalysis.clangTidy.config.markdownDescription": "Especifica uma configuração `clang-tidy` no formato YAML/JSON: `{Checks: '-*,clang-analyzer-*', CheckOptions: [{chave: x, valor: y}]}`. Quando o valor estiver vazio, `clang-tidy` tentará localizar um arquivo chamado `.clang-tidy` para cada arquivo de origem em seus diretórios pai.",
	"c_cpp.configuration.codeAnalysis.clangTidy.fallbackConfig.markdownDescription": "Especifica uma configuração `clang-tidy` no formato YAML/JSON a ser usada como fallback quando `#C_Cpp.codeAnalysis.clangTidy.config#` não estiver definido e nenhum arquivo `.clang-tidy` for encontrado: `{Checks: '-*,clang-analyzer-*', CheckOptions: [{chave: x, valor: y}]}`.",
	"c_cpp.configuration.codeAnalysis.clangTidy.headerFilter.markdownDescription": "Uma expressão regular estendida (ERE) que corresponde ao nome do cabeçalho a partir do qual o diagnóstico deve ser gerado. Os diagnósticos do arquivo principal de cada unidade de tradução são sempre exibidos. A variável `${workspaceFolder}` é suportada (e será usada como o valor de fallback padrão se o arquivo `.clang-tidy` não existir). Se esta opção não for `null` (vazia), ela substituirá a opção `HeaderFilterRegex` em um arquivo `.clang-tidy`, se houver.",
	"c_cpp.configuration.codeAnalysis.clangTidy.args.markdownDescription": "Argumentos de linha de comando adicionais a serem passados para `clang-tidy`. Elas têm precedência sobre as configurações `C_Cpp.codeAnalysis.clangTidy.*` equivalentes.",
	"c_cpp.configuration.codeAnalysis.clangTidy.useBuildPath.markdownDescription": "Se 'true' e 'compileCommands' estiver definido, o argumento '-p=<build-path>' será passado para 'clang-tidy' em vez dos argumentos de compilação que estão sendo passados após '--'. Isso pode não funcionar se as variáveis de ambiente não estão definidas para que as insições do sistema possam ser encontradas.",
	"c_cpp.configuration.codeAnalysis.clangTidy.checks.enabled.markdownDescription": "Lista de verificações `clang-tidy` habilitadas. Os valores são acrescentados às `Verificações` em um arquivo `.clang-tidy` ou `#C_Cpp.codeAnalysis.clangTidy.config#`, se houver. A verificação padrão `clang-analyzer-*` é sempre usada, a menos que seja explicitamente desabilitada.",
	"c_cpp.configuration.codeAnalysis.clangTidy.checks.disabled.markdownDescription": "Lista de verificações `clang-tidy` desabilitadas. Os valores são acrescentados às `Verificações` em um arquivo `.clang-tidy` ou `#C_Cpp.codeAnalysis.clangTidy.config#`, se houver.",
	"c_cpp.configuration.formatting.description": "Configura o mecanismo de formatação.",
	"c_cpp.configuration.formatting.clangFormat.markdownDescription": "`clang-format` será usado para formatar o código.",
	"c_cpp.configuration.formatting.vcFormat.markdownDescription": "O mecanismo de formatação Visual C++ será usado para formatar o código.",
	"c_cpp.configuration.formatting.Default.markdownDescription": "Por padrão, `clang-format` será usado para formatar o código. No entanto, o mecanismo de formatação Visual C++ será usado se um arquivo `.editorconfig` com configurações relevantes for encontrado próximo ao código sendo formatado e` #C_Cpp.clang_format_style# ` for o valor padrão:`arquivo`.",
	"c_cpp.configuration.formatting.Disabled.markdownDescription": "A formatação de código será desabilitada.",
	"c_cpp.configuration.vcFormat.indent.braces.markdownDescription": "As chaves são recuadas pelo valor especificado na configuração `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.description": "Determina a que recuo de nova linha é relativo.",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.outermostParenthesis.description": "Recuar a nova linha em relação ao parêntese de abertura mais externo.",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.innermostParenthesis.description": "Recuar a nova linha em relação ao parêntese de abertura mais interno.",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.statementBegin.description": "Recuar a nova linha em relação ao início da instrução atual.",
	"c_cpp.configuration.vcFormat.indent.withinParentheses.markdownDescription": "Quando uma nova linha é digitada, ela é alinhada sob o parêntese de abertura ou baseada em `#C_Cpp.vcFormat.indent.multiLineRelativeTo#`.",
	"c_cpp.configuration.vcFormat.indent.withinParentheses.alignToParenthesis.markdownDescription": "A nova linha é alinhada sob o parêntese de abertura.",
	"c_cpp.configuration.vcFormat.indent.withinParentheses.indent.markdownDescription": "A nova linha é recuada com base em `#C_Cpp.vcFormat.indent.multiLineRelativeTo#`.",
	"c_cpp.configuration.vcFormat.indent.preserveWithinParentheses.description": "No código existente, preservar o alinhamento de recuo existente das novas linhas entre parênteses.",
	"c_cpp.configuration.vcFormat.indent.caseLabels.markdownDescription": "Os rótulos são recuados em relação às instruções de troca pela quantidade especificada na configuração `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.caseContents.markdownDescription": "O código dentro de um bloco `case` é recuado em relação ao seu rótulo pela quantidade especificada na configuração `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.caseContentsWhenBlock.markdownDescription": "Recue os colchetes seguindo uma instrução de caso pela quantidade especificada na configuração `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.lambdaBracesWhenParameter.markdownDescription": "Recue colchetes de lambdas usados ​​como parâmetros de função relativos ao início da instrução pela quantidade especificada na configuração `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.description": "A posição dos rótulos goto.",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.oneLeft.markdownDescription": "Posicione os rótulos goto à esquerda do recuo do código atual, pelo valor especificado na configuração `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.leftmostColumn.markdownDescription": "Posicionar os rótulos goto na borda mais à esquerda do código.",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.none.markdownDescription": "Os rótulos goto não serão formatados.",
	"c_cpp.configuration.vcFormat.indent.preprocessor.description": "A posição das diretivas do pré-processador.",
	"c_cpp.configuration.vcFormat.indent.preprocessor.oneLeft.markdownDescription": "As diretivas do pré-processador são posicionadas à esquerda do recuo do código atual, pela quantidade especificada na configuração `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.preprocessor.leftmostColumn.markdownDescription": "As diretivas de pré-processador são posicionadas na borda mais à esquerda do código.",
	"c_cpp.configuration.vcFormat.indent.preprocessor.none.markdownDescription": "As diretivas de pré-processador não serão formatadas.",
	"c_cpp.configuration.vcFormat.indent.accessSpecifiers.markdownDescription": "Os especificadores de acesso são recuados em relação às definições de classe ou estrutura pela quantidade especificada na configuração `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.namespaceContents.markdownDescription": "O código é recuado em relação ao seu namespace delimitador pela quantidade especificada na configuração `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.preserveComments.description": "O recuo dos comentários não é alterado durante as operações de formatação.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.namespace.description": "A posição das chaves de abertura para namespaces.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.type.description": "A posição das chaves de abertura para definições de tipo.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.lambda.description": "A posição das chaves de abertura para funções lambda.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.function.description": "A posição das chaves de abertura para funções.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.block.description": "A posição das chaves de abertura para blocos de controle.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.newLine.description": "As chaves de abertura são movidas para uma nova linha.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.sameLine.description": "As chaves de abertura são mantidas na mesma linha e um espaço é adicionado antes de cada uma.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.ignore.description": "As chaves de abertura não são formatadas.",
	"c_cpp.configuration.vcFormat.newLine.scopeBracesOnSeparateLines.description": "Posicionar as chaves de abertura e de fechamento de escopos em linhas separadas.",
	"c_cpp.configuration.vcFormat.newLine.closeBraceSameLine.emptyType.description": "Para tipos vazios, mover as chaves de fechamento para a mesma linha que as chaves de abertura.",
	"c_cpp.configuration.vcFormat.newLine.closeBraceSameLine.emptyFunction.description": "Para corpos de função vazios, mover as chaves de fechamento para a mesma linha que as chaves de abertura.",
	"c_cpp.configuration.vcFormat.newLine.beforeCatch.markdownDescription": "Coloque `catch` e palavras-chave semelhantes em uma nova linha.",
	"c_cpp.configuration.vcFormat.newLine.beforeElse.markdownDescription": "Coloque `else` em uma nova linha.",
	"c_cpp.configuration.vcFormat.newLine.beforeWhileInDoWhile.markdownDescription": "Coloque `while` em um loop `do`-`while` em uma nova linha.",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.description": "Espaçamento entre nomes de funções e parênteses de abertura de listas de argumentos.",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.insert.description": "Adicionar um espaço antes do parêntese de abertura de uma função.",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.remove.description": "Os espaços antes dos parênteses de abertura de uma função são removidos.",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.ignore.description": "Os espaços são mantidos conforme foram inseridos.",
	"c_cpp.configuration.vcFormat.space.withinParameterListParentheses.description": "Um espaço é adicionado depois do parêntese de abertura e também antes do parêntese de fechamento nas listas de parâmetros de função.",
	"c_cpp.configuration.vcFormat.space.betweenEmptyParameterListParentheses.description": "Quando uma lista de parâmetros de função está vazia, um espaço é inserido entre seus respectivos parênteses.",
	"c_cpp.configuration.vcFormat.space.afterKeywordsInControlFlowStatements.description": "Um espaço é adicionado entre a palavra-chave e o parêntese de abertura nas instruções de fluxo de controle.",
	"c_cpp.configuration.vcFormat.space.withinControlFlowStatementParentheses.description": "Um espaço é adicionado depois do parêntese de abertura e também antes do parêntese de fechamento nas instruções de fluxo de controle.",
	"c_cpp.configuration.vcFormat.space.beforeLambdaOpenParenthesis.description": "Um espaço é adicionado antes do parêntese de abertura das listas de argumentos lambda.",
	"c_cpp.configuration.vcFormat.space.withinCastParentheses.description": "Um espaço é adicionado depois do parêntese de abertura e também antes do parêntese de fechamento de uma conversão de estilo C.",
	"c_cpp.configuration.vcFormat.space.afterCastCloseParenthesis.description": "Um espaço é adicionado depois do parêntese de fechamento de uma conversão de estilo C.",
	"c_cpp.configuration.vcFormat.space.withinExpressionParentheses.description": "Um espaço é adicionado depois do parêntese de abertura e também antes do parêntese de fechamento de uma expressão entre parênteses.",
	"c_cpp.configuration.vcFormat.space.beforeBlockOpenBrace.description": "Um espaço é adicionado antes da chave de abertura dos blocos de escopo.",
	"c_cpp.configuration.vcFormat.space.betweenEmptyBraces.description": "Quando as chaves estão vazias e na mesma linha, um espaço é inserido entre elas.",
	"c_cpp.configuration.vcFormat.space.beforeInitializerListOpenBrace.description": "Um espaço é adicionado antes da chave de abertura da inicialização uniforme e das listas de inicializadores.",
	"c_cpp.configuration.vcFormat.space.withinInitializerListBraces.description": "Um espaço é adicionado depois da chave de abertura e também antes da chave de fechamento da inicialização uniforme e das listas de inicializadores.",
	"c_cpp.configuration.vcFormat.space.preserveInInitializerList.description": "Os espaços antes e depois das vírgulas são preservados dentro inicialização uniforme e das listas de inicializadores.",
	"c_cpp.configuration.vcFormat.space.beforeOpenSquareBracket.description": "Um espaço é adicionado antes dos colchetes de abertura.",
	"c_cpp.configuration.vcFormat.space.withinSquareBrackets.description": "Um espaço é adicionado depois do colchete de abertura e também antes do colchete de fechamento.",
	"c_cpp.configuration.vcFormat.space.beforeEmptySquareBrackets.description": "Quando colchetes estão vazios, um espaço é adicionado antes do colchete de abertura.",
	"c_cpp.configuration.vcFormat.space.betweenEmptySquareBrackets.description": "Quando colchetes estão vazios, um espaço é inserido entre eles.",
	"c_cpp.configuration.vcFormat.space.groupSquareBrackets.description": "Para matrizes multidimensionais, todos os espaços entre colchetes são removidos. Outras configurações que controlam espaços são substituídas.",
	"c_cpp.configuration.vcFormat.space.withinLambdaBrackets.description": "Um espaço é adicionado depois do colchete de abertura e também antes do colchete de fechamento.",
	"c_cpp.configuration.vcFormat.space.betweenEmptyLambdaBrackets.description": "Quando colchetes estão vazios, um espaço é inserido entre eles.",
	"c_cpp.configuration.vcFormat.space.beforeComma.description": "Um espaço é adicionado antes de cada vírgula.",
	"c_cpp.configuration.vcFormat.space.afterComma.description": "Um espaço é adicionado depois de cada vírgula.",
	"c_cpp.configuration.vcFormat.space.removeAroundMemberOperators.description": "Os espaços antes e depois dos operadores de acesso a membro, dos operadores de ponteiro para membro e dos operadores de resolução de escopo são removidos.",
	"c_cpp.configuration.vcFormat.space.beforeInheritanceColon.description": "Um espaço é adicionado antes dos dois-pontos para tipos herdados nas definições de classe.",
	"c_cpp.configuration.vcFormat.space.beforeConstructorColon.description": "Um espaço é adicionado antes dos dois-pontos nas definições do construtor.",
	"c_cpp.configuration.vcFormat.space.removeBeforeSemicolon.description": "Os espaços são removidos antes de cada ponto e vírgula.",
	"c_cpp.configuration.vcFormat.space.insertAfterSemicolon.description": "Um espaço é inserido depois de cada ponto e vírgula.",
	"c_cpp.configuration.vcFormat.space.removeAroundUnaryOperator.description": "Os espaços entre operadores unários e operandos são removidos.",
	"c_cpp.configuration.vcFormat.space.aroundBinaryOperator.description": "Espaços em torno de operadores binários.",
	"c_cpp.configuration.vcFormat.space.aroundAssignmentOperator.description": "Espaços em torno de operadores de atribuição.",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.description": "Espaços em torno de operadores de ponteiro e referência.",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.left.description": "Os ponteiros e os operadores de referência são alinhados à esquerda.",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.center.description": "Os ponteiros e os operadores de referência são centralizados.",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.right.description": "Os ponteiros e os operadores de referência são alinhados à direita.",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.ignore.description": "Os ponteiros e os operadores de referência não são formatados.",
	"c_cpp.configuration.vcFormat.space.aroundTernaryOperator.description": "Espaços em torno de operadores condicionais.",
	"c_cpp.configuration.vcFormat.space.aroundOperators.insert.description": "Um espaço é adicionado antes do operador e também depois dele.",
	"c_cpp.configuration.vcFormat.space.aroundOperators.remove.description": "Os espaços antes e depois do operador são removidos.",
	"c_cpp.configuration.vcFormat.space.aroundOperators.ignore.description": "Os espaços são mantidos conforme foram inseridos.",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.description": "Opções de embalagem para blocos.",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.oneLiners.markdownDescription": "Um bloco de código completo inserido em uma linha é mantido em uma linha, independentemente dos valores de qualquer uma das configurações `C_Cpp.vcFormat.newLine.*`.",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.allOneLineScopes.markdownDescription": "Qualquer código onde a chave de abertura e fechamento é inserida em uma linha é mantido em uma linha, independentemente dos valores de qualquer uma das configurações `C_Cpp.vcFormat.newLine.*`.",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.never.markdownDescription": "Os blocos de código são sempre formatados com base nos valores das configurações `C_Cpp.vcFormat.newLine. *`.",
	"c_cpp.configuration.clang_format_path.markdownDescription": "O caminho completo do executável `clang-format`. Se não for especificado, o `clang-format` estará disponível no caminho do ambiente usado. Se não for encontrado no caminho do ambiente, o `clang-format` empacotado com a extensão será usado.",
	"c_cpp.configuration.clang_format_style.markdownDescription": "Estilo de codificação, atualmente suporta: `Visual Studio`, `LLVM`, `Google`, `Chromium`, `Mozilla`, `WebKit`, `Microsoft`, `GNU`. Use `file` para carregar o estilo de um arquivo `.clang-format` no diretório atual ou pai. Use `{key: value, ...}` para definir parâmetros específicos. Por exemplo, o estilo `Visual Studio` é semelhante a: `{BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifier: - 4, NamespaceIndentation: All, FixNamespaceComments: false}`.",
	"c_cpp.configuration.clang_format_fallbackStyle.markdownDescription": "Nome do estilo predefinido usado como fallback no caso de `clang-format` ser invocado com o estilo` file`, mas o arquivo `.clang-format` não for encontrado. Os valores possíveis são `Visual Studio`,`LLVM`, `Google`,`Chromium`, `Mozilla`,`WebKit`, `Microsoft`,` GNU`, `none` ou use `{key: value, .. .}` para definir parâmetros específicos. Por exemplo, o estilo `Visual Studio` é semelhante a:`{BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifier: - 4, NamespaceIndentation: All, FixNamespaceComments: false}`.",
	"c_cpp.configuration.clang_format_sortIncludes.markdownDescription": "Se definido, substitui o comportamento de classificação de inclusão determinado pelo parâmetro `SortIncludes`.",
	"c_cpp.configuration.intelliSenseEngine.description": "Controla o provedor IntelliSense.",
	"c_cpp.configuration.intelliSenseEngine.default.description": "Fornece resultados baseados no contextopor meio de um processo IntelliSense separado.",
	"c_cpp.configuration.intelliSenseEngine.tagParser.description": "Fornece resultados \"difusos\" que não são sensíveis ao contexto.",
	"c_cpp.configuration.intelliSenseEngine.disabled.description": "Desabilita os recursos do serviço de linguagem C/C++.",
	"c_cpp.configuration.intelliSenseEngineFallback.markdownDescription": "Controla se o mecanismo IntelliSense mudará automaticamente para o Analisador de tags para unidades de tradução contendo erros `#include`.",
	"c_cpp.configuration.autocomplete.markdownDescription": "Controla o provedor de preenchimento automático. Se `Disabled` e você quiser o preenchimento baseado em palavras, você também precisará definir `\"[cpp]\": {\"editor.wordBasedSuggestions\": true}` (e da mesma forma para os idiomas `c` e `cuda-cpp`).",
	"c_cpp.configuration.autocomplete.default.description": "Usa o mecanismo IntelliSense ativo.",
	"c_cpp.configuration.autocomplete.disabled.description": "Usa o preenchimento baseado em palavras fornecido pelo Visual Studio Code.",
	"c_cpp.configuration.errorSquiggles.description": "Controla se os erros de compilação suspeitos detectados pelo mecanismo do IntelliSense serão relatados de volta ao editor. Ele também controla se os avisos de análise de código são relatados se as inclusões não puderem ser encontradas. Essa configuração é ignorada pelo mecanismo do Analisador de Marca.",
	"c_cpp.configuration.dimInactiveRegions.description": "Controla se os blocos de pré-processador inativos são coloridos de forma diferente do código ativo. Esta configuração não terá efeito se o IntelliSense estiver desabilitado ou se você estiver usando o tema de Alto Contraste Padrão.",
	"c_cpp.configuration.inactiveRegionOpacity.markdownDescription": "Controla a opacidade de blocos de pré-processador inativos. Escalas entre `0.1` e `1.0`. Esta configuração só se aplica quando o escurecimento da região inativa está habilitado.",
	"c_cpp.configuration.inactiveRegionForegroundColor.description": "Controla a cor da fonte dos blocos de pré-processador inativos. A entrada está no formato de um código de cor hexadecimal ou de uma Cor de Tema válida. Se não estiver definido, o esquema de cores de sintaxe do editor será usado como padrão. Esta configuração é aplicável somente quando o esmaecimento da região inativa está habilitado.",
	"c_cpp.configuration.inactiveRegionBackgroundColor.description": "Controla a cor da tela de fundo dos blocos de pré-processador inativos. A entrada está no formato de um código de cor hexadecimal ou de uma Cor de Tema válida. Se não estiver definido, transparente será usado como padrão. Esta configuração é aplicável somente quando o esmaecimento da região inativa está habilitado.",
	"c_cpp.configuration.loggingLevel.markdownDescription": "O detalhamento do registro no painel de saída. A ordem dos níveis do menos detalhado para o mais detalhado é:  `None` < `Error` < `Warning` < `Information` < `Debug`.",
	"c_cpp.configuration.autoAddFileAssociations.markdownDescription": "Controla se os arquivos são adicionados automaticamente a `#files.associations#` quando eles são o destino de uma operação de navegação de um arquivo C/C++.",
	"c_cpp.configuration.workspaceParsingPriority.markdownDescription": "Controla se a análise dos arquivos do espaço de trabalho não ativo usa hibernação para evitar o uso de 100% da CPU. Os valores `highest`/`high`/`medium`/`low` correspondem a aproximadamente 100/75/50/25% do uso da CPU.",
	"c_cpp.configuration.workspaceSymbols.description": "Os símbolos a serem incluídos nos resultados da consulta quando 'Acessar o Símbolo no Workspace' é invocado.",
	"c_cpp.configuration.exclusionPolicy.markdownDescription": "Instrui a extensão quando usar a configuração `#files.exclude#` (e `#C_Cpp.files.exclude#`) ao determinar quais arquivos devem ser adicionados ao banco de dados de navegação de código enquanto percorre os caminhos em `browse.path` matriz. Se sua configuração `#files.exclude#` contém apenas pastas, então `checkFolders` é a melhor escolha e aumentará a velocidade na qual a extensão pode inicializar o banco de dados de navegação de código.",
	"c_cpp.configuration.exclusionPolicy.checkFolders.description": "Os filtros de exclusão serão avaliados apenas uma vez por pasta (arquivos individuais não são verificados).",
	"c_cpp.configuration.exclusionPolicy.checkFilesAndFolders.description": "Os filtros de exclusão serão avaliados em relação a todos os arquivos e pastas encontrados.",
	"c_cpp.configuration.preferredPathSeparator.markdownDescription": "O caractere usado como separador de caminho para resultados de preenchimento automático de #include.",
	"c_cpp.configuration.simplifyStructuredComments.markdownDescription": "Se for `true`, as dicas de passar o mouse e autocompletar exibirão apenas alguns rótulos de comentários estruturados. Caso contrário, todos os comentários serão exibidos.",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.string.markdownDescription": "O padrão que inicia um bloco de comentário de várias linhas ou de uma linha. O padrão de continuação é `*` para blocos de comentários de várias linhas ou esta cadeia de caracteres para blocos de comentários de uma única linha.",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.object.begin.description": "O padrão que inicia um bloco de comentário de linha única ou de várias linhas.",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.object.continue.description": "O texto que será inserido na próxima linha quando Enter for pressionado dentro de um bloco de comentário de linha única ou de várias linhas.",
	"c_cpp.configuration.commentContinuationPatterns.description": "Define o comportamento do editor para quando a tecla Enter é pressionada dentro de um bloco de comentário de linha única ou de várias linhas.",
	"c_cpp.configuration.configurationWarnings.description": "Determina se as notificações pop-up serão mostradas quando uma extensão do provedor de configuração não puder fornecer uma configuração para um arquivo de origem.",
	"c_cpp.configuration.intelliSenseCachePath.markdownDescription": "Define o caminho da pasta para cabeçalhos pré-compilados em cache usados ​​pelo IntelliSense. O caminho de cache padrão é `%LocalAppData%/Microsoft/vscode-cpptools` no Windows,`$XDG_CACHE_HOME/vscode-cpptools/` no Linux (ou`$HOME/.cache/vscode-cpptools/` se`XDG_CACHE_HOME` não é definido) e `$HOME/Library/Caches/vscode-cpptools/` no macOS. O caminho padrão será usado se nenhum caminho for especificado ou se um caminho especificado for inválido.",
	"c_cpp.configuration.intelliSenseCacheSize.markdownDescription": "Tamanho máximo do espaço do disco rígido por espaço de trabalho em megabytes (MB) para cabeçalhos pré-compilados em cache; o uso real pode oscilar em torno desse valor. O tamanho padrão é `5120` MB. O cache de cabeçalho pré-compilado é desabilitado quando o tamanho é `0`.",
	"c_cpp.configuration.intelliSenseMemoryLimit.markdownDescription": "Limite de uso de memória em megabytes (MB) de um processo IntelliSense. O padrão é `4096` e o máximo é `16384`. A extensão será desligada e reiniciada um processo IntelliSense quando ele exceder o limite.",
	"c_cpp.configuration.intelliSenseUpdateDelay.description": "Controla o atraso em milissegundos até que o IntelliSense comece a ser atualizado após uma modificação.",
	"c_cpp.configuration.default.includePath.markdownDescription": "O valor a ser usado em uma configuração se `includePath` não for especificado em` c_cpp_properties.json`. Se `includePath` for especificado, adicione` $ {default} `ao array para inserir os valores desta configuração. Normalmente, isso não deve incluir inclusões de sistema; em vez disso, defina `#C_Cpp.default.compilerPath#`.",
	"c_cpp.configuration.default.defines.markdownDescription": "O valor a ser usado em uma configuração se `defines` não for especificado, ou os valores a serem inseridos se `${default} `estiver presente em `defines`.",
	"c_cpp.configuration.default.macFrameworkPath.markdownDescription": "O valor a ser usado em uma configuração se `macFrameworkPath` não for especificado, ou os valores a serem inseridos se`${default}`estiver presente em` macFrameworkPath`.",
	"c_cpp.configuration.default.windowsSdkVersion.markdownDescription": "A versão do SDK do Windows inclui o caminho a ser usado no Windows, por exemplo, `10.0.17134.0`.",
	"c_cpp.configuration.default.compileCommands.markdownDescription": "O valor a ser usado em uma configuração se `compileCommands` não for especificado ou definido como`${default}`.",
	"c_cpp.configuration.default.forcedInclude.markdownDescription": "O valor a usar em uma configuração se `forcedInclude` não for especificado, ou os valores a inserir se` ${padrão}`estiver presente em`forcedInclude`.",
	"c_cpp.configuration.default.intelliSenseMode.markdownDescription": "O valor a ser usado em uma configuração se `intelliSenseMode` não for especificado ou definido como`${default}`.",
	"c_cpp.configuration.default.compilerPath.markdownDescription": "O valor a ser usado em uma configuração se `compilerPath` não for especificado ou definido como`${default}`.",
	"c_cpp.configuration.default.compilerArgs.markdownDescription": "O valor a ser usado na configuração se `compilerArgs` não for especificado ou definido como`${default}`.",
	"c_cpp.configuration.default.cStandard.markdownDescription": "O valor a ser usado em uma configuração se `cStandard` não for especificado ou definido como`${default}`.",
	"c_cpp.configuration.default.cppStandard.markdownDescription": "O valor a ser usado em uma configuração se `cppStandard` não for especificado ou definido como`${default}`.",
	"c_cpp.configuration.default.configurationProvider.markdownDescription": "O valor a ser usado em uma configuração se `configurationProvider` não for especificado ou definido como`${default}`.",
	"c_cpp.configuration.default.mergeConfigurations.markdownDescription": "Defina como `true` para mesclar os caminhos de inclusão, definições e inclusões forçadas com aqueles de um provedor de configuração.",
	"c_cpp.configuration.default.browse.path.markdownDescription": "O valor a ser usado em uma configuração se `browse.path` não for especificado, ou os valores a serem inseridos se `${default}`estiver presente em`browse.path`.",
	"c_cpp.configuration.default.browse.databaseFilename.markdownDescription": "O valor a ser usado em uma configuração se `browse.databaseFilename` não for especificado ou definido como `${default}`.",
	"c_cpp.configuration.default.browse.limitSymbolsToIncludedHeaders.markdownDescription": "O valor a ser usado em uma configuração se `browse.limitSymbolsToIncludedHeaders` não for especificado ou definido como`${default}`.",
	"c_cpp.configuration.default.systemIncludePath.markdownDescription": "O valor a ser usado para o sistema inclui o caminho. Se definido, ele substitui o sistema inclui o caminho adquirido através das configurações `compilerPath` e `compileCommands`.",
	"c_cpp.configuration.default.enableConfigurationSquiggles.markdownDescription": "Controla se a extensão reportará erros detectados em `c_cpp_properties.json`.",
	"c_cpp.configuration.default.customConfigurationVariables.markdownDescription": "O valor a ser usado em uma configuração se `customConfigurationVariables` não estiver definido, ou os valores a serem inseridos se`${default}`estiver presente como uma chave em`customConfigurationVariables`.",
	"c_cpp.configuration.updateChannel.markdownDescription": "Defina como `Insiders` para baixar e instalar automaticamente as compilações mais recentes dos Insiders da extensão, que incluem os próximos recursos e correções de bugs.",
	"c_cpp.configuration.updateChannel.deprecationMessage": "Esta configuração foi preterida. As extensões de pré-lançamento agora estão disponíveis por meio do Marketplace.",
	"c_cpp.configuration.default.dotConfig.markdownDescription": "O valor a ser usado em uma configuração se `dotConfig` não for especificado, ou o valor a ser inserido se `${default}` estiver presente em `dotConfig`.",
	"c_cpp.configuration.experimentalFeatures.description": "Controla se os recursos \"experimentais\" podem ser usados.",
	"c_cpp.configuration.suggestSnippets.markdownDescription": "Se `true`, os snippets são fornecidos pelo servidor de linguagem.",
	"c_cpp.configuration.enhancedColorization.markdownDescription": "Se habilitado, o código é colorido com base no IntelliSense. Esta configuração se aplica apenas se `#C_Cpp.intelliSenseEngine#` estiver definido como `Default`.",
	"c_cpp.configuration.codeFolding.description": "Se habilitado, os intervalos de dobramento de código serão fornecidos pelo servidor de idiomas.",
	"c_cpp.configuration.vcpkg.enabled.markdownDescription": "Habilitar os serviços de integração para o [gerenciador de dependências vcpkg](https://aka.ms/vcpkg/).",
	"c_cpp.configuration.addNodeAddonIncludePaths.markdownDescription": "Adicione caminhos de inclusão de `nan` e `node-addon-api` quando forem dependências.",
	"c_cpp.configuration.renameRequiresIdentifier.markdownDescription": "Se `true`, 'Rename Symbol' exigirá um identificador C/C++ válido.",
	"c_cpp.configuration.autocompleteAddParentheses.markdownDescription": "Se `true`, autocomplete adicionará automaticamente `(` after function calls, in which case `)` também pode ser adicionado, dependendo do valor da configuração `#editor.autoClosingBrackets#`.",
	"c_cpp.configuration.filesExclude.markdownDescription": "Configure os padrões glob para excluir pastas (e arquivos se `#C_Cpp.exclusionPolicy#` for alterado). Eles são específicos para a extensão C/C++ e são adicionais a `#files.exclude#`, mas ao contrário de `#files.exclude#` eles também se aplicam a caminhos fora da pasta do espaço de trabalho atual e não são removidos da visualização do Explorer. Leia mais sobre padrões glob [aqui] (https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).",
	"c_cpp.configuration.filesExcludeBoolean.markdownDescription": "O padrão glob para corresponder aos caminhos de arquivo. Defina como `true` ou `false` para habilitar ou desabilitar o padrão.",
	"c_cpp.configuration.filesExcludeWhen.markdownDescription": "Verificação adicional nos irmãos de um arquivo correspondente. Use `$(basename)` como variável para o nome do arquivo correspondente.",
	"c_cpp.configuration.debugger.useBacktickCommandSubstitution.markdownDescription": "Se for `true`, a substituição do comando shell do depurador usará o acento grave obsoleto ``(`)``.",
	"c_cpp.configuration.legacyCompilerArgsBehavior.markdownDescription": "Habilite o comportamento anterior à v1.10.0 para como o escape do shell é tratado nas configurações do argumento do compilador. O escape de shell não é mais esperado ou suportado por padrão em matrizes arg a partir da v1.10.0.",
	"c_cpp.configuration.legacyCompilerArgsBehavior.deprecationMessage": "Essa configuração é temporária para dar suporte à transição para o comportamento corrigido na v1.10.0.",
	"c_cpp.contributes.views.cppReferencesView.title": "C/C++: outros resultados de referências",
	"c_cpp.contributes.viewsWelcome.contents": "Para saber mais sobre o launch.json, veja [Configuring C/C++ debugging](https://code.visualstudio.com/docs/cpp/launch-json-reference).",
	"c_cpp.configuration.debugShortcut.description": "Mostrar o botão de reprodução \"Executar e Depurar\" e a engrenagem \"Adicionar Configuração de Depuração\" na barra de título do editor para arquivos C++.",
	"c_cpp.debuggers.pipeTransport.description": "Quando presente, isso instrui o depurador a conectar-se a um computador remoto usando outro executável como um pipe que retransmitirá a entrada/saída padrão entre o VS Code e o executável do back-end do depurador habilitado para MI (como gdb).",
	"c_cpp.debuggers.pipeTransport.default.pipeProgram": "insira o caminho totalmente qualificado para o nome do programa de pipe, por exemplo '/usr/bin/ssh'.",
	"c_cpp.debuggers.pipeTransport.default.debuggerPath": "O caminho completo para o depurador no computador de destino, por exemplo, /usr/bin/gdb.",
	"c_cpp.debuggers.pipeTransport.debuggerPath.description": "O caminho completo para o depurador no computador de destino, por exemplo, /usr/bin/gdb.",
	"c_cpp.debuggers.pipeTransport.pipeCwd.description": "O caminho totalmente qualificado para o diretório de trabalho para o programa do pipe.",
	"c_cpp.debuggers.pipeTransport.pipeProgram.description": "O comando do pipe totalmente qualificado para executar.",
	"c_cpp.debuggers.pipeTransport.pipeArgs.description": "Argumentos da linha de comando passados para o programa do pipe para configurar a conexão.",
	"c_cpp.debuggers.pipeTransport.pipeEnv.description": "Variáveis de ambiente passadas para o programa do pipe.",
	"c_cpp.debuggers.pipeTransport.quoteArgs.description": "Se os argumentos individuais do pipeProgram contiverem caracteres (como espaços ou abas), ele deve ser citado? Se 'falso', o comando do depurador não será mais citado automaticamente. O padrão é 'verdadeiro'.",
	"c_cpp.debuggers.logging.description": "Sinalizadores opcionais para determinar quais tipos de mensagens devem ser registrados no Console de Depuração.",
	"c_cpp.debuggers.logging.exceptions.description": "Sinalizador opcional para determinar se as mensagens de exceção devem ser registradas no Console de Depuração. Usa true como padrão.",
	"c_cpp.debuggers.logging.moduleLoad.description": "Sinalizador opcional para determinar se os eventos de carregamento do módulo devem ser registrados no Console de Depuração. Usa true como padrão.",
	"c_cpp.debuggers.logging.programOutput.description": "Sinalizador opcional para determinar se a saída do programa deve ser registrada no Console de Depuração. Usa true como padrão.",
	"c_cpp.debuggers.logging.engineLogging.description": "Sinalizador opcional para determinar se as mensagens do mecanismo de depuração de diagnóstico devem ser registradas no Console de Depuração. Usa false como padrão.",
	"c_cpp.debuggers.logging.trace.description": "Sinalizador opcional para determinar se o rastreamento de comandos do adaptador de diagnóstico deve ser registrado no Console de Depuração. Usa false como padrão.",
	"c_cpp.debuggers.logging.traceResponse.description": "Sinalizador opcional para determinar se o rastreamento de resposta e de comandos do adaptador de diagnóstico deve ser registrado no Console de Depuração. Usa false como padrão.",
	"c_cpp.debuggers.cppvsdbg.logging.threadExit.description": "Sinalizador opcional para determinar se as mensagens de saída de linha devem ser registradas no Console de depurar. Padrão: falso.",
	"c_cpp.debuggers.cppvsdbg.logging.processExit.description": "Sinalizador opcional para determinar se as mensagens de saída do processo alvo devem ser registradas no Console de depuração. Padrão: verdadeiro.",
	"c_cpp.debuggers.text.description": "O comando do depurador a se executar.",
	"c_cpp.debuggers.description.description": "Descrição opcional para o comando.",
	"c_cpp.debuggers.ignoreFailures.description": "Se for true, as falhas do comando deverão ser ignoradas. O valor padrão é false.",
	"c_cpp.debuggers.program.description": "Caminho completo para o executável do programa.",
	"c_cpp.debuggers.args.description": "Argumentos de linha de comando passados para o programa.",
	"c_cpp.debuggers.cppdbg.type.description": "O tipo do mecanismo. Precisa ser \"cppdbg\".",
	"c_cpp.debuggers.cppvsdbg.type.description": "O tipo do mecanismo. Precisa ser \"cppvsdbg\".",
	"c_cpp.debuggers.targetArchitecture.description": "A arquitetura do depurador. Ela será detectada automaticamente a menos que este parâmetro seja definido. Os valores permitidos são x86, arm, arm64, mips, x64, amd64 e x86_64.",
	"c_cpp.debuggers.cwd.description": "O diretório de trabalho do destino.",
	"c_cpp.debuggers.setupCommands.description": "Um ou mais comandos GDB/LLDB para executar para configurar o depurador subjacente. Por exemplo: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].",
	"c_cpp.debuggers.postRemoteConnectCommands.description": "Um ou mais comandos executados após a conexão remota para um servidor de depuração.",
	"c_cpp.debuggers.customLaunchSetupCommands.description": "Se fornecido, isto substitui os comandos padrão usados para iniciar um destino com outros comandos. Por exemplo, isto pode ser \"-target-attach\" para anexar a um processo de destino. Uma lista de comandos vazia substituiu os comandos de inicialização por nada, o que pode ser útil se o depurador é fornecido com opções de lançamento como opções da linha de comando. Por exemplo: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].",
	"c_cpp.debuggers.launchCompleteCommand.description": "O comando para executar após o depurador ser completamente configurado para causar a execução do processo de destino. Os valores permitidos são \"exec-run\", \"exec-continue\" e \"None\". O valor padrão é \"exec-run\".",
	"c_cpp.debuggers.cppdbg.visualizerFile.description": "arquivo .natvis a ser usado durante a depuração deste processo. Esta opção não é compatível com a reformatação automática GDB. Além disso, confira \"showDisplayString\" se estiver usando esta configuração.",
	"c_cpp.debuggers.cppdbg.svdPath.description": "O caminho completo para o arquivo SVD de um dispositivo inserido.",
	"c_cpp.debuggers.cppvsdbg.visualizerFile.description": "arquivo .natvis a ser usado durante a depuração deste processo.",
	"c_cpp.debuggers.showDisplayString.description": "Quando um visualizerFile é especificado, showDisplayString habilita a cadeia de caracteres de exibição. Ativar essa opção pode causar um desempenho mais lento durante a depuração.",
	"c_cpp.debuggers.environment.description": "Variáveis de ambiente para adicionar ao ambiente para o programa. Por exemplo: [ { \"name\": \"config\", \"value\": \"Debug\" } ], não [ { \"config\": \"Debug\" } ].",
	"c_cpp.debuggers.envFile.description": "Caminho absoluto para um arquivo contendo definições de variáveis ​​de ambiente. Este arquivo possui pares de valores-chave separados por um sinal de igual por linha. Por exemplo. CHAVE=VALOR.",
	"c_cpp.debuggers.additionalSOLibSearchPath.description": "Lista separada por ponto e vírgula de diretórios a serem usados para pesquisar arquivos .so. Exemplo: \"c:\\dir1;c:\\dir2\".",
	"c_cpp.debuggers.MIMode.description": "Indica o depurador de console ao qual o MIDebugEngine será conectado. Os valores permitidos são \"gdb\" \"lldb\".",
	"c_cpp.debuggers.miDebuggerPath.description": "O caminho para o depurador de MI (como o gdb). Quando não for especificado, ele pesquisará primeiro o caminho para o depurador.",
	"c_cpp.debuggers.miDebuggerArgs.description": "Argumentos adicionais para o depurador MI (como o gdb).",
	"c_cpp.debuggers.miDebuggerServerAddress.description": "Endereço de rede do Servidor de Depurador MI ao qual se conectar (exemplo: localhost:1234).",
	"c_cpp.debuggers.stopAtEntry.description": "Parâmetro opcional. Se for true, o depurador deverá parar no ponto de entrada do destino. Se processId for passado, não terá efeito.",
	"c_cpp.debuggers.debugServerPath.description": "Caminho completo opcional para o servidor de depuração a ser lançado. O padrão é nulo. É usado em conjunto com \"miDebugServerAddress\" ou seu próprio servidor com um \"customSetupCommand\" que executa \"-target-select remote <server:port>\".",
	"c_cpp.debuggers.debugServerArgs.description": "Args opcionais do servidor de depuração. O padrão é null.",
	"c_cpp.debuggers.serverStarted.description": "Padrão iniciado pelo servidor opcional para procurar na saída do servidor de depuração. O padrão é null.",
	"c_cpp.debuggers.filterStdout.description": "Pesquise o fluxo stdout para o padrão iniciado pelo servidor e log stdout para depurar a saída. O padrão é true.",
	"c_cpp.debuggers.filterStderr.description": "Pesquise o fluxo stderr para o padrão iniciado pelo servidor e log stderr para depurar a saída. O padrão é false.",
	"c_cpp.debuggers.serverLaunchTimeout.description": "Tempo opcional, em milissegundos, para o depurador aguardar o debugServer iniciar. O padrão é 10.000.",
	"c_cpp.debuggers.coreDumpPath.description": "Caminho completo opcional para um arquivo de despejo de núcleo para o programa especificado. O padrão é nulo.",
	"c_cpp.debuggers.cppdbg.externalConsole.description": "Se for true, um console será iniciado para o depurador. Se for false, no Linux e no Windows, ele será exibido no Console Integrado.",
	"c_cpp.debuggers.cppvsdbg.externalConsole.description": "[Preterido pelo 'console'] Se esta opção for true, um console será iniciado para o depurador. Se for false, não será iniciado nenhum console.",
	"c_cpp.debuggers.cppvsdbg.console.description": "Onde iniciar o destino da depuração. Se esta opção não for definida, 'internalConsole' será usado como padrão.",
	"c_cpp.debuggers.cppvsdbg.console.internalConsole.description": "Saída para o console de depuração do código VS. Isso não suporta a leitura de entrada do console (ex: 'std :: cin' ou 'scanf').",
	"c_cpp.debuggers.cppvsdbg.console.integratedTerminal.description": "Terminal integrado do VS Code.",
	"c_cpp.debuggers.cppvsdbg.console.externalTerminal.description": "Aplicativos de console serão lançadas em uma janela de terminal externo. A janela será reutilizada em cenários de relançamento e não desaparecerá automaticamente quando o aplicativo sair.",
	"c_cpp.debuggers.cppvsdbg.console.newExternalWindow.description": "Os aplicativos de console serão iniciados em suas próprias janelas de console externas, que serão encerradas quando o aplicativo for interrompido. Os aplicativos que não são de console serão executados sem um terminal e as opções stdout/stderr serão ignoradas.",
	"c_cpp.debuggers.avoidWindowsConsoleRedirection.description": "Se for true, desabilitará o redirecionamento do console do depurador requerido para o suporte do Terminal Integrado.",
	"c_cpp.debuggers.sourceFileMap.description": "Mapeamentos de arquivo de origem opcionais passados ​​para o mecanismo de depuração. Exemplo: '{\"/original/source/path\":\"/current/source/path\"}'.",
	"c_cpp.debuggers.processId.anyOf.description": "ID do processo opcional ao qual anexar o depurador. Use \"${command:pickProcess}\" para obter uma lista de processos locais em execução aos quais anexar. Observe que algumas plataformas exigem privilégios de administrador para anexação a um processo.",
	"c_cpp.debuggers.symbolSearchPath.description": "Lista separada por ponto e vírgula de diretórios a serem usados para pesquisar arquivos de símbolo (ou seja, pdb). Exemplo: \"c:\\dir1;c:\\dir2\".",
	"c_cpp.debuggers.dumpPath.description": "Caminho completo opcional para um arquivo de despejo para o programa especificado. Exemplo: \"c:\\temp\\app.dmp\". Usa nulo como padrão.",
	"c_cpp.debuggers.enableDebugHeap.description": "Se for false, o processo será iniciado com o heap de depuração desabilitado. Isso define a variável de ambiente '_NO_DEBUG_HEAP' como '1'.",
	"c_cpp.debuggers.symbolLoadInfo.description": "Controle explícito do carregamento de símbolo.",
	"c_cpp.debuggers.symbolLoadInfo.loadAll.description": "Se for true, os símbolos de todas as bibliotecas serão carregados, caso contrário, não será carregado nenhum símbolo solib. O valor padrão é true.",
	"c_cpp.debuggers.symbolLoadInfo.exceptionList.description": "Lista de nomes de arquivos (caracteres curinga permitidos) separados por ponto-e-vírgula ';'. Modifica o comportamento de LoadAll. Se LoadAll for true, não carregue símbolos para libs que correspondam a qualquer nome na lista. Caso contrário, carregue apenas símbolos para libs que correspondam. Exemplo: \"foo.so; bar.so\".",
	"c_cpp.debuggers.requireExactSource.description": "Sinalizador opcional para exigir que o código-fonte atual corresponda ao PDB.",
	"c_cpp.debuggers.stopAtConnect.description": "Se for verdade, o depurador deve parar após a conexão com o alvo. Se falso, o depurador continuará após a conexão. O padrão é falso.",
	"c_cpp.debuggers.hardwareBreakpoints.description": "Controle explícito do comportamento do ponto de interrupção de hardware para alvos remotos.",
	"c_cpp.debuggers.hardwareBreakpoints.require.description": "Se for verdade, use sempre pontos de interrupção de hardware. O padrão é falso.",
	"c_cpp.debuggers.hardwareBreakpoints.limit.description": "Limite opcional do número de pontos de parada de hardware disponíveis para usar. Somente aplicado quando \"exigir\" é verdadeiro e \"limite\" é maior que 0. O valor padrão é 0.",
	"c_cpp.taskDefinitions.name.description": "O nome da tarefa.",
	"c_cpp.taskDefinitions.command.description": "O caminho para um compilador ou script que executa a compilação.",
	"c_cpp.taskDefinitions.args.description": "Argumentos adicionais para passar para o compilador ou script de compilação.",
	"c_cpp.taskDefinitions.options.description": "Opções de comando adicionais.",
	"c_cpp.taskDefinitions.options.cwd.description": "O diretório de trabalho atual do programa executado ou do script. Se omitido raiz de espaço de trabalho atual do código é usado.",
	"c_cpp.taskDefinitions.detail.description": "Detalhes adicionais da tarefa.",
	"c_cpp.debuggers.sourceFileMap.sourceFileMapEntry.description": "Os caminhos atual e do tempo de compilação são mapeados para as mesmas árvores de origem. Os arquivos encontrados em EditorPath são mapeados para o caminho CompileTimePath para correspondência de ponto de interrupção e mapeados de CompileTimePath para EditorPath ao exibir os locais de rastreamento de pilha.",
	"c_cpp.debuggers.sourceFileMap.sourceFileMapEntry.editorPath.description": "O caminho para a árvore de origem que o editor usará.",
	"c_cpp.debuggers.sourceFileMap.sourceFileMapEntry.useForBreakpoints.description": "False quando esta entrada é usada apenas para o mapeamento de local de registro de ativação. True quando esta entrada também deve ser usada ao especificar locais de ponto de interrupção.",
	"c_cpp.debuggers.symbolOptions.description": "Opções para controlar como os símbolos (arquivos .pdb) são encontrados e carregados.",
	"c_cpp.debuggers.VSSymbolOptions.description": "Fornece configuração para localizar e carregar símbolos no adaptador de depuração.",
	"c_cpp.debuggers.VSSymbolOptions.searchPaths.description": "Matriz de URLs do servidor de símbolos (exemplo: http​://MyExampleSymbolServer) ou diretórios (exemplo: /build/symbols) para pesquisar arquivos .pdb. Esses diretórios serão pesquisados além dos locais padrão, ao lado do módulo e do caminho em que o pdb foi removido originalmente.",
	"c_cpp.debuggers.VSSymbolOptions.searchMicrosoftSymbolServer.description": "Se for 'true', o servidor de Símbolos da Microsoft (https​://msdl.microsoft.com​/download/symbols) será adicionado ao caminho de pesquisa de símbolos. Se não for especificado, essa opção usará como padrão 'false'.",
	"c_cpp.debuggers.VSSymbolOptions.cachePath.description": "Diretório em que os símbolos baixados dos servidores de símbolos devem ser armazenados em cache. Se não for especificado no Windows, o depurador usará %TEMP%\\SymbolCache como padrão.",
	"c_cpp.debuggers.VSSymbolOptions.moduleFilter.description": "Fornece opções para controlar para quais módulos (arquivos .dll) o depurador tentará carregar símbolos (arquivos .pdb).",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.description": "Fornece configuração para carregar símbolos no adaptador de depuração.",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.mode.description": "Controla em quais dos dois modos operacionais básicos o filtro de módulo opera.",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.mode.loadAllButExcluded.enumDescriptions": "Carregue símbolos para todos os módulos, a menos que o módulo esteja na matriz 'excludedModules'.",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.mode.loadOnlyIncluded.enumDescriptions": "Não tente carregar símbolos para o módulo ANY, a menos que ele esteja na matriz 'includedModules' ou seja incluído por meio da configuração 'includeSymbolsNextToModules'.",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.excludedModules.description": "Matriz de módulos para a qual o depurador NÃO deve carregar símbolos. Há suporte para curingas (exemplo: MyCompany.*.dll).\n\nEssa propriedade será ignorada, a menos que 'mode' esteja definido como 'loadAllButExcluded'.",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.includedModules.description": "Matriz de módulos para a qual o depurador deve carregar símbolos. Há suporte para curingas (exemplo: MyCompany.*.dll).\n\nessa propriedade será ignorada, a menos que 'mode' esteja definido como 'loadOnlyIncluded'.",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.includeSymbolsNextToModules.description": "Se for verdadeira, para qualquer módulo NOT na matriz 'includedModules', o depurador ainda verificará ao lado do próprio módulo e do executável de inicialização, mas não verificará os caminhos na lista de pesquisa de símbolo. Esta opção é padronizada como 'true'.\n\nessa propriedade será ignorada, a menos que 'mode' esteja definido como 'loadOnlyIncluded'.",
	"c_cpp.semanticTokenTypes.referenceType.description": "Estilo para tipos de referência C++/CLI.",
	"c_cpp.semanticTokenTypes.cliProperty.description": "Estilo para propriedades C++/CLI.",
	"c_cpp.semanticTokenTypes.genericType.description": "Estilo para tipos genéricos C++/CLI.",
	"c_cpp.semanticTokenTypes.valueType.description": "Estilo para tipos de valor C++/CLI.",
	"c_cpp.semanticTokenTypes.templateFunction.description": "Estilo para funções de modelo C++.",
	"c_cpp.semanticTokenTypes.templateType.description": "Estilo para tipos de modelo C++.",
	"c_cpp.semanticTokenTypes.operatorOverload.description": "Estilo para operadores sobrecarregados em C++.",
	"c_cpp.semanticTokenTypes.memberOperatorOverload.description": "Estilo para funções de membro do operador sobrecarregada em C++.",
	"c_cpp.semanticTokenTypes.newOperator.description": "Estilo para operadores novos ou de exclusão do C++.",
	"c_cpp.semanticTokenTypes.customLiteral.description": "Estilo para literais definidos pelo usuário em C ++.",
	"c_cpp.semanticTokenTypes.numberLiteral.description": "Estilo para números literais definidos pelo usuário em C++.",
	"c_cpp.semanticTokenTypes.stringLiteral.description": "Estilo para cadeias de caracteres literais definidas pelo usuário em C++.",
	"c_cpp.semanticTokenModifiers.global.description": "Estilo a ser usado para símbolos que são globais.",
	"c_cpp.semanticTokenModifiers.local.description": "Estilo a ser usado para símbolos locais."
}