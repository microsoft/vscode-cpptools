/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"walkthrough.linux.title.run.and.debug.your.file": "Linux에서 C++ 파일 실행 및 디버그",
	"walkthrough.linux.run.and.debug.your.file": "VS Code에서 C++ 파일을 실행하고 디버그하려면:",
	"walkthrough.linux.instructions1": "실행하고 디버그할 C++ 원본 파일을 엽니다. 이 파일이 편집기에서 활성화되어 있는지(현재 표시되고 선택되어 있는지) 확인하세요.",
	"walkthrough.linux.press.f5": "{0}을(를) 누릅니다. 또는 기본 메뉴에서 {1}을(를) 선택합니다.",
	"walkthrough.linux.run": "실행",
	"walkthrough.linux.start.debugging": "디버깅 시작",
	"walkthrough.linux.select.compiler": "{0}을(를) 선택합니다.",
	"walkthrough.linux.choose.build.active.file": "{0}을(를) 선택합니다.",
	"walkthrough.linux.build.and.debug.active.file": "활성 파일 빌드 및 디버그",
	"walkthrough.linux.after.running": "처음으로 C++ 파일을 실행하고 디버깅한 후 프로젝트의 {0} 폴더 안에 {1} 및 {2}(이)라는 두 개의 새 파일이 있음을 알 수 있습니다.",
	"walkthrough.linux.for.more.complex": "더 복잡한 빌드 및 디버그 시나리오의 경우 {0} 및 {1}에서 빌드 작업 및 디버그 구성을 사용자 지정할 수 있습니다. 예를 들어 명령줄에서 빌드할 때 일반적으로 컴파일러에 인수를 전달하는 경우 {3} 속성을 사용하여 {2}에서 해당 인수를 지정할 수 있습니다. 마찬가지로 {4}에서 디버깅을 위해 프로그램에 전달할 인수를 정의할 수 있습니다."
}