/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"c_cpp.capabilities.untrustedWorkspaces.description": "여러 설정으로 인해 작업 공간에 로컬인 프로세스가 실행될 수 있습니다(예: C_Cpp.clang_format_path, C_Cpp.addNodeAddonIncludePaths, C_Cpp.default.compilerPath, C_Cpp.default.configurationProvider 및 C_Cpp.default.compileCommands 및 그와 동등한 c_cpp_properties.json의 속성).",
	"c_cpp.command.configurationSelect.title": "구성 선택...",
	"c_cpp.command.configurationProviderSelect.title": "구성 공급자 변경...",
	"c_cpp.command.configurationEditJSON.title": "구성 편집(JSON)",
	"c_cpp.command.configurationEditUI.title": "구성 편집(UI)",
	"c_cpp.command.switchHeaderSource.title": "헤더/소스 전환",
	"c_cpp.command.enableErrorSquiggles.title": "오류 표시선 사용",
	"c_cpp.command.disableErrorSquiggles.title": "오류 표시선 사용 안 함",
	"c_cpp.command.toggleIncludeFallback.title": "포함 오류 발생 시 IntelliSense 엔진 대체 설정/해제",
	"c_cpp.command.toggleDimInactiveRegions.title": "비활성 영역 색 지정 설정/해제",
	"c_cpp.command.resetDatabase.title": "IntelliSense 데이터베이스 다시 설정",
	"c_cpp.command.takeSurvey.title": "설문 조사 참여",
	"c_cpp.command.buildAndDebugActiveFile.title": "활성 파일 빌드 및 디버그",
	"c_cpp.command.logDiagnostics.title": "진단 정보 로그",
	"c_cpp.command.referencesViewGroupByType.title": "참조 형식으로 그룹화",
	"c_cpp.command.referencesViewUngroupByType.title": "참조 형식으로 그룹화 해제",
	"c_cpp.command.rescanWorkspace.title": "작업 영역 다시 검사",
	"c_cpp.command.vcpkgClipboardInstallSuggested.title": "vcpkg install 명령을 클립보드에 복사",
	"c_cpp.command.vcpkgOnlineHelpSuggested.title": "vcpkg 도움말 페이지 방문",
	"c_cpp.command.generateEditorConfig.title": "VC 형식 설정에서 EditorConfig 콘텐츠 생성",
	"c_cpp.command.GoToNextDirectiveInGroup.title": "조건부 그룹의 다음 전처리기 지시문으로 이동",
	"c_cpp.command.GoToPrevDirectiveInGroup.title": "조건부 그룹의 이전 전처리기 지시문으로 이동",
	"c_cpp.configuration.formatting.description": "서식 엔진을 구성합니다.",
	"c_cpp.configuration.formatting.clangFormat.description": "코드 서식을 지정하는 데 clang-format이 사용됩니다.",
	"c_cpp.configuration.formatting.vcFormat.description": "코드 서식을 지정하는 데 Visual C++ 서식 엔진이 사용됩니다.",
	"c_cpp.configuration.formatting.Default.description": "기본적으로 clang 형식이 코드 형식에 사용되지만 관련 설정을 가진 .editorconfig 파일이 포맷 중인 코드에 가까이 있고 clang_format_style이 기본값인 'file'인 경우 Visual C++ 형식 지정 엔진이 사용됩니다.",
	"c_cpp.configuration.formatting.Disabled.description": "코드 서식을 사용하지 않도록 설정됩니다.",
	"c_cpp.configuration.vcFormat.indent.braces.description": "편집기: 탭 크기 설정에 지정된 수만큼 중괄호를 들여씁니다.",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.description": "새 줄 들여쓰기의 기준을 결정합니다.",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.outermostParenthesis.description": "가장 바깥쪽의 여는 괄호를 기준으로 새 줄을 들여씁니다.",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.innermostParenthesis.description": "가장 안쪽의 여는 괄호를 기준으로 새 줄을 들여씁니다.",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.statementBegin.description": "현재 문의 시작 부분을 기준으로 새 줄을 들여씁니다.",
	"c_cpp.configuration.vcFormat.indent.withinParentheses.description": "새 줄을 입력하면 여는 괄호 아래에 맞추거나 'C_Cpp.vcFormat.indent.multiLineRelativeTo'를 기준으로 맞춥니다.",
	"c_cpp.configuration.vcFormat.indent.withinParentheses.alignToParenthesis.description": "새 줄을 여는 괄호 아래에 맞춥니다.",
	"c_cpp.configuration.vcFormat.indent.withinParentheses.indent.description": "새 줄을 “C_Cpp.vcFormat.indent.multiLineRelativeTo”를 기준으로 들여씁니다.",
	"c_cpp.configuration.vcFormat.indent.preserveWithinParentheses.description": "기존 코드에서는 괄호 안에서 기존의 새 줄 들여쓰기 맞춤을 유지합니다.",
	"c_cpp.configuration.vcFormat.indent.caseLabels.description": "switch 문을 기준으로 편집기: 탭 크기 설정에 지정된 수만큼 레이블을 들여씁니다.",
	"c_cpp.configuration.vcFormat.indent.caseContents.description": "레이블을 기준으로 편집기: 탭 크기 설정에 지정된 수만큼 case 블록 내 코드를 들여씁니다.",
	"c_cpp.configuration.vcFormat.indent.caseContentsWhenBlock.description": "편집기: 탭 크기 설정에 지정된 수만큼 case 문 다음에 중괄호를 들여 씁니다.",
	"c_cpp.configuration.vcFormat.indent.lambdaBracesWhenParameter.description": "문의 시작 부분을 기준으로 편집기: 탭 크기 설정에 지정된 수만큼 함수 매개 변수로 사용되는 람다의 중괄호를 들여 씁니다.",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.description": "goto 레이블의 위치",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.oneLeft.description": "편집기: 탭 크기 설정에 지정된 수만큼 현재 코드 들여쓰기의 왼쪽으로 goto 레이블을 배치합니다.",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.leftmostColumn.description": "코드의 맨 왼쪽 가장자리에 goto 레이블을 배치합니다.",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.none.description": "goto 레이블에 서식이 지정되지 않습니다.",
	"c_cpp.configuration.vcFormat.indent.preprocessor.description": "전처리기 지시문의 위치",
	"c_cpp.configuration.vcFormat.indent.preprocessor.oneLeft.description": "편집기: 탭 크기 설정에 지정된 수만큼 현재 코드 들여쓰기의 왼쪽으로 전처리기 지시문을 배치합니다.",
	"c_cpp.configuration.vcFormat.indent.preprocessor.leftmostColumn.description": "전처리기 지시문을 코드의 맨 왼쪽 가장자리에 배치합니다.",
	"c_cpp.configuration.vcFormat.indent.preprocessor.none.description": "전처리기 지시문에 서식이 지정되지 않습니다.",
	"c_cpp.configuration.vcFormat.indent.accessSpecifiers.description": "클래스 또는 구조체 정의를 기준으로 편집기: 탭 크기 설정에 지정된 수만큼 액세스 지정자를 들여 씁니다.",
	"c_cpp.configuration.vcFormat.indent.namespaceContents.description": "바깥쪽 네임스페이스를 기준으로 편집기: 탭 크기 설정에 지정된 수만큼 코드를 들여 씁니다.",
	"c_cpp.configuration.vcFormat.indent.preserveComments.description": "주석의 들여쓰기는 서식 작업을 수행하는 동안 변경되지 않습니다.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.namespace.description": "네임스페이스의 여는 중괄호 위치",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.type.description": "형식 정의의 여는 중괄호 위치",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.lambda.description": "람다 함수의 여는 중괄호 위치",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.function.description": "함수의 여는 중괄호 위치",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.block.description": "제어 블록의 여는 중괄호 위치",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.newLine.description": "여는 중괄호를 새 줄로 이동합니다.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.sameLine.description": "여는 중괄호가 같은 줄에 유지되고 각 여는 중괄호 앞에 공백이 추가됩니다.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.ignore.description": "여는 중괄호에 서식이 지정되지 않습니다.",
	"c_cpp.configuration.vcFormat.newLine.scopeBracesOnSeparateLines.description": "범위의 여는 중괄호와 닫는 중괄호를 별도의 줄에 배치합니다.",
	"c_cpp.configuration.vcFormat.newLine.closeBraceSameLine.emptyType.description": "빈 형식의 경우 닫는 중괄호를 여는 중괄호와 같은 줄로 이동합니다.",
	"c_cpp.configuration.vcFormat.newLine.closeBraceSameLine.emptyFunction.description": "빈 함수 본문의 경우 닫는 중괄호를 여는 중괄호와 같은 줄로 이동합니다.",
	"c_cpp.configuration.vcFormat.newLine.beforeCatch.description": "'catch' 및 유사한 키워드를 새 줄에 배치합니다.",
	"c_cpp.configuration.vcFormat.newLine.beforeElse.description": "'else'를 새 줄에 배치합니다.",
	"c_cpp.configuration.vcFormat.newLine.beforeWhileInDoWhile.description": "do-while 루프의 'while'을 새 줄에 배치합니다.",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.description": "함수 이름과 인수 목록의 여는 괄호 사이의 간격",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.insert.description": "함수의 여는 괄호 앞에 공백을 추가합니다.",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.remove.description": "함수의 여는 괄호 앞의 공백이 제거되었습니다.",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.ignore.description": "공백을 입력한 대로 둡니다.",
	"c_cpp.configuration.vcFormat.space.withinParameterListParentheses.description": "함수 매개 변수 목록의 여는 괄호 뒤와 닫는 괄호 앞에 공백이 추가됩니다.",
	"c_cpp.configuration.vcFormat.space.betweenEmptyParameterListParentheses.description": "함수 매개 변수 목록이 비어 있는 경우 해당 괄호 사이에 공백이 삽입됩니다.",
	"c_cpp.configuration.vcFormat.space.afterKeywordsInControlFlowStatements.description": "제어 흐름 문의 키워드와 여는 괄호 사이에 공백이 추가됩니다.",
	"c_cpp.configuration.vcFormat.space.withinControlFlowStatementParentheses.description": "제어 흐름 문의 여는 괄호 뒤와 닫는 괄호 앞에 공백이 추가됩니다.",
	"c_cpp.configuration.vcFormat.space.beforeLambdaOpenParenthesis.description": "람다 인수 목록의 여는 괄호 앞에 공백이 추가됩니다.",
	"c_cpp.configuration.vcFormat.space.withinCastParentheses.description": "C 스타일 캐스트의 여는 괄호 뒤와 닫는 괄호 앞에 공백이 추가됩니다.",
	"c_cpp.configuration.vcFormat.space.afterCastCloseParenthesis.description": "C 스타일 캐스트의 닫는 괄호 뒤에 공백이 추가됩니다.",
	"c_cpp.configuration.vcFormat.space.withinExpressionParentheses.description": "괄호로 묶인 식의 여는 괄호 뒤와 닫는 괄호 앞에 공백이 추가됩니다.",
	"c_cpp.configuration.vcFormat.space.beforeBlockOpenBrace.description": "범위 블록의 여는 중괄호 앞에 공백이 추가됩니다.",
	"c_cpp.configuration.vcFormat.space.betweenEmptyBraces.description": "중괄호가 같은 줄에서 비어 있는 경우 중괄호 사이에 공백이 삽입됩니다.",
	"c_cpp.configuration.vcFormat.space.beforeInitializerListOpenBrace.description": "균일 초기화 및 이니셜라이저 목록의 여는 중괄호 앞에 공백이 추가됩니다.",
	"c_cpp.configuration.vcFormat.space.withinInitializerListBraces.description": "균일 초기화 및 이니셜라이저 목록의 여는 중괄호 뒤와 닫는 중괄호 앞에 공백이 추가됩니다.",
	"c_cpp.configuration.vcFormat.space.preserveInInitializerList.description": "균일 초기화 및 이니셜라이저 목록 내에서 쉼표 주위의 공백이 유지됩니다.",
	"c_cpp.configuration.vcFormat.space.beforeOpenSquareBracket.description": "여는 대괄호 앞에 공백을 추가합니다.",
	"c_cpp.configuration.vcFormat.space.withinSquareBrackets.description": "여는 대괄호 뒤와 닫는 대괄호 앞에 공백을 추가합니다.",
	"c_cpp.configuration.vcFormat.space.beforeEmptySquareBrackets.description": "대괄호가 비어 있는 경우 여는 대괄호 앞에 공백을 추가합니다.",
	"c_cpp.configuration.vcFormat.space.betweenEmptySquareBrackets.description": "대괄호가 비어 있으면 대괄호 사이에 공백을 삽입합니다.",
	"c_cpp.configuration.vcFormat.space.groupSquareBrackets.description": "다차원 배열의 경우 대괄호 사이의 공백을 모두 제거합니다. 공백을 제어하는 기타 설정은 무시됩니다.",
	"c_cpp.configuration.vcFormat.space.withinLambdaBrackets.description": "여는 대괄호 뒤와 닫는 대괄호 앞에 공백을 추가합니다.",
	"c_cpp.configuration.vcFormat.space.betweenEmptyLambdaBrackets.description": "대괄호가 비어 있으면 대괄호 사이에 공백을 삽입합니다.",
	"c_cpp.configuration.vcFormat.space.beforeComma.description": "모든 쉽표 앞에 공백을 추가합니다.",
	"c_cpp.configuration.vcFormat.space.afterComma.description": "모든 쉽표 뒤에 공백을 추가합니다.",
	"c_cpp.configuration.vcFormat.space.removeAroundMemberOperators.description": "멤버 액세스 연산자, 멤버 포인터 연산자 및 범위 확인 연산자 주위의 공백이 제거됩니다.",
	"c_cpp.configuration.vcFormat.space.beforeInheritanceColon.description": "클래스 정의에서 상속된 형식의 콜론 앞에 공백이 추가됩니다.",
	"c_cpp.configuration.vcFormat.space.beforeConstructorColon.description": "생성자 정의에서 콜론 앞에 공백이 추가됩니다.",
	"c_cpp.configuration.vcFormat.space.removeBeforeSemicolon.description": "모든 세미콜론 앞의 공백을 제거합니다.",
	"c_cpp.configuration.vcFormat.space.insertAfterSemicolon.description": "모든 세미콜론 뒤에 공백이 삽입됩니다.",
	"c_cpp.configuration.vcFormat.space.removeAroundUnaryOperator.description": "단항 연산자와 피연산자 사이의 공백을 제거합니다.",
	"c_cpp.configuration.vcFormat.space.aroundBinaryOperator.description": "이항 연산자 주위의 공백",
	"c_cpp.configuration.vcFormat.space.aroundAssignmentOperator.description": "할당 연산자 주위의 공백",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.description": "포인터 및 참조 연산자 주위의 공백",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.left.description": "포인터 및 참조 연산자를 왼쪽에 맞춥니다.",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.center.description": "포인터 및 참조 연산자를 가운데에 맞춥니다.",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.right.description": "포인터 및 참조 연산자를 오른쪽에 맞춥니다.",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.ignore.description": "포인터 및 참조 연산자에 서식이 지정되지 않습니다.",
	"c_cpp.configuration.vcFormat.space.aroundTernaryOperator.description": "조건 연산자 주위의 공백",
	"c_cpp.configuration.vcFormat.space.aroundOperators.insert.description": "연산자 앞뒤에 공백을 추가합니다.",
	"c_cpp.configuration.vcFormat.space.aroundOperators.remove.description": "연산자 앞뒤의 공백을 제거합니다.",
	"c_cpp.configuration.vcFormat.space.aroundOperators.ignore.description": "공백을 입력한 대로 둡니다.",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.description": "블록에 대한 래핑 옵션",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.oneLiners.description": "VC 형식: 줄 바꿈 설정의 값과 관계없이 한 줄에 입력된 전체 코드 블록이 한 줄에 유지됩니다.",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.allOneLineScopes.description": "VC 형식: 줄 바꿈 설정의 값과 관계없이 여는 중괄호와 닫는 중괄호가 한 줄에 입력된 코드가 한 줄에 유지됩니다.",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.never.description": "항상 VC 형식: 줄 바꿈 설정의 값에 따라 코드 블록에 서식이 지정됩니다.",
	"c_cpp.configuration.clang_format_path.description": "clang-format 실행 파일의 전체 경로입니다. 지정하지 않은 경우 clang-format을 환경 경로에서 사용할 수 있으면 해당 실행 파일이 사용됩니다. 환경 경로에 clang-format이 없는 경우에는 확장과 함께 제공된 clang-format의 복사본이 사용됩니다.",
	"c_cpp.configuration.clang_format_style.description": "코딩 스타일은 현재 Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit을 지원합니다. \"file\"을 사용하여 현재 또는 부모 디렉터리의 .clang-format 파일에서 스타일을 로드합니다. {key: value, ...}을 사용하여 특정 매개 변수를 설정합니다. 예를 들어 \"Visual Studio\" 스타일은 { BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }와 유사합니다.",
	"c_cpp.configuration.clang_format_fallbackStyle.description": "clang-format이 \"file\" 스타일을 사용하여 호출되지만 .clang-format 파일을 찾을 수 없는 경우 대체로 사용되는 미리 정의된 스타일의 이름입니다. 가능한 값은 Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit, 없음이거나 {key: value, ...}을 사용하여 특정 매개 변수를 설정합니다. 예를 들어 \"Visual Studio\" 스타일은 { BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }와 유사합니다.",
	"c_cpp.configuration.clang_format_sortIncludes.description": "설정되는 경우 SortIncludes 매개 변수로 결정된 포함 정렬 동작을 재정의합니다.",
	"c_cpp.configuration.intelliSenseEngine.description": "IntelliSense 공급자를 제어합니다. \"태그 파서\"는 컨텍스트가 인식되지 않는 \"유사\" 결과를 제공합니다. \"Default\"는 컨텍스트가 인식된 결과를 제공합니다. \"Disabled\"는 C/C++ 언어 서비스 기능을 끕니다.",
	"c_cpp.configuration.intelliSenseEngineFallback.description": "IntelliSense 엔진이 #include 오류를 포함하는 변환 단위에 대해 태그 파서로 자동으로 전환되는지 여부를 제어합니다.",
	"c_cpp.configuration.autocomplete.description": "자동 완성 공급자를 제어합니다. \"Default\"는 활성 IntelliSense 엔진을 사용합니다. \"Disabled\"는 Visual Studio Code에서 제공하는 단어 기반 완성을 사용합니다.",
	"c_cpp.configuration.errorSquiggles.description": "IntelliSense 엔진이 검색한 의심스러운 컴파일 오류가 다시 편집기에 보고되는지 여부를 제어합니다. 이 설정은 태그 파서 엔진에서 무시됩니다.",
	"c_cpp.configuration.dimInactiveRegions.description": "비활성 전처리기 블록의 색이 활성 코드와 다르게 지정되는지 여부를 제어합니다. 이 설정은 기본 고대비 테마를 사용하거나 IntelliSense가 사용하지 않도록 설정된 경우에는 영향을 주지 않습니다.",
	"c_cpp.configuration.inactiveRegionOpacity.description": "비활성 전처리기 블록의 불투명도를 제어합니다. 0.1~1.0 사이에서 크기를 조정합니다. 이 설정은 비활성 영역 흐리게 표시가 사용하도록 설정된 경우에만 적용됩니다.",
	"c_cpp.configuration.inactiveRegionForegroundColor.description": "비활성 전처리기 블록의 글꼴 색 지정을 제어합니다. 입력은 16진수 색 코드 또는 유효한 테마 색의 형식입니다. 설정하지 않으면 기본적으로 편집기의 구문 색 구성표로 설정됩니다. 이 설정은 비활성 영역 흐리게 표시가 사용하도록 설정된 경우에만 적용됩니다.",
	"c_cpp.configuration.inactiveRegionBackgroundColor.description": "비활성 전처리기 블록의 배경색 지정을 제어합니다. 입력은 16진수 색 코드 또는 유효한 테마 색의 형식입니다. 설정하지 않으면 기본적으로 투명으로 설정됩니다. 이 설정은 비활성 영역 흐리게 표시가 사용하도록 설정된 경우에만 적용됩니다.",
	"c_cpp.configuration.loggingLevel.description": "출력 패널에서 로깅의 세부 정보 표시 수준입니다. 가장 낮은 표시 수준에서 가장 높은 표시 수준의 순서는 None < Error < Warning < Information < Debug입니다.",
	"c_cpp.configuration.autoAddFileAssociations.description": "파일이 C/C++ 파일의 탐색 작업에 대한 대상인 경우 files.associations에 자동으로 추가되는지 여부를 제어합니다.",
	"c_cpp.configuration.workspaceParsingPriority.description": "비활성 작업 영역 파일의 구문 분석에서 100%의 CPU 사용률을 피하기 위해 일시 정지 모드를 사용하는지 여부를 제어합니다. highest/high/medium/low 값은 대략 100/75/50/25%의 CPU 사용률에 해당합니다.",
	"c_cpp.configuration.workspaceSymbols.description": "'작업 영역에서 기호로 이동'이 호출될 때 쿼리 결과에 포함할 기호입니다.",
	"c_cpp.configuration.exclusionPolicy.description": "\"browse.path\" 배열의 경로를 트래버스하는 동안 코드 탐색 데이터베이스에 추가할 파일을 결정할 때 \"files.exclude\" 설정을 사용할 시기를 확장에 지시합니다. \"checkFolders\"는 제외 필터가 폴더당 한 번만 평가된다는 것을 의미합니다(개별 파일은 확인되지 않음). \"checkFilesAndFolders\"는 제외된 필터가 발견된 각 파일 및 폴더를 기준으로 평가된다는 것을 의미합니다. \"files.exclude\" 설정에 폴더만 포함된 경우 \"checkFolders\"는 가장 좋은 선택이며 확장이 코드 탐색 데이터베이스를 초기화할 수 있는 속도를 높입니다.",
	"c_cpp.configuration.preferredPathSeparator.description": "#include 자동 완성 결과의 경로 구분 기호로 사용되는 문자입니다.",
	"c_cpp.configuration.simplifyStructuredComments.description": "true인 경우 가리키기 및 자동 완성 도구 설명에 구조적 주석의 특정 레이블만 표시됩니다. 그렇지 않으면 모든 주석이 표시됩니다.",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.string.description": "여러 줄 또는 한 줄 주석 블록을 시작하는 패턴입니다. 기본적으로 여러 줄 주석 블록의 계속 패턴은 '*'로 설정되고, 한 줄 주석 블록의 경우 이 문자열로 설정됩니다.",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.object.begin.description": "여러 줄 또는 한 줄 주석 블록을 시작하는 패턴입니다.",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.object.continue.description": "여러 줄 또는 한 줄 주석 블록 내부에서 <Enter> 키를 누를 때 다음 줄에 삽입할 텍스트입니다.",
	"c_cpp.configuration.commentContinuationPatterns.description": "여러 줄 또는 한 줄 주석 블록 내에서 <Enter> 키를 누를 때 사용할 편집기 동작을 정의합니다.",
	"c_cpp.configuration.configurationWarnings.description": "구성 공급자 확장이 소스 파일의 구성을 제공할 수 없는 경우 팝업 알림을 표시할지 여부를 결정합니다.",
	"c_cpp.configuration.intelliSenseCachePath.description": "IntelliSense에서 사용하는 캐시되고 미리 컴파일된 헤더의 폴더 경로를 정의합니다. 기본 캐시 경로는 Windows의 \"%LocalAppData%/Microsoft/vscode-cpptools\", Linux의 \"$XDG_CACHE_HOME/vscode-cpptools/\"(또는 XDG_CACHE_HOME이 정의되지 않은 경우 \"$HOME/.cache/vscode-cpptools/\"), Mac의 \"$HOME/Library/Caches/vscode-cpptools/\"입니다. 경로를 지정하지 않거나 지정한 경로가 잘못된 경우 기본 경로를 사용합니다.",
	"c_cpp.configuration.intelliSenseCacheSize.description": "캐시된 미리 컴파일된 헤더에 대한 작업 영역당 하드 드라이브 공간의 최대 크기(MB)입니다. 실제 사용량은 이 값을 기준으로 변동될 수 있습니다. 기본 크기는 5,120MB입니다. 크기가 0이면 미리 컴파일된 헤더 캐싱이 사용하지 않도록 설정됩니다.",
	"c_cpp.configuration.intelliSenseMemoryLimit.description": "IntelliSense 프로세스의 메모리 사용량 제한(MB)입니다. 기본 제한은 4,096MB이며 최대 제한은 16GB입니다. 확장은 IntelliSense 프로세스가 제한을 초과하면 해당 프로세스를 종료했다가 다시 시작합니다.",
	"c_cpp.configuration.intelliSenseUpdateDelay.description": "수정 후에 IntelliSense에서 업데이트를 시작하기 전까지의 지연 시간(밀리초)을 제어합니다.",
	"c_cpp.configuration.default.includePath.description": "c_cpp_properties.json에 \"includePath\"가 지정되지 않은 경우 구성에 사용할 값입니다. \"includePath\"가 지정된 경우 배열에 \"${default}\"를 추가하여 이 설정의 값을 삽입합니다.",
	"c_cpp.configuration.default.defines.description": "\"defines\"가 지정되지 않은 경우 구성에서 사용할 값 또는 \"${default}\"가 \"defines\"에 있는 경우 삽입할 값입니다.",
	"c_cpp.configuration.default.macFrameworkPath.description": "\"macFrameworkPath\"가 지정되지 않은 경우 구성에서 사용할 값 또는 \"${default}\"가 \"macFrameworkPath\"에 있는 경우 삽입할 값입니다.",
	"c_cpp.configuration.default.windowsSdkVersion.description": "Windows에서 사용할 Windows SDK 포함 경로의 버전입니다(예: '10.0.17134.0').",
	"c_cpp.configuration.default.compileCommands.description": "\"compileCommands\"가 지정되지 않거나 \"${default}\"로 설정된 경우 구성에서 사용할 값입니다.",
	"c_cpp.configuration.default.forcedInclude.description": "\"forcedInclude\"가 지정되지 않은 경우 구성에서 사용할 값 또는 \"${default}\"가 \"forcedInclude\"에 있는 경우 삽입할 값입니다.",
	"c_cpp.configuration.default.intelliSenseMode.description": "\"intelliSenseMode\"가 지정되지 않거나 \"${default}\"로 설정된 경우 구성에서 사용할 값입니다.",
	"c_cpp.configuration.default.compilerPath.description": "\"compilerPath\"가 지정되지 않거나 \"${default}\"로 설정된 경우 구성에서 사용할 값입니다.",
	"c_cpp.configuration.default.compilerArgs.description": "\"compilerArgs\"가 지정되지 않거나 \"${default}\"로 설정된 경우 구성에서 사용할 값입니다.",
	"c_cpp.configuration.default.cStandard.description": "\"cStandard\"가 지정되지 않거나 \"${default}\"로 설정된 경우 구성에서 사용할 값입니다.",
	"c_cpp.configuration.default.cppStandard.description": "\"cppStandard\"가 지정되지 않거나 \"${default}\"로 설정된 경우 구성에서 사용할 값입니다.",
	"c_cpp.configuration.default.configurationProvider.description": "\"configurationProvider\"가 지정되지 않거나 \"${default}\"로 설정된 경우 구성에서 사용할 값입니다.",
	"c_cpp.configuration.default.browse.path.description": "\"browse.path\"가 지정되지 않은 경우 구성에서 사용할 값 또는 \"${default}\"가 \"browse.path\"에 있는 경우 삽입할 값입니다.",
	"c_cpp.configuration.default.browse.databaseFilename.description": "\"browse.databaseFilename\"이 지정되지 않거나 \"${default}\"로 설정된 경우 구성에서 사용할 값입니다.",
	"c_cpp.configuration.default.browse.limitSymbolsToIncludedHeaders.description": "\"browse.limitSymbolsToIncludedHeaders\"가 지정되지 않거나 \"${default}\"로 설정된 경우 구성에서 사용할 값입니다.",
	"c_cpp.configuration.default.systemIncludePath.description": "시스템 포함 경로에 사용할 값입니다. 설정하는 경우 \"compilerPath\" 및 \"compileCommands\" 설정을 통해 얻은 시스템 포함 경로를 재정의합니다.",
	"c_cpp.configuration.default.enableConfigurationSquiggles.description": "확장이 c_cpp_properties.json에서 검색된 오류를 보고할지 여부를 제어합니다.",
	"c_cpp.configuration.default.customConfigurationVariables.description": "\"customConfigurationVariables\"가 설정되지 않은 경우 구성에서 사용할 값 또는 \"${default}\"가 \"customConfigurationVariables\"에 키로 존재하는 경우 삽입할 값입니다.",
	"c_cpp.configuration.updateChannel.description": "예정된 기능과 버그 수정을 포함하는 확장의 최신 참가자 빌드를 자동으로 다운로드하여 설치하려면 \"참가자\"로 설정합니다.",
	"c_cpp.configuration.experimentalFeatures.description": "\"실험적\" 기능을 사용할 수 있는지 여부를 제어합니다.",
	"c_cpp.configuration.suggestSnippets.description": "True이면 언어 서버에서 코드 조각을 제공합니다.",
	"c_cpp.configuration.enhancedColorization.description": "사용하도록 설정된 경우 IntelliSense를 기반으로 코드 색이 지정됩니다. intelliSenseEngine이 \"기본값\"으로 설정된 경우에만 이 설정이 적용됩니다.",
	"c_cpp.configuration.codeFolding.description": "사용하도록 설정하면 언어 서버에서 코드 접기 범위를 제공합니다.",
	"c_cpp.configuration.vcpkg.enabled.markdownDescription": "[vcpkg 종속성 관리자](https://aka.ms/vcpkg/)에 통합 서비스를 사용하도록 설정합니다.",
	"c_cpp.configuration.addNodeAddonIncludePaths.description": "nan 및 node-addon-api가 종속성일 때 해당 포함 경로를 추가합니다.",
	"c_cpp.configuration.renameRequiresIdentifier.description": "true이면 '기호 이름 바꾸기'에 유효한 C/C++ 식별자가 필요합니다.",
	"c_cpp.configuration.autocompleteAddParentheses.description": "true이면 자동 완성에서 \"editor.autoClosingBrackets\" 설정 값에 따라 함수 호출 뒤에 \"(\"를 자동으로 추가하며, 이 경우 \")\"도 추가될 수 있습니다.",
	"c_cpp.configuration.filesExclude.description": "폴더(및 \"C_Cpp.exclusionPolicy\"가 변경된 경우 파일)를 제외하기 위한 GLOB 패턴을 구성하세요. 이는 C/C++ 확장에 고유하며 \"files.exclude\"에 추가되지만 \"files.exclude\"와 달리 탐색기 보기에서 제거되지 않습니다. [여기](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options)에서 GLOB 패턴에 대해 자세히 알아보세요.",
	"c_cpp.configuration.filesExcludeBoolean.description": "파일 경로를 일치시킬 GLOB 패턴입니다. 패턴을 사용하거나 사용하지 않도록 설정하려면 true 또는 false로 설정하세요.",
	"c_cpp.configuration.filesExcludeWhen.description": "일치하는 파일의 형제에 대한 추가 검사입니다. $(basename)을 일치하는 파일 이름에 대한 변수로 사용하세요.",
	"c_cpp.configuration.debugger.useBacktickCommandSubstitution.description": "true인 경우 디버거 셸 명령 대체가 사용되지 않는 백틱(`)을 사용합니다.",
	"c_cpp.contributes.views.cppReferencesView.title": "C/C++: 기타 참조 결과",
	"c_cpp.contributes.viewsWelcome.contents": "launch.json에 대한 자세한 내용은 [C/C++ 디버깅 구성](https://code.visualstudio.com/docs/cpp/launch-json-reference)을 참조하세요.",
	"c_cpp.debuggers.pipeTransport.description": "있을 경우 VS Code와 MI 지원 디버거 백 엔드 실행 파일(예: gdb) 사이에 표준 입출력을 릴레이하는 파이프로 다른 실행 파일을 사용하여 원격 컴퓨터에 연결되도록 디버거를 지정합니다.",
	"c_cpp.debuggers.pipeTransport.default.pipeProgram": "파이프 프로그램 이름의 정규화된 경로 입력(예: '/usr/bin/ssh')",
	"c_cpp.debuggers.pipeTransport.default.debuggerPath": "대상 컴퓨터에서 디버거의 전체 경로(예: /usr/bin/gdb)입니다.",
	"c_cpp.debuggers.pipeTransport.debuggerPath.description": "대상 컴퓨터에서 디버거의 전체 경로(예: /usr/bin/gdb)입니다.",
	"c_cpp.debuggers.pipeTransport.pipeCwd.description": "파이프 프로그램의 작업 디렉터리에 대한 정규화된 경로입니다.",
	"c_cpp.debuggers.pipeTransport.pipeProgram.description": "실행할 정규화된 파이프 명령입니다.",
	"c_cpp.debuggers.pipeTransport.pipeArgs.description": "연결을 구성하기 위해 파이프 프로그램에 전달되는 명령줄 인수입니다.",
	"c_cpp.debuggers.pipeTransport.pipeEnv.description": "파이프 프로그램에 전달되는 환경 변수입니다.",
	"c_cpp.debuggers.pipeTransport.quoteArgs.description": "pipeProgram의 개별 인수가 문자(예: 공백 또는 탭)를 포함하는 경우 따옴표를 붙여야 하나요? 'false'인 경우 디버거 명령은 더 이상 자동으로 따옴표를 붙이지 않습니다. 기본값은 'true'입니다.",
	"c_cpp.debuggers.logging.description": "메시지 유형을 디버그 콘솔에 기록할지 여부를 결정하는 선택적 플래그입니다.",
	"c_cpp.debuggers.logging.exceptions.description": "예외 메시지를 디버그 콘솔에 기록할지 여부를 결정하는 선택적 플래그입니다. 기본값은 true입니다.",
	"c_cpp.debuggers.logging.moduleLoad.description": "모듈 로드 이벤트를 디버그 콘솔에 기록할지 여부를 결정하는 선택적 플래그입니다. 기본값은 true입니다.",
	"c_cpp.debuggers.logging.programOutput.description": "프로그램 출력을 디버그 콘솔에 기록할지 여부를 결정하는 선택적 플래그입니다. 기본값은 true입니다.",
	"c_cpp.debuggers.logging.engineLogging.description": "진단 디버그 엔진 메시지를 디버그 콘솔에 기록할지 여부를 결정하는 선택적 플래그입니다. 기본값은 false입니다.",
	"c_cpp.debuggers.logging.trace.description": "진단 어댑터 명령 추적을 디버그 콘솔에 기록할지 여부를 결정하는 선택적 플래그입니다. 기본값은 false입니다.",
	"c_cpp.debuggers.logging.traceResponse.description": "진단 어댑터 명령 및 응답 추적을 디버그 콘솔에 기록할지 여부를 결정하는 선택적 플래그입니다. 기본값은 false입니다.",
	"c_cpp.debuggers.cppvsdbg.logging.threadExit.description": "스레드 종료 메시지를 디버그 콘솔에 기록할지를 결정하는 선택적 플래그입니다. 기본값: false.",
	"c_cpp.debuggers.cppvsdbg.logging.processExit.description": "대상 프로세스 종료 메시지를 디버그 콘솔에 기록할지를 결정하는 선택적 플래그입니다. 기본값: true.",
	"c_cpp.debuggers.text.description": "실행할 디버거 명령입니다.",
	"c_cpp.debuggers.description.description": "명령에 대한 선택적 설명입니다.",
	"c_cpp.debuggers.ignoreFailures.description": "True이면 명령 실패가 무시됩니다. 기본값은 false입니다.",
	"c_cpp.debuggers.program.description": "프로그램 실행 파일의 전체 경로입니다.",
	"c_cpp.debuggers.args.description": "프로그램에 전달된 명령줄 인수입니다.",
	"c_cpp.debuggers.cppdbg.type.description": "엔진 유형입니다. \"cppdbg\"여야 합니다.",
	"c_cpp.debuggers.cppvsdbg.type.description": "엔진 유형입니다. \"cppvsdbg\"여야 합니다.",
	"c_cpp.debuggers.targetArchitecture.description": "디버기의 아키텍처입니다. 이 매개 변수를 설정하지 않는 경우 자동으로 검색됩니다. 허용되는 값은 x86, arm, arm64, mips, x64, amd64, x86_64입니다.",
	"c_cpp.debuggers.cwd.description": "대상의 작업 디렉터리입니다.",
	"c_cpp.debuggers.setupCommands.description": "기본 디버거를 설정하기 위해 실행할 하나 이상의 GDB/LLDB 명령입니다. 예: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].",
	"c_cpp.debuggers.customLaunchSetupCommands.description": "이 항목이 제공되는 경우 대상을 시작하는 데 사용되는 기본 명령은 다른 명령으로 바뀌게 됩니다. 예를 들어 대상 프로세스에 연결하려면 \"-target-attach\"를 사용할 수 있습니다. 빈 명령 목록은 시작 명령을 바꾸지 않으며, 이는 디버거의 시작 옵션이 명령줄 옵션으로 제공되는 경우 유용할 수 있습니다. 예: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].",
	"c_cpp.debuggers.launchCompleteCommand.description": "대상 프로세스가 실행되도록 디버거가 완전히 설정된 후 실행할 명령입니다. 허용되는 값은 \"exec-run\", \"exec-continue\", \"None\"입니다. 기본값은 \"exec-run\"입니다.",
	"c_cpp.debuggers.cppdbg.visualizerFile.description": "이 프로세스를 디버그할 때 사용할 .natvis 파일입니다. 이 옵션은 GDB 자동 서식 지정과 호환되지 않습니다. 이 설정을 사용하는 경우 \"showDisplayString\"을 참조하세요.",
	"c_cpp.debuggers.cppvsdbg.visualizerFile.description": "이 프로세스를 디버그할 때 사용할 .natvis 파일입니다.",
	"c_cpp.debuggers.showDisplayString.description": "visualizerFile을 지정하면 showDisplayString은 표시 문자열을 사용하도록 설정합니다. 이 옵션을 켜면 디버그하는 동안 성능이 저하될 수 있습니다.",
	"c_cpp.debuggers.environment.description": "프로그램의 환경에 추가할 환경 변수입니다. 예: [ { \"name\": \"config\", \"value\": \"Debug\" } ], not [ { \"config\": \"Debug\" } ].",
	"c_cpp.debuggers.envFile.description": "환경 변수 정의를 포함하는 파일의 절대 경로입니다. 이 파일에는 줄마다 등호로 구분된 키 값 쌍이 있습니다(예: 키=값).",
	"c_cpp.debuggers.additionalSOLibSearchPath.description": ".so 파일 검색에 사용할 디렉터리의 세미콜론으로 구분된 목록입니다(예: \"c:\\dir1;c:\\dir2\").",
	"c_cpp.debuggers.MIMode.description": "MIDebugEngine이 연결할 콘솔 디버거를 나타냅니다. 허용되는 값은 \"gdb\" \"lldb\"입니다.",
	"c_cpp.debuggers.miDebuggerPath.description": "MI 디버거(예: gdb)의 경로입니다. 지정되지 않은 디버거 확장은 먼저 경로에서 디버거를 검색합니다.",
	"c_cpp.debuggers.miDebuggerArgs.description": "MI 디버거(예: gdb)의 추가 인수입니다.",
	"c_cpp.debuggers.miDebuggerServerAddress.description": "연결할 MI 디버거 서버의 네트워크 주소입니다(예: localhost:1234).",
	"c_cpp.debuggers.stopAtEntry.description": "선택적 매개 변수입니다. True이면 디버거가 대상의 진입점에서 중지됩니다. processId가 전달되는 경우 영향을 주지 않습니다.",
	"c_cpp.debuggers.debugServerPath.description": "시작할 디버그 서버의 전체 경로입니다(선택 사항). 기본값은 null입니다. 이 옵션은 \"miDebugServerAddress\"와 함께 사용되거나 \"-target-select remote <server:port>\"를 실행하는 \"customSetupCommand\"와 자체 서버와 함께 사용됩니다.",
	"c_cpp.debuggers.debugServerArgs.description": "선택적 디버그 서버 인수입니다. 기본값은 null입니다.",
	"c_cpp.debuggers.serverStarted.description": "디버그 서버 출력에서 찾을 서버에서 시작한 패턴(선택 사항)입니다. 기본값은 null입니다.",
	"c_cpp.debuggers.filterStdout.description": "서버에서 시작한 패턴을 stdout 스트림에서 검색하고, stdout를 디버그 출력에 기록합니다. 기본값은 true입니다.",
	"c_cpp.debuggers.filterStderr.description": "서버에서 시작한 패턴을 stderr 스트림에서 검색하고, stderr을 디버그 출력에 기록합니다. 기본값은 false입니다.",
	"c_cpp.debuggers.serverLaunchTimeout.description": "debugServer가 시작될 때까지 디버거가 대기할 선택적 시간(밀리초)입니다. 기본값은 10000입니다.",
	"c_cpp.debuggers.coreDumpPath.description": "지정된 프로그램에 대한 코어 덤프 파일의 선택적 전체 경로입니다. 기본값은 null입니다.",
	"c_cpp.debuggers.cppdbg.externalConsole.description": "True이면 콘솔이 디버기에 대해 시작됩니다. False이면 Linux 및 Windows에서 통합 콘솔에 표시됩니다.",
	"c_cpp.debuggers.cppvsdbg.externalConsole.description": "['콘솔'에서 사용되지 않음] true이면 콘솔이 디버기에 대해 시작됩니다. false이면 콘솔이 시작되지 않습니다.",
	"c_cpp.debuggers.cppvsdbg.console.description": "디버그 대상을 시작할 위치입니다. 정의되지 않은 경우 기본값인 'internalConsole'로 설정됩니다.",
	"c_cpp.debuggers.cppvsdbg.console.internalConsole.description": "VS Code 디버그 콘솔에 출력합니다. 콘솔 입력 읽기(예: 'std::cin' 또는 'scanf')는 지원되지 않습니다.",
	"c_cpp.debuggers.cppvsdbg.console.integratedTerminal.description": "VS Code의 통합 터미널",
	"c_cpp.debuggers.cppvsdbg.console.externalTerminal.description": "콘솔 애플리케이션이 외부 터미널 창에서 시작됩니다. 이 창은 다시 시작 시나리오에서 재사용되며, 애플리케이션이 종료될 때 자동으로 사라지지 않습니다.",
	"c_cpp.debuggers.cppvsdbg.console.newExternalWindow.description": "콘솔 애플리케이션은 애플리케이션이 중지될 때 종료되는 해당 외부 콘솔 창에서 시작됩니다. 콘솔이 아닌 애플리케이션은 터미널 없이 실행되며, stdout/stderr이 무시됩니다.",
	"c_cpp.debuggers.avoidWindowsConsoleRedirection.description": "True이면 통합 터미널 지원에 필요한 디버기 콘솔 리디렉션을 사용하지 않도록 설정합니다.",
	"c_cpp.debuggers.sourceFileMap.description": "디버그 엔진에 전달되는 선택적 소스 파일 매핑입니다(예: '{\"/original/source/path\": \"/original/source/path\"}').",
	"c_cpp.debuggers.processId.anyOf.description": "디버거를 연결할 선택적 프로세스 ID입니다. \"${command:pickProcess}\"를 사용하여 연결할 로컬 실행 프로세스 목록을 가져옵니다. 일부 플랫폼에서는 프로세스에 연결하기 위해 관리자 권한이 필요합니다.",
	"c_cpp.debuggers.symbolSearchPath.description": "기호(pdb) 파일 검색에 사용할 디렉터리의 세미콜론으로 구분된 목록입니다(예: \"c:\\dir1;c:\\dir2\").",
	"c_cpp.debuggers.dumpPath.description": "지정된 프로그램에 대한 코어 덤프 파일의 선택적 전체 경로입니다(예: \"c:\\temp\\app.dmp\"). 기본값은 null입니다.",
	"c_cpp.debuggers.enableDebugHeap.description": "False이면 디버그 힙이 사용하지 않도록 설정된 상태로 프로세스가 시작됩니다. 이렇게 하면 환경 변수 '_NO_DEBUG_HEAP'이 '1'로 설정됩니다.",
	"c_cpp.debuggers.symbolLoadInfo.description": "기호 로드를 명시적으로 제어합니다.",
	"c_cpp.debuggers.symbolLoadInfo.loadAll.description": "true이면 모든 라이브러리의 기호가 로드됩니다. true가 아니면 solib 기호가 로드되지 않습니다. 기본값은 true입니다.",
	"c_cpp.debuggers.symbolLoadInfo.exceptionList.description": "세미콜론 ';'으로 구분된 파일 이름(와일드카드 허용) 목록이며, LoadAll의 동작을 수정합니다. LoadAll이 true이면 목록에 있는 이름과 일치하는 라이브러리의 기호를 로드하지 않습니다. true가 아니면 일치하는 라이브러리의 기호만 로드합니다. 예: \"foo.so;bar.so\"",
	"c_cpp.debuggers.requireExactSource.description": "현재 소스 코드가 PDB와 일치하도록 하는 선택적 플래그입니다.",
	"c_cpp.debuggers.stopAtConnect.description": "true이면 대상에 연결된 후 디버거가 중지됩니다. false이면 연결 후 디버거가 계속됩니다. 기본값은 false입니다.",
	"c_cpp.debuggers.hardwareBreakpoints.description": "원격 대상에 대한 하드웨어 중단점 동작을 명시적으로 제어합니다.",
	"c_cpp.debuggers.hardwareBreakpoints.require.description": "true이면 항상 하드웨어 중단점을 사용합니다. 기본값은 false입니다.",
	"c_cpp.debuggers.hardwareBreakpoints.limit.description": "사용할 수 있는 하드웨어 중단점 수에 대한 선택적 제한입니다. \"require\"가 true이고 \"limit\"가 0보다 큰 경우에만 적용됩니다. 기본값은 0입니다.",
	"c_cpp.taskDefinitions.name.description": "작업의 이름",
	"c_cpp.taskDefinitions.command.description": "컴파일을 수행하는 컴파일러 또는 스크립트의 경로",
	"c_cpp.taskDefinitions.args.description": "컴파일러 또는 컴파일 스크립트에 전달할 추가 인수",
	"c_cpp.taskDefinitions.options.description": "추가 명령 옵션",
	"c_cpp.taskDefinitions.options.cwd.description": "실행된 프로그램 또는 스크립트의 현재 작업 디렉터리입니다. 생략된 경우 Code의 현재 작업 영역 루트가 사용됩니다.",
	"c_cpp.taskDefinitions.detail.description": "작업의 추가 세부 정보",
	"c_cpp.debuggers.sourceFileMap.sourceFileMapEntry.description": "같은 소스 트리의 현재 및 컴파일 시간 경로입니다. EditorPath에 있는 파일은 중단점 일치를 위해 CompileTimePath 경로에 매핑되고 stacktrace 위치를 표시할 때 CompileTimePath에서 EditorPath로 매핑됩니다.",
	"c_cpp.debuggers.sourceFileMap.sourceFileMapEntry.editorPath.description": "편집기가 사용할 소스 트리의 경로입니다.",
	"c_cpp.debuggers.sourceFileMap.sourceFileMapEntry.useForBreakpoints.description": "이 항목이 스택 프레임 위치 매핑에만 사용되면 False입니다. 이 항목이 중단점 위치를 지정할 때도 사용되어야 하면 True입니다.",
	"c_cpp.debuggers.symbolOptions.description": "기호(.pdb 파일)를 찾아서 로드하는 방법을 제어하는 옵션입니다.",
	"c_cpp.debuggers.VSSymbolOptions.description": "디버그 어댑터에 기호를 찾고 로드하기 위한 구성을 제공합니다.",
	"c_cpp.debuggers.VSSymbolOptions.searchPaths.description": ".pdb 파일을 검색하는 기호 서버 URL(예: http​://MyExampleSymbolServer) 또는 디렉터리(예: /build/symbols)의 배열입니다. 이러한 디렉터리가 모듈 및 pdb가 원래 삭제된 경로 옆에 있는 기본 위치 외에 검색됩니다.",
	"c_cpp.debuggers.VSSymbolOptions.searchMicrosoftSymbolServer.description": "'true'인 경우 Microsoft 기호 서버(https​://msdl.microsoft.com​/download/symbols)가 기호 검색 경로에 추가됩니다. 지정하지 않으면 이 옵션의 기본값은 'false'입니다.",
	"c_cpp.debuggers.VSSymbolOptions.cachePath.description": "기호 서버에서 다운로드한 기호를 캐시해야 하는 디렉터리입니다. 지정되지 않은 경우 Windows에서 디버거는 기본적으로 %TEMP%\\SymbolCache로 설정됩니다.",
	"c_cpp.debuggers.VSSymbolOptions.moduleFilter.description": "디버거에서 기호(.pdb 파일)를 로드하려고 시도할 모듈(.dll 파일)을 제어하는 옵션을 제공합니다.",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.description": "디버그 어댑터에 기호를 로드하기 위한 구성을 제공합니다.",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.mode.description": "두 가지 기본 운영 모드 중 모듈 필터가 작동하는 모드를 제어합니다.",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.mode.loadAllButExcluded.enumDescriptions": "모듈이 'excludedModules' 배열에 있지 않으면 모든 모듈에 대한 기호를 로드합니다.",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.mode.loadOnlyIncluded.enumDescriptions": "'includedModules' 배열에 있거나 'includeSymbolsNextToModules' 설정을 통해 포함되는 경우가 아니면 모듈에 대한 기호를 로드하지 않도록 합니다.",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.excludedModules.description": "디버거에서 기호를 로드하지 않아야 하는 모듈의 배열입니다. 와일드카드(예: MyCompany.*.dll)가 지원됩니다.\n\n'모드'가 'loadAllButExcluded'로 설정되어 있지 않으면 이 속성은 무시됩니다.",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.includedModules.description": "디버거에서 기호를 로드해야 하는 모듈의 배열입니다. 와일드카드(예: MyCompany.*.dll)가 지원됩니다.\n\n'모드'가 'loadOnlyIncluded'로 설정되어 있지 않으면 이 속성은 무시됩니다.",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.includeSymbolsNextToModules.description": "True 이면 'includedModules' 배열에 없는 모듈에 대해 디버거는 모듈 자체 및 시작 실행 파일 옆을 계속 확인하지만 기호 검색 목록의 경로는 확인하지 않습니다. 이 옵션의 기본값은 'true'입니다.\n\n'모드'가 'loadOnlyIncluded'로 설정되어 있지 않으면 이 속성은 무시됩니다."
}