/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.name": "Идентификатор конфигурации. `Mac`, `Linux` и `Win32` — это специальные идентификаторы для конфигураций, которые будут автоматически выбираться на этих платформах, но идентификатор может быть любым.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.compilerPath": "Полный путь к используемому компилятору, например `/usr/bin/gcc`, для повышения точности IntelliSense.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.compilerArgs": "Аргументы компилятора для изменения используемых включений или определений, например `-nostdinc++`, `-m32` и т. д.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.cStandard": "Версия стандарта языка C, используемая для IntelliSense. Примечание: стандарты GNU используются только для запроса определений GNU у установленного компилятора, а IntelliSense будет эмулировать эквивалентную версию стандарта C.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.cppStandard": "Версия стандарта языка C++, используемая для IntelliSense. Примечание: стандарты GNU используются только для запроса определений GNU у установленного компилятора, а IntelliSense будет эмулировать эквивалентную версию стандарта C++.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.compileCommands": "Полный путь к файлу `compile_commands.json` рабочей области.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.includePath": "Список путей для подсистемы IntelliSense, используемых при поиске включаемых файлов заголовков. Поиск по этим путям не является рекурсивным. Чтобы использовать рекурсивный поиск, укажите `**`. Например, если указать `${workspaceFolder}/**`, будет выполнен поиск по всем подкаталогам, а если указать `${workspaceFolder}` — не будет. Обычно системное содержимое не включается; вместо этого установите значение `C_Cpp.default.compilerPath`.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.macFrameworkPath": "Список путей для подсистемы IntelliSense, используемых при поиске включаемых файлов заголовков из платформ Mac. Поддерживается только в конфигурации для Mac.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.windowsSdkVersion": "Версия пути включения Windows SDK для использования в Windows, например `10.0.17134.0`.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.defines": "Список определений препроцессора для подсистемы IntelliSense, используемых при анализе файлов. При необходимости вы можете задать значение с помощью `=`, например: `VERSION=1`.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.intelliSenseMode": "Используемый режим IntelliSense, соответствующий определенному варианту платформы и архитектуры MSVC, gcc или Clang. Если значение не указано или указано значение `${default}`, расширение выберет вариант по умолчанию для этой платформы. Для Windows по умолчанию используется `windows-msvc-x64`, для Linux — `linux-gcc-x64`, а для macOS — `macos-clang-x64`. Режимы IntelliSense, в которых указаны только варианты `<компилятор>-<архитектура>` (например, `gcc-x64`), являются устаревшими и автоматически преобразуются в варианты `<платформа>-<компилятор>-<архитектура>` на основе платформы узла.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.forcedInclude": "Список файлов, которые должны быть включены перед любым файлом включений в единице трансляции.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.configurationProvider": "Идентификатор расширения VS Code, которое может предоставить данные конфигурации IntelliSense для исходных файлов.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.mergeConfigurations": "Установите значение `true` (истина), чтобы объединить пути включения, определения и принудительные включения с аналогичными элементами от поставщика конфигурации.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.browse.properties.limitSymbolsToIncludedHeaders": "При задании значения `true` будут обрабатываться только файлы, прямо или косвенно включенные как файлы заголовков, а при задании значения `false` — все файлы по указанным путям для включений.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.browse.properties.databaseFilename": "Путь к создаваемой базе данных символов. При указании относительного пути он будет отсчитываться от используемого в рабочей области места хранения по умолчанию.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.browse.properties.path": "Список путей, используемых для индексирования и анализа символов рабочей области (для использования командами 'Go to Definition' (Перейти к определению), 'Find All References' (Найти все ссылки) и т. д.). Поиск по этим путям по умолчанию является рекурсивным. Укажите `*`, чтобы использовать нерекурсивный поиск. Например, если указать `${workspaceFolder}`, будет выполнен поиск по всем подкаталогам, а если указать `${workspaceFolder}/*` — не будет.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.customConfigurationVariables": "Пользовательские переменные, которые можно запросить с помощью команды `${cpptools:activeConfigCustomVariable}`, чтобы использовать в качестве входных переменных в файле `launch.json` или `tasks.json`.",
	"c_cpp_properties.schema.json.definitions.env": "Пользовательские переменные, которые могут многократно применяться в любом месте этого файла с помощью синтаксиса `${переменная}` или `${env:переменная}`.",
	"c_cpp_properties.schema.json.definitions.version": "Версия файла конфигурации. Этим свойством управляет расширение. Не изменяйте его.",
	"c_cpp_properties.schema.json.definitions.enableConfigurationSquiggles": "Определяет, будет ли расширение сообщать об ошибках, обнаруженных в `c_cpp_properties.json`."
}