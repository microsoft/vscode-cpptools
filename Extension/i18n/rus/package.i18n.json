/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"c_cpp.subheaders.intelliSense.title": "IntelliSense",
	"c_cpp.subheaders.formatting.title": "Форматирование",
	"c_cpp.subheaders.codeDocumentation.title": "Документирование кода",
	"c_cpp.subheaders.codeAnalysis.title": "Анализ кода",
	"c_cpp.subheaders.debugging.title": "Отладка",
	"c_cpp.subheaders.resourceManagement.title": "Управление ресурсами",
	"c_cpp.subheaders.miscellaneous.title": "Прочее",
	"c_cpp.capabilities.untrustedWorkspaces.description": "Наличие нескольких параметров может привести к выполнению процессов, локальных для рабочей области, например C_Cpp.clang_format_path, C_Cpp.codeAnalysis.clangTidy.path, C_Cpp.addNodeAddonIncludePaths, C_Cpp.default.compilerPath, C_Cpp.default.configurationProvider и C_Cpp.default.compileCommands, а также эквивалентных свойств в c_cpp_properties.json.",
	"c_cpp.command.configurationSelect.title": "Выберите конфигурацию...",
	"c_cpp.command.configurationProviderSelect.title": "Изменение поставщика конфигурации...",
	"c_cpp.command.configurationEditJSON.title": "Изменить конфигурации (JSON)",
	"c_cpp.command.configurationEditUI.title": "Изменить конфигурации (пользовательский интерфейс)",
	"c_cpp.command.selectIntelliSenseConfiguration.title": "Выбрать конфигурацию IntelliSense…",
	"c_cpp.command.installCompiler.title": "Установка компилятора C++",
	"c_cpp.command.rescanCompilers.title": "Повторный поиск компиляторов",
	"c_cpp.command.switchHeaderSource.title": "Переключить заголовок/источник",
	"c_cpp.command.enableErrorSquiggles.title": "Включить волнистые линии для ошибок",
	"c_cpp.command.disableErrorSquiggles.title": "Отключить волнистые линии для ошибок",
	"c_cpp.command.toggleDimInactiveRegions.title": "Переключить раскраску неактивных областей",
	"c_cpp.command.resetDatabase.title": "Сброс базы данных IntelliSense",
	"c_cpp.command.takeSurvey.title": "Пройти опрос",
	"c_cpp.command.restartIntelliSenseForFile.title": "Перезапуск IntelliSense для активного файла",
	"c_cpp.command.logDiagnostics.title": "Журнал диагностики",
	"c_cpp.command.referencesViewGroupByType.title": "Группирование по ссылке",
	"c_cpp.command.referencesViewUngroupByType.title": "Отмена группирования по ссылке",
	"c_cpp.command.rescanWorkspace.title": "Повторное сканирование рабочей области",
	"c_cpp.command.vcpkgClipboardInstallSuggested.title": "Копировать команду vcpkg install в буфер обмена",
	"c_cpp.command.vcpkgOnlineHelpSuggested.title": "Посетите страницу справки по vcpkg",
	"c_cpp.command.generateEditorConfig.title": "Создание содержимого EditorConfig из параметров формата VC",
	"c_cpp.command.GoToNextDirectiveInGroup.title": "Перейти к следующей директиве препроцессора в условной группе",
	"c_cpp.command.GoToPrevDirectiveInGroup.title": "Перейти к предыдущей директиве препроцессора в условной группе",
	"c_cpp.command.CreateDeclarationOrDefinition.title": "Создать объявление или определение",
	"c_cpp.command.RunCodeAnalysisOnActiveFile.title": "Запустить анализ кода в активном файле",
	"c_cpp.command.RunCodeAnalysisOnOpenFiles.title": "Запустить анализ кода в открытых файлах",
	"c_cpp.command.RunCodeAnalysisOnAllFiles.title": "Запустить анализ кода во всех файлах",
	"c_cpp.command.RemoveAllCodeAnalysisProblems.title": "Очистка всех проблем анализа кода",
	"c_cpp.command.BuildAndDebugFile.title": "Выполнить отладку файла C/C++",
	"c_cpp.command.BuildAndRunFile.title": "Запустить файл C/C++",
	"c_cpp.command.AddDebugConfiguration.title": "Добавление конфигурации отладки",
	"c_cpp.command.GenerateDoxygenComment.title": "Создать комментарий Doxygen",
	"c_cpp.command.addSshTarget.title": "Добавить целевой объект SSH",
	"c_cpp.command.removeSshTarget.title": "Удалить целевой объект SSH",
	"c_cpp.command.setActiveSshTarget.title": "Выбор этого целевого объекта SSH в качестве активного целевого объекта",
	"c_cpp.command.selectActiveSshTarget.title": "Выберите активный целевой объект SSH",
	"c_cpp.command.selectSshTarget.title": "Выбор целевого объекта SSH",
	"c_cpp.command.activeSshTarget.title": "Получить активный целевой объект SSH",
	"c_cpp.command.refreshCppSshTargetsView.title": "Обновить",
	"c_cpp.command.sshTerminal.title": "Подключитесь к этому целевому объекту SSH в новом терминале",
	"c_cpp.configuration.maxConcurrentThreads.markdownDescription": "Максимальное число одновременных потоков, используемых для обработки задач языковой службы. Это значение является рекомендуемым и может использоваться не всегда. При заданном по умолчанию значении `null` (пусто) используется число доступных логических процессоров.",
	"c_cpp.configuration.maxCachedProcesses.markdownDescription": "Максимальное число кэшированных процессов, используемых для обработки задач языковой службы. При заданном по умолчанию значении `null` (пусто) используется число, вдвое большее количества доступных логических процессоров.",
	"c_cpp.configuration.maxMemory.markdownDescription": "Максимальный объем памяти (в МБ), доступный для обработки задач языковой службы. После превышения этого объема памяти будет кэшироваться и одновременно выполняться меньше процессов. При заданном по умолчанию значении `null` (пусто) используется свободная память системы.",
	"c_cpp.configuration.maxSymbolSearchResults.markdownDescription": "Максимальное число результатов, отображаемых для параметра \"Перейти к символу в рабочей области\". Значение по умолчанию — `5000`.",
	"c_cpp.configuration.intelliSense.maxCachedProcesses.markdownDescription": "Максимальное число работающих процессов IntelliSense. При заданном по умолчанию значении `null` (пусто) используется значение, унаследованное от `#C_Cpp.maxCachedProcesses#`.",
	"c_cpp.configuration.intelliSense.maxMemory.markdownDescription": "После превышения этого объема используемой памяти (в МБ) старые процессы IntelliSense завершат работу до создания новых процессов. При заданном по умолчанию значении `null` (пусто) используется значение, унаследованное от `#C_Cpp.maxMemory#`.",
	"c_cpp.configuration.references.maxConcurrentThreads.markdownDescription": "Максимальное число одновременных потоков, используемых при выполнении команд \"Найти все ссылки\" и \"Переименовать\". При заданном по умолчанию значении `null` (пусто) используется значение, унаследованное от `#C_Cpp.maxConcurrentThreads#`.",
	"c_cpp.configuration.references.maxCachedProcesses.markdownDescription": "Максимальное количество процессов, хранимых в памяти при выполнении команд \"Найти все ссылки\" и \"Переименовать\". Значение по умолчанию `0` отключает эту функцию. При заданном значении `null` (пусто) используется значение, унаследованное от `#C_Cpp.maxCachedProcesses#`.",
	"c_cpp.configuration.references.maxMemory.markdownDescription": "После превышения этого объема используемой памяти (в МБ) будет кэшироваться и одновременно запускаться меньше процессов \"Найти все ссылки\" и \"Переименовать\". При заданном по умолчанию значении `null` (пусто) используется значение, унаследованное от `#C_Cpp.maxMemory#`.",
	"c_cpp.configuration.codeAnalysis.maxConcurrentThreads.markdownDescription": "Максимальное число одновременных потоков, используемых при выполнении анализа кода. При заданном по умолчанию значении `null` (пусто) используется половина значения, унаследованного от `#C_Cpp.maxConcurrentThreads#`.",
	"c_cpp.configuration.codeAnalysis.maxMemory.markdownDescription": "После превышения этого объема используемой памяти (в МБ) одновременно будет запускаться меньше процессов анализа кода. При заданном по умолчанию значении `null` (пусто) используется значение, унаследованное от `#C_Cpp.maxMemory#`.",
	"c_cpp.configuration.codeAnalysis.updateDelay.markdownDescription": "Задает задержку в миллисекундах перед началом выполнения анализа кода после сигнала к сохранению изменяемого элемента, когда свойство `#files.autoSave#` имеет значение `afterDelay`, а свойство `#C_Cpp.codeAnalysis.runAutomatically#` — значение `true`.",
	"c_cpp.configuration.codeAnalysis.exclude.markdownDescription": "Настройка стандартных масок для исключения папок и файлов при анализе кода. Файлы, не входящие в папку рабочей области, всегда исключаются. Наследуются значения из `#files.exclude#` и `#C_Cpp.files.exclude#`. Дополнительные сведения о [шаблонах глобусов](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).",
	"c_cpp.configuration.codeAnalysis.excludeBoolean.markdownDescription": "Стандартная маска, соответствующая путям к файлам. Задайте значение `true` или `false`, чтобы включить или отключить маску.",
	"c_cpp.configuration.codeAnalysis.excludeWhen.markdownDescription": "Дополнительная проверка элементов того же уровня соответствующего файла. Используйте `$(basename)` в качестве переменной для соответствующего имени файла.",
	"c_cpp.configuration.codeAnalysis.runAutomatically.markdownDescription": "При значении `true` после открытия или сохранения файла анализ кода будет выполняться для него автоматически.",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showDisable.markdownDescription": "При значении `true` будет отображаться действие кода \"Отключить\", когда оно доступно (при следующем запуске анализа кода). Использование этого действия добавляет предупреждающий код для параметра `C_Cpp.codeAnalysis.clangTidy.checks.disabled`.",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showDocumentation.markdownDescription": "При значении `true` будет отображаться действие кода \"Показать документацию для\", когда оно доступно (при следующем запуске анализа кода).",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.description": "Определяет доступные действия кода \"Очистить\" для проблем анализа кода. Изменение параметра для отображения дополнительных вариантов может потребовать повтора анализа.",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.None.description": "Действия кода \"Очистить\" отображаться не будут.",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.AllOnly.description": "Отображение только действия кода \"Очистить все проблемы\", \"Очистить все проблемы типа <тип>\" (при единственном типе) или \"Очистить эту проблему\" (при единственной проблеме).",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.AllAndAllType.description": "Отображение действия кода \"Очистить все проблемы\" (при множестве типов проблем), \"Очистить все проблемы типа <тип>\" или \"Очистить эту проблему\" (при единственной проблеме определенного <типа>).",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.showClear.AllAndAllTypeAndThis.description": "Отображение действий кода \"Очистить все проблемы\" (при множестве типов проблем), \"Очистить все проблемы типа <тип>\" (при множестве проблем определенного <типа>) и \"Очистить эту проблему\".",
	"c_cpp.configuration.codeAnalysis.clangTidy.codeAction.formatFixes.markdownDescription": "Если установлено значение `true`, форматирование будет выполняться в строках, измененных действиями кода \"Исправить\".",
	"c_cpp.configuration.codeAnalysis.clangTidy.enabled.markdownDescription": "При значении `true` анализ кода с использованием `clang-tidy` будет включен и он будет запускаться после открытия или сохранения файла, если `#C_Cpp.codeAnalysis.runAutomatically#` имеет значение `true` (по умолчанию).",
	"c_cpp.configuration.codeAnalysis.clangTidy.path.markdownDescription": "Полный путь к исполняемому файлу `clang-tidy`. Если значение не указано, а `clang-tidy` доступен в переменной среды PATH, используется именно он. Если `clang-tidy` не найден в переменной среды PATH, будет использоваться, связанный с расширением.",
	"c_cpp.configuration.codeAnalysis.clangTidy.config.markdownDescription": "Задает конфигурацию `clang-tidy` в формате YAML/JSON: `{Checks: '-*,clang-analyzer-*', CheckOptions: [{ключ: x, значение: y}]}`. Если значение пусто, `clang-tidy` попытается найти файл с именем `.clang-tidy` для каждого исходного файла в его родительских каталогах.",
	"c_cpp.configuration.codeAnalysis.clangTidy.fallbackConfig.markdownDescription": "Задает конфигурацию `clang-tidy` в формате YAML/JSON, которая будет использоваться в качестве резервной, если не задана конфигурация `#C_Cpp.codeAnalysis.clangTidy.config#`, а файл `.clang-tidy` не найден: `{Checks: '-*,clang-analyzer-*', CheckOptions: [{ключ: x, значение: y}]}`.",
	"c_cpp.configuration.codeAnalysis.clangTidy.headerFilter.markdownDescription": "Расширенное регулярное выражение (ERE) POSIX, соответствующее именам заголовков для вывода диагностики. Диагностика основного файла каждой единицы трансляции отображается всегда. Поддерживается переменная `${workspaceFolder}` (и используется в качестве резервного значения по умолчанию, если файл `.clang-tidy` не существует). Если данный параметр не имеет значение `null` (пусто), он переопределяет параметр `HeaderFilterRegex` в файле `.clang-tidy` (если таковой существует).",
	"c_cpp.configuration.codeAnalysis.clangTidy.args.markdownDescription": "Дополнительные аргументы командной строки для передачи в `clang-tidy`. Они имеют приоритет над эквивалентными параметрами `C_Cpp.codeAnalysis.clangTidy.*`.",
	"c_cpp.configuration.codeAnalysis.clangTidy.useBuildPath.markdownDescription": "Если заданы аргументы `true` и `compileCommands`, аргумент `-p=<build-path>` передается в `clang-tidy` вместо аргументов сборки, переданных после `--`. Это может не работать, если переменные среды не заданы для того, чтобы можно было найти системные включения.",
	"c_cpp.configuration.codeAnalysis.clangTidy.checks.enabled.markdownDescription": "Список включенных проверок `clang-tidy`. Значения добавляется к элементу `Checks` в файле `.clang-tidy` или `#C_Cpp.codeAnalysis.clangTidy.config#`, если они есть. Проверка по умолчанию `clang-analyzer-*` используется всегда, если специально не отключена.",
	"c_cpp.configuration.codeAnalysis.clangTidy.checks.disabled.markdownDescription": "Список отключенных проверок`clang-tidy`. Значения добавляются к элементу `Checks` в файле `.clang-tidy` или `#C_Cpp.codeAnalysis.clangTidy.config#`, если они есть.",
	"c_cpp.configuration.formatting.description": "Настраивает подсистему форматирования.",
	"c_cpp.configuration.formatting.clangFormat.markdownDescription": "Для форматирования кода будет использоваться `clang-format`.",
	"c_cpp.configuration.formatting.vcFormat.markdownDescription": "Для форматирования кода будет использоваться подсистема форматирования Visual C++.",
	"c_cpp.configuration.formatting.Default.markdownDescription": "По умолчанию для форматирования кода будет использоваться `clang-format`. Однако если рядом с форматируемым файлом найден файл `.editorconfig` с соответствующими параметрами и параметр `#C_Cpp.clang_format_style#` имеет значение по умолчанию (`file`), будет использована подсистема форматирования Visual C++.",
	"c_cpp.configuration.formatting.Disabled.markdownDescription": "Форматирование кода будет отключено.",
	"c_cpp.configuration.vcFormat.indent.braces.markdownDescription": "Добавление отступа для фигурных скобок на величину, указанную параметром `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.description": "Определяет, относительно чего устанавливается отступ новой строки.",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.outermostParenthesis.description": "Отступ новой строки задается относительно крайней внешней открывающей круглой скобки.",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.innermostParenthesis.description": "Отступ новой строки задается относительно крайней внутренней открывающей круглой скобки.",
	"c_cpp.configuration.vcFormat.indent.multiLineRelativeTo.statementBegin.description": "Отступ новой строки задается относительно начала текущего оператора.",
	"c_cpp.configuration.vcFormat.indent.withinParentheses.markdownDescription": "При вводе новой строки она выравнивается по открывающей круглой скобке или на основе значения параметра `#C_Cpp.vcFormat.indent.multiLineRelativeTo#`.",
	"c_cpp.configuration.vcFormat.indent.withinParentheses.alignToParenthesis.markdownDescription": "Новая строка выравнивается по открывающей круглой скобке.",
	"c_cpp.configuration.vcFormat.indent.withinParentheses.indent.markdownDescription": "Новая строка выравнивается на основе параметра `#C_Cpp.vcFormat.indent.multiLineRelativeTo#`.",
	"c_cpp.configuration.vcFormat.indent.preserveWithinParentheses.description": "Существующие отступы для новых строк внутри круглых скобок в имеющемся коде сохраняются.",
	"c_cpp.configuration.vcFormat.indent.caseLabels.markdownDescription": "Метки располагаются относительно операторов switch с отступом, размер которого определяется параметром `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.caseContents.markdownDescription": "Код внутри блока `case` располагается относительно метки с отступом, размер которого определяется параметром `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.caseContentsWhenBlock.markdownDescription": "Отступ для скобок после оператора case, размер которого определяется параметром `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.lambdaBracesWhenParameter.markdownDescription": "Отступ для скобок лямбда-выражений, используемых в качестве параметров функции, относительно начала оператора, размер которого определяется параметром `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.description": "Положение меток goto.",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.oneLeft.markdownDescription": "Метки goto располагаются слева от текущего отступа кода на величину, указанную параметром `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.leftmostColumn.markdownDescription": "Метки goto располагаются в крайнем левом положении в коде.",
	"c_cpp.configuration.vcFormat.indent.gotoLabels.none.markdownDescription": "Метки goto форматироваться не будут.",
	"c_cpp.configuration.vcFormat.indent.preprocessor.description": "Положение директив препроцессора.",
	"c_cpp.configuration.vcFormat.indent.preprocessor.oneLeft.markdownDescription": "Директивы препроцессора располагаются слева от текущего отступа кода, размер которого определяется параметром `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.preprocessor.leftmostColumn.markdownDescription": "Директивы препроцессора располагаются в крайнем левом положении в коде.",
	"c_cpp.configuration.vcFormat.indent.preprocessor.none.markdownDescription": "Директивы препроцессора форматироваться не будут.",
	"c_cpp.configuration.vcFormat.indent.accessSpecifiers.markdownDescription": "Добавление отступа для описателей доступа относительно определений классов или структур на величину, указанную параметром `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.namespaceContents.markdownDescription": "Код располагается относительно вмещающего пространства имен с отступом, размер которого определяется параметром `#editor.tabSize#`.",
	"c_cpp.configuration.vcFormat.indent.preserveComments.description": "Отступ комментариев не был изменен во время операций форматирования.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.namespace.description": "Положение открывающих фигурных скобок для пространств имен.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.type.description": "Положение открывающих фигурных скобок для определений типов.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.lambda.description": "Положение открывающих фигурных скобок для лямбда-функций.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.function.description": "Положение открывающих фигурных скобок для функций.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.block.description": "Положение открывающих фигурных скобок для управляющих блоков.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.newLine.description": "Открывающие фигурные скобки перемещаются на новую строку.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.sameLine.description": "Открывающие фигурные скобки остаются на той же строке, и перед каждой добавляется пробел.",
	"c_cpp.configuration.vcFormat.newLine.beforeOpenBrace.ignore.description": "Открывающие фигурные скобки не форматируются.",
	"c_cpp.configuration.vcFormat.newLine.scopeBracesOnSeparateLines.description": "Открывающие и закрывающие фигурные скобки для областей размещаются на отдельных строках.",
	"c_cpp.configuration.vcFormat.newLine.closeBraceSameLine.emptyType.description": "Для пустых типов закрывающая фигурная скобка перемещается в ту же строку, где находится открывающая фигурная скобка.",
	"c_cpp.configuration.vcFormat.newLine.closeBraceSameLine.emptyFunction.description": "Для функций с пустым телом закрывающая фигурная скобка перемещается в ту же строку, где находится открывающая фигурная скобка.",
	"c_cpp.configuration.vcFormat.newLine.beforeCatch.markdownDescription": "Ключевое слово `catch` и аналогичные ключевые слова помещаются на новой строке.",
	"c_cpp.configuration.vcFormat.newLine.beforeElse.markdownDescription": "Ключевое слово `else` помещается на новой строке.",
	"c_cpp.configuration.vcFormat.newLine.beforeWhileInDoWhile.markdownDescription": "Ключевое слово `while` в цикле `do`-`while` помещается на новой строке.",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.description": "Пробелы между именами функций и открывающими скобками списков аргументов.",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.insert.description": "Перед открывающей круглой скобкой функции добавляется пробел.",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.remove.description": "Пробелы перед открывающей скобкой функции удалены.",
	"c_cpp.configuration.vcFormat.space.beforeFunctionOpenParenthesis.ignore.description": "Пробелы оставлены без изменений.",
	"c_cpp.configuration.vcFormat.space.withinParameterListParentheses.description": "После открывающей круглой скобки и перед закрывающей в списках параметров функций добавляется пробел.",
	"c_cpp.configuration.vcFormat.space.betweenEmptyParameterListParentheses.description": "Между круглыми скобками пустого списка параметров функции вставляется пробел.",
	"c_cpp.configuration.vcFormat.space.afterKeywordsInControlFlowStatements.description": "Между ключевым словом и открывающей круглой скобкой в операторах потока управления добавляется пробел.",
	"c_cpp.configuration.vcFormat.space.withinControlFlowStatementParentheses.description": "После открывающей круглой скобки и перед закрывающей в операторах потока управления добавляется пробел.",
	"c_cpp.configuration.vcFormat.space.beforeLambdaOpenParenthesis.description": "Перед открывающей круглой скобкой для списков аргументов лямбда-выражения добавляется пробел.",
	"c_cpp.configuration.vcFormat.space.withinCastParentheses.description": "После открывающей круглой скобки и перед закрывающей для приведения в стиле C добавляется пробел.",
	"c_cpp.configuration.vcFormat.space.afterCastCloseParenthesis.description": "После закрывающей круглой скобки приведения в стиле C добавляется пробел.",
	"c_cpp.configuration.vcFormat.space.withinExpressionParentheses.description": "После открывающей круглой скобки и перед закрывающей для выражения в скобках добавляется пробел.",
	"c_cpp.configuration.vcFormat.space.beforeBlockOpenBrace.description": "Перед открывающими фигурными скобками блоков областей добавляется пробел.",
	"c_cpp.configuration.vcFormat.space.betweenEmptyBraces.description": "Между пустыми фигурными скобками, находящимися на одной строке, вставляется пробел.",
	"c_cpp.configuration.vcFormat.space.beforeInitializerListOpenBrace.description": "Перед открывающей фигурной скобкой в равномерной инициализации и списках инициализаторов добавляется пробел.",
	"c_cpp.configuration.vcFormat.space.withinInitializerListBraces.description": "После открывающей фигурной скобки и перед закрывающей для равномерной инициализации и списков инициализаторов добавляется пробел.",
	"c_cpp.configuration.vcFormat.space.preserveInInitializerList.description": "Пробелы вокруг запятых сохраняются в равномерной инициализации и списках инициализаторов.",
	"c_cpp.configuration.vcFormat.space.beforeOpenSquareBracket.description": "Перед открывающей квадратной скобкой добавлен пробел.",
	"c_cpp.configuration.vcFormat.space.withinSquareBrackets.description": "После открывающей квадратной скобки и перед закрывающейся квадратной скобкой добавляется пробел.",
	"c_cpp.configuration.vcFormat.space.beforeEmptySquareBrackets.description": "Если квадратные скобки пусты, перед открывающей квадратной скобкой добавляется пробел.",
	"c_cpp.configuration.vcFormat.space.betweenEmptySquareBrackets.description": "Если квадратные скобки пусты, между ними вставляется пробел.",
	"c_cpp.configuration.vcFormat.space.groupSquareBrackets.description": "Для многомерных массивов будут удалены все пробелы между скобками. Другие параметры, связанные с пробелами, переопределяются.",
	"c_cpp.configuration.vcFormat.space.withinLambdaBrackets.description": "После открывающей квадратной скобки и перед закрывающейся квадратной скобкой добавляется пробел.",
	"c_cpp.configuration.vcFormat.space.betweenEmptyLambdaBrackets.description": "Если квадратные скобки пусты, между ними вставляется пробел.",
	"c_cpp.configuration.vcFormat.space.beforeComma.description": "Перед каждой запятой добавлен пробел.",
	"c_cpp.configuration.vcFormat.space.afterComma.description": "После каждой запятой добавлен пробел.",
	"c_cpp.configuration.vcFormat.space.removeAroundMemberOperators.description": "Пробелы слева и справа от операторов доступа к элементам, указателя на элемент и разрешения области удаляются.",
	"c_cpp.configuration.vcFormat.space.beforeInheritanceColon.description": "Перед двоеточием для наследуемых типов в определениях классов добавляется пробел.",
	"c_cpp.configuration.vcFormat.space.beforeConstructorColon.description": "Перед двоеточием в определениях конструктора добавляется пробел.",
	"c_cpp.configuration.vcFormat.space.removeBeforeSemicolon.description": "Перед каждой точкой с запятой были удалены пробелы.",
	"c_cpp.configuration.vcFormat.space.insertAfterSemicolon.description": "После точки с запятой добавляется пробел.",
	"c_cpp.configuration.vcFormat.space.removeAroundUnaryOperator.description": "Пробелы между унарными операторами и их операндами удаляются.",
	"c_cpp.configuration.vcFormat.space.aroundBinaryOperator.description": "Пробелы слева и справа от бинарных операторов.",
	"c_cpp.configuration.vcFormat.space.aroundAssignmentOperator.description": "Пробелы слева и справа от операторов присваивания.",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.description": "Пробелы слева и справа от операторов указателя и ссылки.",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.left.description": "Выравнивание операторов указателя и ссылки по левому краю.",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.center.description": "Выравнивание по центру для операторов указателя и ссылки.",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.right.description": "Выравнивание операторов указателя и ссылки по правому краю.",
	"c_cpp.configuration.vcFormat.space.pointerReferenceAlignment.ignore.description": "Операторы указателя и ссылки не форматируются.",
	"c_cpp.configuration.vcFormat.space.aroundTernaryOperator.description": "Пробелы слева и справа от условных операторов.",
	"c_cpp.configuration.vcFormat.space.aroundOperators.insert.description": "Перед оператором присваивания и после него добавлены пробелы.",
	"c_cpp.configuration.vcFormat.space.aroundOperators.remove.description": "Пробелы до и после оператора присваивания удалены.",
	"c_cpp.configuration.vcFormat.space.aroundOperators.ignore.description": "Пробелы оставлены без изменений.",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.description": "Параметры переноса по блокам.",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.oneLiners.markdownDescription": "Полный блок кода, введенный в одной строке, остается в ней вне зависимости от значений параметров `C_Cpp.vcFormat.newLine.*`.",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.allOneLineScopes.markdownDescription": "Любой код, в котором открывающая и закрывающая фигурные скобки введены в одной строке, остается в ней вне зависимости от значений параметров `C_Cpp.vcFormat.newLine.*`.",
	"c_cpp.configuration.vcFormat.wrap.preserveBlocks.never.markdownDescription": "Блоки кода всегда форматируются на основе значений параметров `C_Cpp.vcFormat.newLine.*`.",
	"c_cpp.configuration.clang_format_path.markdownDescription": "Полный путь к исполняемому файлу `clang-format`. Если значение не указано, а `clang-format` доступен в пути среды, используется. Если `clang-format` не найден в пути среды, будет использоваться  вместе с расширением.",
	"c_cpp.configuration.clang_format_style.markdownDescription": "Стиль кодирования сейчас поддерживает: `Visual Studio`, `LLVM`, `Google`, `Chromium`, `Mozilla`, `WebKit`, `Microsoft`, `GNU`. Используйте `file`, чтобы загрузить стиль из файла `.clang-format` в текущем или родительском каталоге, или используйте `file:<path>/.clang-format`, чтобы сослаться на определенный. Используйте `{ключ: значение, ...}`, чтобы установить определенные параметры. Например, стиль `Visual Studio` похож на: `{ BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }`.",
	"c_cpp.configuration.clang_format_fallbackStyle.markdownDescription": "Имя предварительно определенного стиля, используемое в качестве резервного варианта при вызове `clang-format` со стилем `file`, когда файл `.clang-format` не найден. Возможные значения: `Visual Studio`, `LLVM`, `Google`, `Chromium`, `Mozilla`, `WebKit`, `Microsoft`, `GNU`, `none`. Используйте синтаксис `{ключ: значение, ...}`, чтобы задать конкретные параметры. Например, стиль `Visual Studio` похож на следующий: `{ BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }`.",
	"c_cpp.configuration.clang_format_sortIncludes.markdownDescription": "Если параметр задан, он переопределяет поведение сортировки включения, определяемое параметром `SortIncludes`.",
	"c_cpp.configuration.intelliSenseEngine.description": "Управляет поставщиком IntelliSense.",
	"c_cpp.configuration.intelliSenseEngine.default.description": "Предоставляет результаты, зависящие от контекста, с помощью отдельного процесса IntelliSense.",
	"c_cpp.configuration.intelliSenseEngine.tagParser.description": "Предоставляет \"нечеткие\" результаты, не зависящие от контекста.",
	"c_cpp.configuration.intelliSenseEngine.disabled.description": "Отключает компоненты службы языка C/C++.",
	"c_cpp.configuration.autocomplete.markdownDescription": "Управляет поставщиком автозавершения. Если присвоено значение `disabled`, и вам требуется завершение по словам, также настройте `\"[cpp]\": {\"editor.wordBasedSuggestions\": <value>}` (и аналогично для языков `c` и `cuda-cpp`).",
	"c_cpp.configuration.autocomplete.default.description": "Использует активную подсистему IntelliSense.",
	"c_cpp.configuration.autocomplete.disabled.description": "Использует завершение на основе слов, предоставляемое Visual Studio Code.",
	"c_cpp.configuration.errorSquiggles.description": "Определяет, будут ли обнаруженные подсистемой IntelliSense предполагаемые ошибки компиляции возвращены в редактор. Также определяет, будут ли отображаться предупреждения на этапе анализа кода, если не удается найти включаемые данные. Этот параметр игнорируется подсистемой синтаксического анализа тегов.",
	"c_cpp.configuration.dimInactiveRegions.description": "Определяет, окрашены ли неактивные блоки препроцессора иначе, чем активный код. Этот параметр не работает, если функция IntelliSense отключена или используется тема с высокой контрастностью по умолчанию.",
	"c_cpp.configuration.inactiveRegionOpacity.markdownDescription": "Управляет непрозрачностью неактивных блоков препроцессора. Масштабируется в диапазоне от `0.1` до `1.0`. Этот параметр применяется только при включенном затенении неактивной области.",
	"c_cpp.configuration.inactiveRegionForegroundColor.description": "Управляет цветом шрифта для неактивных блоков препроцессора. Входные данные имеют форму шестнадцатеричного кода цвета или допустимого цвета темы. Если значение не задано, по умолчанию используется схема раскраски синтаксических конструкций из редактора. Этот параметр применяется только при включенном затенении неактивной области.",
	"c_cpp.configuration.inactiveRegionBackgroundColor.description": "Управляет цветом фона для неактивных блоков препроцессора. Входные данные имеют форму шестнадцатеричного кода цвета или допустимого цвета темы. Если значение не задано, по умолчанию используется прозрачное отображение. Этот параметр применяется только при включенном затенении неактивной области.",
	"c_cpp.configuration.inlayHints.autoDeclarationTypes.enabled.markdownDescription": "Отображать вложенные указания для выведенного типа, если в объявлении используется `auto`:\n```cpp \n\n auto index /* : int */ = 0;\n```",
	"c_cpp.configuration.inlayHints.autoDeclarationTypes.showOnLeft.markdownDescription": "Отображать вложенные указания для выведенного типа, если в объявлении слева от идентификатора используется `auto`:\n```cpp \n\n auto /* int */ index = 0;\n```",
	"c_cpp.configuration.inlayHints.parameterNames.enabled.markdownDescription": "Отображать вложенные подсказки для имен параметров:\n```cpp \n\n int a = getArea(/* width: */ x, /* height: */ y);\n```",
	"c_cpp.configuration.inlayHints.parameterNames.hideLeadingUnderscores.markdownDescription": "Скрыть ведущий `_` в указаниях имен параметров.",
	"c_cpp.configuration.inlayHints.parameterNames.suppressWhenArgumentContainsName.markdownDescription": "Скрывать подсказки имен параметров, если текст аргумента или встроенный комментарий содержит имя параметра:\n```cpp \n\n int a = getArea(width, /* height: */ y);\n```",
	"c_cpp.configuration.inlayHints.referenceOperator.enabled.markdownDescription": "Отображать оператор ссылки вложенной подсказки `&` для параметров, передаваемых неконстантной ссылкой:\n```cpp \n\n swap(/* &first: */ str1, /* &last: */ str2);\n```",
	"c_cpp.configuration.inlayHints.referenceOperator.showSpace.markdownDescription": "Определяет, отображается ли пробел после `&` для параметров, передаваемых неконстантной ссылкой:\n```cpp \n\n swap(/* & first: */ str1, /* & last: */ str2);\n```",
	"c_cpp.configuration.loggingLevel.markdownDescription": "Уровень детализации для журнала на панели вывода. Порядок уровней от наименее подробных к наиболее подробным: `None` < `Error` < `Warning` < `Information` < `Debug`.",
	"c_cpp.configuration.autoAddFileAssociations.markdownDescription": "Определяет, будут ли файлы автоматически добавляться в `#files.associations#`, если они являются целью операции навигации из файла C/C++.",
	"c_cpp.configuration.workspaceParsingPriority.markdownDescription": "Определяет, используется ли спящий режим при анализе неактивных файлов рабочей области, чтобы избежать 100-процентной загрузки ЦП. Значения `highest`/`high`/`medium`/`low` соответствуют приблизительно 100/75/50/25-процентной загрузке ЦП.",
	"c_cpp.configuration.workspaceSymbols.description": "Символы, включаемые в результаты запроса при вызове функции 'Перейти к символу в рабочей области'.",
	"c_cpp.configuration.exclusionPolicy.markdownDescription": "Предписывает расширению, когда использовать параметр `#files.exclude#` (и `#C_Cpp.files.exclude#`) при определении файлов, которые нужно добавить в базу данных навигации по коду при обходе путей в массиве `browse.path`. Если параметр `#files.exclude#` содержит только папки, то вариант `checkFolders` подходит лучше всего и увеличивает скорость, с которой расширение может инициализировать базу данных навигации по коду.",
	"c_cpp.configuration.exclusionPolicy.checkFolders.description": "Фильтры исключения будут вычисляться только один раз для папки (отдельные файлы не проверяются).",
	"c_cpp.configuration.exclusionPolicy.checkFilesAndFolders.description": "Фильтры исключения будут вычисляться для каждого найденного файла и папки.",
	"c_cpp.configuration.preferredPathSeparator.markdownDescription": "Символ, используемый в качестве разделителя пути для результатов автозавершения `#include`.",
	"c_cpp.configuration.simplifyStructuredComments.markdownDescription": "Если выбрано значение `true`, в подсказках при наведении указателя и автозавершении будут отображаться только определенные метки со структурированными комментариями. В противном случае отображаются все комментарии.",
	"c_cpp.configuration.doxygen.generateOnType.description": "Определяет, следует ли автоматически вставлять комментарий Doxygen после ввода выбранного стиля комментария.",
	"c_cpp.configuration.doxygen.generatedStyle.description": "Строка символов, используемая в качестве начальной строки комментария Doxygen.",
	"c_cpp.configuration.doxygen.sectionTags.description": "Выберите теги раздела Doxygen, которые должны отображаться при наведении курсора на область подсказок, если включен параметр \"Упростить структурированные комментарии\".",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.string.markdownDescription": "Шаблон, который начинается с многострочного или однострочного примечания. Шаблон продолжения по умолчанию имеет значение ` * ` для многострочных примечаний или соответствует этой строке для однострочных примечаний.",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.object.begin.description": "Шаблон, который начинается с многострочного или однострочного примечания.",
	"c_cpp.configuration.commentContinuationPatterns.items.anyof.object.continue.description": "Текст, который будет вставлен в следующую строку при нажатии клавиши ВВОД в многострочном или однострочном примечании.",
	"c_cpp.configuration.commentContinuationPatterns.description": "Определяет поведение редактора при нажатии клавиши ВВОД внутри многострочного или однострочного примечания.",
	"c_cpp.configuration.configurationWarnings.description": "Определяет, будут ли отображаться всплывающие уведомления, если расширение поставщика конфигурации не может предоставить конфигурацию для исходного файла.",
	"c_cpp.configuration.intelliSenseCachePath.markdownDescription": "Определяет путь к папке для кэшированных предварительно скомпилированных заголовков, используемых IntelliSense. Путь к кэшу по умолчанию: `%LocalAppData%/Microsoft/vscode-cpptools` в Windows, `$XDG_CACHE_HOME/vscode-cpptools/` в Linux (или `$HOME/.cache/vscode-cpptools/`, если переменная среды `XDG_CACHE_HOME` не определена) и `$HOME/Library/Caches/vscode-cpptools/` в macOS. Если путь не указан или недопустим, используется путь по умолчанию.",
	"c_cpp.configuration.intelliSenseCacheSize.markdownDescription": "Максимальный размер пространства на жестком диске для каждой рабочей области в мегабайтах (МБ), предназначенный для кэшированных предкомпилированных заголовков; фактическое использование может колебаться в районе этого значения. Размер по умолчанию — `5120` МБ. Кэширование предкомпилированных заголовков отключено, если размер равен `0`.",
	"c_cpp.configuration.intelliSenseMemoryLimit.markdownDescription": "Ограничение на использование памяти в мегабайтах (МБ) для процесса IntelliSense. Значение по умолчанию равно `4096`, максимальное значение — `16384`. При превышении ограничения расширение завершит работу и перезапустит процесс IntelliSense.",
	"c_cpp.configuration.intelliSenseUpdateDelay.description": "Управляет задержкой в миллисекундах, прежде чем IntelliSense начнет обновление после изменения.",
	"c_cpp.configuration.default.includePath.markdownDescription": "Значение, используемое в конфигурации, если параметр `includePath` не указан в `c_cpp_properties.json`. Если `includePath` задан, добавьте `${default}` в массив, чтобы вставить значения из этого параметра. Обычно это не должно включать системное содержимое; вместо этого установите значение `#C_Cpp.default.compilerPath#`.",
	"c_cpp.configuration.default.defines.markdownDescription": "Значение, используемое в конфигурации, если параметр `defines` не указан, или вставляемые значения, если в `defines` присутствует значение `${default}`.",
	"c_cpp.configuration.default.macFrameworkPath.markdownDescription": "Значение, используемое в конфигурации, если параметр `macFrameworkPath` не указан, или вставляемые значения, если в `macFrameworkPath`присутствует значение `${default}`.",
	"c_cpp.configuration.default.windowsSdkVersion.markdownDescription": "Версия пути включения Windows SDK для использования в Windows, например `10.0.17134.0`.",
	"c_cpp.configuration.default.compileCommands.markdownDescription": "Значение, используемое в конфигурации, если параметр `compileCommands`не указан или имеет значение `${default}`.",
	"c_cpp.configuration.default.forcedInclude.markdownDescription": "Значение, используемое в конфигурации, если параметр `forcedInclude` не указан, или вставляемые значения, если в `forcedInclude` присутствует значение `${default}`.",
	"c_cpp.configuration.default.intelliSenseMode.markdownDescription": "Значение, используемое в конфигурации, если параметр `intelliSenseMode` не указан или имеет значение `${default}`.",
	"c_cpp.configuration.default.compilerPath.markdownDescription": "Значение, используемое в конфигурации, если параметр `compilerPath` не указан или имеет значение `${default}`.",
	"c_cpp.configuration.default.compilerArgs.markdownDescription": "Значение, используемое в конфигурации, если параметр `compilerArgs` не указан или имеет значение `${default}`.",
	"c_cpp.configuration.default.cStandard.markdownDescription": "Значение, используемое в конфигурации, если параметр `cStandard` не указан или имеет значение `${default}`.",
	"c_cpp.configuration.default.cppStandard.markdownDescription": "Значение, используемое в конфигурации, если параметр `cppStandard` не указан или имеет значение `${default}`.",
	"c_cpp.configuration.default.configurationProvider.markdownDescription": "Значение, используемое в конфигурации, если параметр `configurationProvider` не указан или имеет значение `${default}`.",
	"c_cpp.configuration.default.mergeConfigurations.markdownDescription": "Установите значение `true` (истина), чтобы объединить пути включения, определения и принудительные включения с аналогичными элементами от поставщика конфигурации.",
	"c_cpp.configuration.default.browse.path.markdownDescription": "Значение, используемое в конфигурации, если параметр `browse.path` не указан, или вставляемые значения, если в `browse.path` присутствует значение `${default}`.",
	"c_cpp.configuration.default.browse.databaseFilename.markdownDescription": "Значение, используемое в конфигурации, если параметр `browse.databaseFilename` не указан или имеет значение `${default}`.",
	"c_cpp.configuration.default.browse.limitSymbolsToIncludedHeaders.markdownDescription": "Значение, используемое в конфигурации, если параметр `browse.limitSymbolsToIncludedHeaders` не указан или имеет значение `${default}`.",
	"c_cpp.configuration.default.systemIncludePath.markdownDescription": "Значение, используемое для системного пути включения. Если этот параметр задан, он переопределяет системный путь включения, полученный с помощью параметров `compilerPath` и `compileCommands`.",
	"c_cpp.configuration.default.enableConfigurationSquiggles.markdownDescription": "Определяет, будет ли расширение сообщать об ошибках, обнаруженных в `c_cpp_properties.json`.",
	"c_cpp.configuration.default.customConfigurationVariables.markdownDescription": "Значение, используемое в конфигурации, если параметр `customConfigurationVariables` не установлен, или вставляемые значения, если в `customConfigurationVariables` присутствует значение `${default}` в качестве ключа.",
	"c_cpp.configuration.updateChannel.markdownDescription": "Задайте значение `Insiders`, чтобы автоматически скачать и установить последние выпуски расширения для предварительной оценки, включающие в себя запланированные функции и исправления ошибок.",
	"c_cpp.configuration.updateChannel.deprecationMessage": "Этот параметр не рекомендуется. Предварительные версии расширений теперь доступны через Marketplace.",
	"c_cpp.configuration.default.dotConfig.markdownDescription": "Значение, используемое в конфигурации, если параметр `dotConfig` не указан, или вставляемое значение, если в `dotConfig` присутствует значение `${default}`.",
	"c_cpp.configuration.experimentalFeatures.description": "Определяет, можно ли использовать \"экспериментальные\" функции.",
	"c_cpp.configuration.suggestSnippets.markdownDescription": "Если задано значение `true`, фрагменты кода предоставляются языковым сервером.",
	"c_cpp.configuration.caseSensitiveFileSupport.markdownDescription": "Если задано значение `default`, файловая система рабочей области считается нечувствительной к регистру в Windows и чувствительной к регистру в macOS или Linux. Если задано значение `enabled`, предполагается, что файловая система рабочей области чувствительна к регистру в Windows.",
	"c_cpp.configuration.enhancedColorization.markdownDescription": "Если этот параметр включен, код раскрашивается в соответствии с IntelliSense. Этот параметр применяется, только если для `#C_Cpp.intelliSenseEngine#` установлено значение `default`.",
	"c_cpp.configuration.codeFolding.description": "Если этот параметр включен, то диапазоны свертывания кода предоставляются языковым сервером.",
	"c_cpp.configuration.markdownInComments.description": "Укажите, будет ли Markdown доступен в подсказке, появляющейся при наведении указателя мыши. По умолчанию к комментариям, подсказке, появляющейся при наведении указателя мыши, будет применено только подмножество Markdown.",
	"c_cpp.configuration.markdownInComments.subsetEnabled.description": "Включить все функции Markdown в подсказке, появляющейся при наведении указателя мыши, кроме тех, которые содержат символы \"_\" и \"*\".",
	"c_cpp.configuration.markdownInComments.enabled.description": "Включить все функции Markdown в подсказке, появляющейся при наведении указателя мыши.",
	"c_cpp.configuration.markdownInComments.disabled.description": "Отключить все функции Markdown в подсказке, появляющейся при наведении указателя мыши.",
	"c_cpp.configuration.hover.description": "Если этот параметр отключен, сведения при наведении курсора больше не предоставляются языковым сервером.",
	"c_cpp.configuration.vcpkg.enabled.markdownDescription": "Включите службы интеграции для [диспетчера зависимостей vcpkg](https://aka.ms/vcpkg/).",
	"c_cpp.configuration.addNodeAddonIncludePaths.markdownDescription": "Добавьте пути включения из `nan` и `node-addon-api`, если они являются зависимостями.",
	"c_cpp.configuration.renameRequiresIdentifier.markdownDescription": "Если этот параметр имеет значение `true`, для операции 'Переименование символа' потребуется указать допустимый идентификатор C/C++.",
	"c_cpp.configuration.autocompleteAddParentheses.markdownDescription": "Если присвоено значение `true`, автозаполнение автоматически добавит `(` после вызовов функции, при этом также может добавляться `)` в зависимости от значения параметра `#editor.autoClosingBrackets#`.",
	"c_cpp.configuration.filesExclude.markdownDescription": "Настройка стандартных масок для исключения папок (и файлов, если внесено изменение в `#C_Cpp.exclusionPolicy#`). Они специфичны для расширения C/C++ и дополняют `#files.exclude#`, но в отличие от `#files.exclude#` они применяются также к путям вне папки используемой рабочей области и не удаляются из представления обозревателя. Дополнительные сведения о [шаблонах глобусов](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).",
	"c_cpp.configuration.filesExcludeBoolean.markdownDescription": "Стандартная маска, соответствующая путям к файлам. Задайте значение `true` или `false`, чтобы включить или отключить маску.",
	"c_cpp.configuration.filesExcludeWhen.markdownDescription": "Дополнительная проверка элементов того же уровня соответствующего файла. Используйте `$(basename)` в качестве переменной для соответствующего имени файла.",
	"c_cpp.configuration.debugger.useBacktickCommandSubstitution.markdownDescription": "Если задано значение `true`, для подстановки команд оболочки отладчика будет использоваться устаревший обратный апостроф ``(`)``.",
	"c_cpp.configuration.legacyCompilerArgsBehavior.markdownDescription": "Включите поведение, работавшее в версиях до 1.10.0, чтобы посмотреть обработку экранирования оболочки в параметрах аргументов компилятора. Экранирование оболочки больше не будет поддерживаться по умолчанию в массивах аргументов начиная с версии 1.10.0.",
	"c_cpp.configuration.legacyCompilerArgsBehavior.deprecationMessage": "Это временный параметр, созданный для поддержки перехода на измененное поведение в версии 1.10.0.",
	"c_cpp.configuration.sshTargetsView.description": "Определяет, отображается ли представление целевых объектов SSH. По умолчанию включите представление при вызове команды SSH.",
	"c_cpp.contributes.views.cppReferencesView.title": "C/C++: результаты по другим ссылкам",
	"c_cpp.contributes.views.sshTargetsView.title": "Cpptools: целевые объекты SSH",
	"c_cpp.contributes.viewsWelcome.contents": "Дополнительные сведения о launch.json см. в статье [Настройка отладки C/C++](https://code.visualstudio.com/docs/cpp/launch-json-reference).",
	"c_cpp.configuration.debugShortcut.description": "Отображение кнопки воспроизведения \"Запуск и отладка\" и шестеренки \"Добавить конфигурацию отладки\" в заголовке окна редактора для файлов C++.",
	"c_cpp.debuggers.pipeTransport.description": "При наличии сообщает отладчику о необходимости подключения к удаленному компьютеру с помощью другого исполняемого файла в качестве канала, который будет пересылать стандартный ввод и вывод между VS Code и исполняемым файлом отладчика с поддержкой MI в серверной части (например, gdb).",
	"c_cpp.debuggers.pipeTransport.default.pipeProgram": "введите полный путь к имени программы канала, например: \"/usr/bin/ssh\".",
	"c_cpp.debuggers.pipeTransport.default.debuggerPath": "Полный путь к отладчику на конечном компьютере, например: /usr/bin/gdb.",
	"c_cpp.debuggers.pipeTransport.debuggerPath.description": "Полный путь к отладчику на конечном компьютере, например: /usr/bin/gdb.",
	"c_cpp.debuggers.pipeTransport.pipeCwd.description": "Полный путь к рабочему каталогу для программы канала.",
	"c_cpp.debuggers.pipeTransport.pipeProgram.description": "Полная команда канала для выполнения.",
	"c_cpp.debuggers.pipeTransport.pipeArgs.description": "Аргументы командной строки, переданные в программу канала для настройки подключения.",
	"c_cpp.debuggers.pipeTransport.pipeEnv.description": "Переменные среды, переданные в программу канала.",
	"c_cpp.debuggers.pipeTransport.quoteArgs.description": "Определяет, должны ли быть заключены в кавычки отдельные аргументы pipeProgram, если эти аргументы содержат символы (такие как пробелы или символы табуляции). Если значение равно FALSE, команда отладчика больше не будет автоматически заключаться в кавычки. Значение по умолчанию — TRUE.",
	"c_cpp.debuggers.logging.description": "Необязательные флаги для определения типов сообщений, регистрируемых в консоли отладки.",
	"c_cpp.debuggers.logging.exceptions.description": "Необязательный флаг, определяющий, следует ли регистрировать сообщения об исключениях в консоли отладки. По умолчанию принимает значение true.",
	"c_cpp.debuggers.logging.moduleLoad.description": "Необязательный флаг, определяющий, следует ли регистрировать события загрузки модулей в консоли отладки. По умолчанию принимает значение true.",
	"c_cpp.debuggers.logging.programOutput.description": "Необязательный флаг, определяющий, следует ли регистрировать выходные данные программы в консоли отладки. По умолчанию принимает значение true.",
	"c_cpp.debuggers.logging.engineLogging.description": "Необязательный флаг, определяющий, следует ли регистрировать сообщения диагностического модуля отладки в консоли отладки. По умолчанию принимает значение false.",
	"c_cpp.debuggers.logging.trace.description": "Необязательный флаг, определяющий, следует ли регистрировать трассировку команд диагностического адаптера в консоли отладки. По умолчанию принимает значение false.",
	"c_cpp.debuggers.logging.traceResponse.description": "Необязательный флаг, определяющий, следует ли регистрировать трассировку команд и ответов диагностического адаптера в консоли отладки. По умолчанию принимает значение false.",
	"c_cpp.debuggers.cppvsdbg.logging.threadExit.description": "Необязательный флаг, определяющий, следует ли записывать сообщения о выходе из потоков в консоль отладки. Значение по умолчанию — FALSE.",
	"c_cpp.debuggers.cppvsdbg.logging.processExit.description": "Необязательный флаг, определяющий, следует ли записывать сообщения о выходе из целевых процессов в консоль отладки. Значение по умолчанию — TRUE.",
	"c_cpp.debuggers.text.description": "Команда отладчика для выполнения.",
	"c_cpp.debuggers.description.description": "Необязательное описание команды.",
	"c_cpp.debuggers.ignoreFailures.description": "Если задано значение true, сбои этой команды должны игнорироваться. Значение по умолчанию — false.",
	"c_cpp.debuggers.program.description": "Полный путь к исполняемому файлу программы.",
	"c_cpp.debuggers.args.description": "Аргументы командной строки, переданные в программу.",
	"c_cpp.debuggers.cppdbg.type.description": "Тип подсистемы. Должно быть \"cppdbg\".",
	"c_cpp.debuggers.cppvsdbg.type.description": "Тип подсистемы. Должно быть \"cppvsdbg\".",
	"c_cpp.debuggers.targetArchitecture.description": "Архитектура отлаживаемого объекта. Будет определяться автоматически, если этот параметр не задан. Допустимые значения: x86, arm, arm64, mips, x64, amd64, x86_64.",
	"c_cpp.debuggers.cwd.description": "Рабочий каталог целевой программы.",
	"c_cpp.debuggers.setupCommands.description": "Одна или несколько команд GDB/LLDB, выполняемых для настройки базового отладчика. Пример: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].",
	"c_cpp.debuggers.postRemoteConnectCommands.description": "Одна или несколько команд, которые выполняются после удаленного подключения к серверу отладки.",
	"c_cpp.debuggers.customLaunchSetupCommands.description": "Если этот параметр задан, он заменяет команды по умолчанию, используемые для запуска целевого объекта, некоторыми другими командами. Например, это может быть \"-target-attach\" для подключения к целевому процессу. Если указать пустой список команд для замены команд запуска, никакие команды выполняться не будут, что может быть удобно в случаях, когда параметры запуска предоставляются отладчику как параметры командной строки. Пример: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].",
	"c_cpp.debuggers.launchCompleteCommand.description": "Команда, выполняемая после полной настройки отладчика для запуска целевого процесса. Допустимые значения: \"exec-run\", \"exec-continue\", \"None\". Значение по умолчанию: \"exec-run\".",
	"c_cpp.debuggers.cppdbg.visualizerFile.description": "Файл NATVIS, используемый при отладке этого процесса. Этот параметр несовместим с автоматическим форматированием GDB. Если этот параметр используется, см. также описание \"showDisplayString\".",
	"c_cpp.debuggers.cppdbg.svdPath.description": "Полный путь к SVD-файлу встроенного устройства.",
	"c_cpp.debuggers.cppvsdbg.visualizerFile.description": "Файл NATVIS, используемый при отладке этого процесса.",
	"c_cpp.debuggers.showDisplayString.description": "Если указано значение visualizerFile, showDisplayString включит отображаемую строку. Включение этого параметра может привести к снижению производительности во время отладки.",
	"c_cpp.debuggers.environment.description": "Переменные среды для добавления в среду для программы. Пример: [ { \"name\": \"config\", \"value\": \"Debug\" } ], not [ { \"config\": \"Debug\" } ].",
	"c_cpp.debuggers.envFile.description": "Абсолютный путь к файлу, содержащему определения переменных среды. Этот файл содержит пары \"ключ-значение\", разделенные знаком равенства и разнесенные по строкам. Например, \"ключ=значение\".",
	"c_cpp.debuggers.additionalSOLibSearchPath.description": "Список каталогов, разделенных точкой с запятой, который следует использовать для поиска файлов SO. Пример: \"c:\\каталог_1;c:\\каталог_2\".",
	"c_cpp.debuggers.MIMode.description": "Указывает отладчик консоли, к которому подключится MIDebugEngine. Допустимые значения: \"gdb\" \"lldb\".",
	"c_cpp.debuggers.miDebuggerPath.description": "Путь к отладчику MI (например, GDB). Если он не задан, сначала будет выполнен поиск пути для отладчика.",
	"c_cpp.debuggers.miDebuggerArgs.description": "Дополнительные аргументы для отладчика MI (например, GDB).",
	"c_cpp.debuggers.miDebuggerServerAddress.description": "Сетевой адрес сервера отладчика MI, к которому требуется подключиться (пример: localhost:1234).",
	"c_cpp.debuggers.useExtendedRemote.description": "Подключение к серверу отладчика MI в целевом расширенном удаленном режиме.",
	"c_cpp.debuggers.stopAtEntry.description": "Необязательный параметр. Если задано значение true, отладчик должен остановиться на точке входа целевого объекта. Если передается идентификатор процесса (processId), он не оказывает никакого влияния.",
	"c_cpp.debuggers.debugServerPath.description": "Необязательный полный путь к запускаемому серверу отладки. Значение по умолчанию — NULL. Применяется с параметром miDebugServerAddress или с вашим собственным сервером через команду customSetupCommand, использующую -target-select remote <server:port>.",
	"c_cpp.debuggers.debugServerArgs.description": "Необязательные аргументы сервера отладки. Значение по умолчанию: null.",
	"c_cpp.debuggers.serverStarted.description": "Дополнительный запускаемый сервером шаблон для поиска в выходных данных сервера отладки. Значение по умолчанию: null.",
	"c_cpp.debuggers.filterStdout.description": "Поиск запущенного сервером шаблона в потоке stdout и регистрация stdout в выходных данных отладки. Значение по умолчанию: true.",
	"c_cpp.debuggers.filterStderr.description": "Поиск запущенного сервером шаблона в потоке stderr и регистрация stderr в выходных данных отладки. Значение по умолчанию: false.",
	"c_cpp.debuggers.serverLaunchTimeout.description": "Необязательный период (в миллисекундах), в течение которого отладчик будет ожидать запуска debugServer. Значение по умолчанию: 10000.",
	"c_cpp.debuggers.coreDumpPath.description": "Необязательный полный путь к основному файлу дампа для указанной программы. Значение по умолчанию: null.",
	"c_cpp.debuggers.cppdbg.externalConsole.description": "Если задано значение true, для отлаживаемого объекта запускается консоль. Если задано значение false, в Linux и Windows он отображается в интегрированной консоли.",
	"c_cpp.debuggers.cppvsdbg.externalConsole.description": "[Устарело; необходимо использовать \"console\"] Если задано значение true, для отлаживаемого объекта запускается консоль. Если задано значение false, консоль не запускается.",
	"c_cpp.debuggers.cppvsdbg.console.description": "Место запуска целевого объекта отладки. Если не указано, по умолчанию используется \"internalConsole\".",
	"c_cpp.debuggers.cppvsdbg.console.internalConsole.description": "Вывод в консоль отладки VS Code. Не поддерживает чтение входных данных консоли (например: \"std::cin\" или \"scanf\").",
	"c_cpp.debuggers.cppvsdbg.console.integratedTerminal.description": "Интегрированный терминал VS Code.",
	"c_cpp.debuggers.cppvsdbg.console.externalTerminal.description": "Консольные приложения будут запускаться во внешнем окне терминала. Окно будет использовано снова при повторном запуске и не будет закрываться автоматически при выходе из приложения.",
	"c_cpp.debuggers.cppvsdbg.console.newExternalWindow.description": "Консольные приложения будут запускаться в собственном внешнем окне консоли, которое будет закрываться при остановке приложения. Приложения, не являющиеся консольными, будут запускаться без терминала, и stdout/stderr будет игнорироваться.",
	"c_cpp.debuggers.avoidWindowsConsoleRedirection.description": "Если задано значение true, отключается перенаправление консоли отлаживаемого объекта, необходимое для поддержки встроенного терминала.",
	"c_cpp.debuggers.sourceFileMap.description": "Необязательные сопоставления исходного файла, переданные в подсистему отладки. Пример: \"{ \"/original/source/path\":\"/current/source/path\" }\".",
	"c_cpp.debuggers.processId.anyOf.description": "Необязательный идентификатор процесса, к которому требуется подключить отладчик. Используйте \"${command:pickProcess}\", чтобы получить список локальных запущенных процессов для подключения. Обратите внимание, что для подключения к процессу на некоторых платформах требуются права администратора.",
	"c_cpp.debuggers.symbolSearchPath.description": "Список каталогов, разделенных точкой с запятой, который следует использовать для поиска файлов символов (таких как PDB). Пример: \"c:\\каталог_1;c:\\каталог_2\".",
	"c_cpp.debuggers.dumpPath.description": "Необязательный полный путь к основному файлу дампа для указанной программы. Пример: \"c:\\temp\\app.dmp\". Значение по умолчанию: null.",
	"c_cpp.debuggers.enableDebugHeap.description": "Если задано значение false, процесс будет запущен с отключенной кучей отладки. При этом для переменной среды \"_NO_DEBUG_HEAP\" устанавливается значение \"1\".",
	"c_cpp.debuggers.symbolLoadInfo.description": "Явный контроль загрузки символов.",
	"c_cpp.debuggers.symbolLoadInfo.loadAll.description": "При значении true (истина) будут загружаться символы для всех библиотек. В противном случае символы общих библиотек (solib) загружаться не будут. По умолчанию: true.",
	"c_cpp.debuggers.symbolLoadInfo.exceptionList.description": "Список имен файлов (допустимы подстановочные знаки), разделенных точкой с запятой (\";\") изменяет работу LoadAll. Если LoadAll имеет значение true, то для библиотек, имя которых соответствует какому-либо имени в списке, символы загружаться не будут. В противном случае символы будут загружаться только для библиотек с именами из списка. Пример: \"foo.so;bar.so\".",
	"c_cpp.debuggers.requireExactSource.description": "Необязательный флаг, требующий соответствия текущего исходного кода PDB-файлу.",
	"c_cpp.debuggers.stopAtConnect.description": "Если значение равно TRUE, отладчик должен остановиться после подключения к целевому объекту. Если значение равно FALSE, отладчик продолжит работу после подключения. Значение по умолчанию — FALSE.",
	"c_cpp.debuggers.hardwareBreakpoints.description": "Явное управление поведением аппаратной точки останова для удаленных целевых объектов.",
	"c_cpp.debuggers.hardwareBreakpoints.require.description": "Если значение равно TRUE, всегда используйте аппаратные точки останова. Значение по умолчанию — FALSE.",
	"c_cpp.debuggers.hardwareBreakpoints.limit.description": "Необязательное ограничение количества доступных аппаратных точек останова для использования. Применяется принудительно, только если require имеет значение TRUE, а limit больше 0. Значение по умолчанию — 0.",
	"c_cpp.debuggers.variables.description": "Переменные для рекурсивной подстановки в этой конфигурации запуска. Каждая переменная может ссылаться на другие.",
	"c_cpp.debuggers.variables.properties.description": "Переменная для рекурсивной подстановки в этой конфигурации запуска. Значение может ссылаться на другие переменные.",
	"c_cpp.debuggers.host.description": "Сведения об узле",
	"c_cpp.debuggers.host.user.description": "Вход пользователя на узел.",
	"c_cpp.debuggers.host.hostName.description": "Имя узла",
	"c_cpp.debuggers.host.port.description": "Порт SSH на узловом сайте. Значение по умолчанию — 22.",
	"c_cpp.debuggers.host.jumpHost.description": "Подключитесь к целевому узел, сначала установив соединение с узлами перехода.",
	"c_cpp.debuggers.host.localForward.description": "Переадресация подключений к заданному порту TCP или сокету Unix на локальном (клиентском) узле к заданному узлу и порту или сокету Unix на удаленной стороне",
	"c_cpp.debuggers.host.localForward.bindAddress.description": "Локальный адрес",
	"c_cpp.debuggers.host.localForward.port.description": "Локальный порт",
	"c_cpp.debuggers.host.localForward.host.description": "Имя узла",
	"c_cpp.debuggers.host.localForward.hostPort.description": "Порт узла",
	"c_cpp.debuggers.host.localForward.localSocket.description": "Локальный сокет",
	"c_cpp.debuggers.host.localForward.remoteSocket.description": "Удаленный сокет",
	"c_cpp.debuggers.deploySteps.description": "Шаги, необходимые для развертывания приложения. Порядок имеет значение.",
	"c_cpp.debuggers.deploySteps.copyFile.description": "Копирование файлов с помощью SCP или rsync.",
	"c_cpp.debuggers.deploySteps.copyFile.files.description": "Файлы для копирования. Поддерживается шаблон пути.",
	"c_cpp.debuggers.deploySteps.copyFile.targetDir.description": "Целевой каталог",
	"c_cpp.debuggers.deploySteps.copyFile.recursive.description": "Если установлено значение \"true\", папки копируются рекурсивно.",
	"c_cpp.debuggers.deploySteps.copyFile.scpPath.description": "Необязательный полный путь к SCP. Предположим, что SCP находится в PATH, если не указано",
	"c_cpp.debuggers.deploySteps.copyFile.rsyncPath.description": "Необязательный полный путь к rsync. Предполагается, что rsync находится в PATH, если полный путь не указан.",
	"c_cpp.debuggers.deploySteps.debug": "Если ИСТИНА, пропустить при запуске без отладки. Если ЛОЖЬ, пропустить при запуске отладки. Если не определено, никогда не пропускать.",
	"c_cpp.debuggers.deploySteps.ssh.description": "Шаг команды SSH.",
	"c_cpp.debuggers.deploySteps.ssh.command.description": "Команда для выполнения через SSH. Команда после '-c' в команде SSH.",
	"c_cpp.debuggers.deploySteps.ssh.sshPath.description": "Необязательный полный путь к SSH. Предположим, что SSH находится в PATH, если не указано иного.",
	"c_cpp.debuggers.deploySteps.continueOn.description": "Необязательный шаблон отделки на выходе. Когда этот шаблон виден в выходных данных, продолжайте процедуры развертывания независимо от того, вернется ли этот шаг.",
	"c_cpp.debuggers.deploySteps.shell.description": "Шаг команды оболочки.",
	"c_cpp.debuggers.deploySteps.shell.command.description": "Команда оболочки для выполнения.",
	"c_cpp.debuggers.vsCodeCommand.description": "Вызываемая команда VS Code. Может быть командой в VS Code или активным расширением.",
	"c_cpp.debuggers.vsCodeCommand.command.description": "Вызываемая команда VS Code.",
	"c_cpp.debuggers.vsCodeCommand.args.description": "Аргументы команды VS Code.",
	"c_cpp.taskDefinitions.name.description": "Имя задачи.",
	"c_cpp.taskDefinitions.command.description": "Путь к компилятору или скрипту, выполняющему компиляцию.",
	"c_cpp.taskDefinitions.args.description": "Дополнительные аргументы для передачи компилятору или скрипту компиляции.",
	"c_cpp.taskDefinitions.args.value.description": "Фактическое значение аргумента.",
	"c_cpp.taskDefinitions.args.quoting.description": "Указывает, как значение аргумента должно быть заключено в кавычки.",
	"c_cpp.taskDefinitions.args.quoting.escape.description": "Экранирует символы с помощью escape-символа оболочки (например, \\ в bash).",
	"c_cpp.taskDefinitions.args.quoting.strong.description": "Заключает аргумент в кавычки с помощью сильного символа кавычки оболочки (например, ' в bash).",
	"c_cpp.taskDefinitions.args.quoting.weak.description": "Заключает аргумент в кавычки с помощью слабого символа кавычки оболочки (например, \" в bash).",
	"c_cpp.taskDefinitions.options.description": "Дополнительные параметры команды.",
	"c_cpp.taskDefinitions.options.cwd.description": "Текущий рабочий каталог выполняемой программы или сценария. Если этот параметр опущен, используется корневой каталог текущей рабочей области Code.",
	"c_cpp.taskDefinitions.detail.description": "Дополнительные сведения о задаче.",
	"c_cpp.debuggers.sourceFileMap.sourceFileMapEntry.description": "Текущие пути и пути времени компиляции к одним и тем же деревьям SourceTree. Файлы по пути EditorPath сопоставляются с путем CompileTimePath для сопоставления точек останова, а также сопоставляются из пути CompileTimePath с путем EditorPath при отображении расположений трассировки стека.",
	"c_cpp.debuggers.sourceFileMap.sourceFileMapEntry.editorPath.description": "Путь к дереву SourceTree, которое будет использоваться редактором.",
	"c_cpp.debuggers.sourceFileMap.sourceFileMapEntry.useForBreakpoints.description": "Значение false, если эта запись используется только для сопоставления расположений кадра стека. Значение true, если эта запись также должна использоваться при указании расположений точек останова.",
	"c_cpp.debuggers.symbolOptions.description": "Параметры, управляющие поиском и загрузкой символов (PDB-файлов).",
	"c_cpp.debuggers.unknownBreakpointHandling.description": "Управляет тем, как точки останова, установленные извне (обычно через необработанные команды GDB), обрабатываются при попадании.\nДопустимые значения: \"throw\", который действует так, как если бы приложение выдало исключение, и \"stop\", который только приостанавливает сеанс отладки. Значение по умолчанию — \"throw\".",
	"c_cpp.debuggers.VSSymbolOptions.description": "Предоставляет конфигурацию для поиска и загрузки символов в адаптер отладки.",
	"c_cpp.debuggers.VSSymbolOptions.searchPaths.description": "Массив URL-адресов сервера символов (например, http​://MyExampleSymbolServer) или каталогов (например: /build/symbols) для поиска PDB-файлов. Поиск в этих каталогах осуществляется в дополнение к расположениям по умолчанию — рядом с модулем и путем первоначального удаления PDB-файла.",
	"c_cpp.debuggers.VSSymbolOptions.searchMicrosoftSymbolServer.description": "Если значение равно \"true\", сервер символов (Майкрософт) (https​://msdl.microsoft.com​/download/symbols) добавляется к пути поиска символов. Если этот параметр не задан, по умолчанию используется значение \"false\".",
	"c_cpp.debuggers.VSSymbolOptions.cachePath.description": "Каталог, в котором должны кэшироваться символы, загруженные с серверов символов. Если значение не указано, то отладчик в Windows по умолчанию будет %TEMP%\\SymbolCache.",
	"c_cpp.debuggers.VSSymbolOptions.moduleFilter.description": "Предоставляет параметры для управления тем, для каких модулей (DLL-файлы) отладчик будет пытаться загружать символы (PDB-файлы).",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.description": "Предоставляет конфигурацию для загрузки символов в адаптер отладки.",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.mode.description": "Управляет тем, в каком из двух базовых режимов работы фильтр модуля работает.",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.mode.loadAllButExcluded.enumDescriptions": "Загрузите символы для всех модулей, если модуль не находится в массиве \"excludedModules\".",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.mode.loadOnlyIncluded.enumDescriptions": "Не пытайтесь загрузить символы для ЛЮБОГО модуля, если он не находится в массиве \"includedModules\", или он включен с помощью параметра \"includeSymbolsNextToModules\".",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.excludedModules.description": "Массив модулей, для которых отладчик не должен загружать символы. Поддерживаются подстановочные знаки (например: MyCompany.*.dll)\n\nЭто свойство игнорируется, если для \"mode\" задано значение \"loadAllButExcluded\".",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.includedModules.description": "Массив модулей, для которых отладчик должен загружать символы. Поддерживаются подстановочные знаки (например: MyCompany.*.dll)\n\nЭто свойство игнорируется, если для \"mode\" задано значение \"loadOnlyIncluded\".",
	"c_cpp.debuggers.VSSymbolOptionsModuleFilter.includeSymbolsNextToModules.description": "Если значение равно true, для любого модуля, НЕ входящего в массив \"includedModules\", отладчик по-прежнему будет проверять рядом с самим модулем и запускаемым исполняемым файлом, но он не будет проверять пути в списке поиска символов. По умолчанию для этого параметра установлено значение \"true\".\n\nЭто свойство игнорируется, если для параметра \"mode\" установлено значение \"loadOnlyIncluded\".",
	"c_cpp.semanticTokenTypes.referenceType.description": "Стиль для ссылочных типов C++/CLI.",
	"c_cpp.semanticTokenTypes.cliProperty.description": "Стиль для свойств C++/CLI.",
	"c_cpp.semanticTokenTypes.genericType.description": "Стиль для универсальных типов C++/CLI.",
	"c_cpp.semanticTokenTypes.valueType.description": "Стиль для типов значений C++/CLI.",
	"c_cpp.semanticTokenTypes.templateFunction.description": "Стиль для функций шаблона C++.",
	"c_cpp.semanticTokenTypes.templateType.description": "Стиль для типов шаблонов C++.",
	"c_cpp.semanticTokenTypes.operatorOverload.description": "Стиль для перегруженных операторов C++.",
	"c_cpp.semanticTokenTypes.memberOperatorOverload.description": "Стиль для функций-членов перегруженных операторов C++.",
	"c_cpp.semanticTokenTypes.newOperator.description": "Стиль для операторов `new` или `delete` C++.",
	"c_cpp.semanticTokenTypes.customLiteral.description": "Стиль для определяемых пользователем литералов C++.",
	"c_cpp.semanticTokenTypes.numberLiteral.description": "Стиль для определяемых пользователем числовых литералов C++.",
	"c_cpp.semanticTokenTypes.stringLiteral.description": "Стиль для определяемых пользователем строковых литералов C++.",
	"c_cpp.semanticTokenModifiers.global.description": "Стиль для символов, которые являются глобальными.",
	"c_cpp.semanticTokenModifiers.local.description": "Стиль для символов, которые являются локальными.",
	"c_cpp.debuggers.logging.natvisDiagnostics.description": "Необязательный флаг, определяющий, следует ли регистрировать диагностические сообщения NATVIS в консоли отладки. По умолчанию принимает значение \"Нет\".",
	"c_cpp.debuggers.logging.category.verbose.description": "Журналы, используемые для интерактивного исследования во время разработки. Эти журналы должны в основном содержать полезные сведения для отладки и не имеют длительной ценности.",
	"c_cpp.debuggers.logging.category.warning.description": "Журналы, которые выделяют аномальное или непредвиденное событие в потоке приложения, но не вызывают остановку выполнения приложения иным образом.",
	"c_cpp.debuggers.logging.category.error.description": "Журналы, которые выделяют остановку текущего потока выполнения из-за сбоя. Они должны указывать на сбой в текущем действии, а не на сбой на уровне приложения.",
	"c_cpp.debuggers.logging.category.none.description": "Не используется для записи сообщений журнала. Указывает, что категория ведения журнала не должна записывать сообщения.",
	"c_cpp.walkthrough.title": "Начало разработки на C++",
	"c_cpp.walkthrough.description": "Изучите подробнее взаимодействие разработки C++ в VS Code.",
	"c_cpp.walkthrough.set.up.title": "Настройка среды C++",
	"c_cpp.walkthrough.activating.description": "Активируйте расширение C++, чтобы определить, настроена ли среда C++.\nАктивация расширения...",
	"c_cpp.walkthrough.no.compilers.windows.description": "Не удалось найти на компьютере компилятор C++, необходимый для использования расширения C++. Следуйте инструкциям справа, чтобы установить его, затем щелкните \"Найти новый компилятор\" ниже.\n[Найти мой новый компилятор](command:C_Cpp.RescanCompilers?%22walkthrough%22)",
	"c_cpp.walkthrough.no.compilers.description": "Не удалось найти на компьютере компилятор C++, необходимый для использования расширения C++. Выберите \"Установить компилятор C++\", и компилятор будет установлен для вас. Либо следуйте инструкциям справа, чтобы установить компилятор, а затем нажмите кнопку \"Найти новый компилятор\" ниже.\n[Установка компилятора C++](command:C_Cpp.InstallCompiler?%22walkthrough%22)\n[Найти мой новый компилятор](command:C_Cpp.RescanCompilers?%22walkthrough%22)",
	"c_cpp.walkthrough.compilers.found.description": "Расширение C++ работает с компилятором C++. Выберите один из тех, которые уже установлены на этом компьютере, щелкнув кнопку ниже.\n[Выберите компилятор по умолчанию](command:C_Cpp.SelectIntelliSenseConfiguration?%22walkthrough%22)",
	"c_cpp.walkthrough.compilers.found.altText": "Изображение, показывающее быстрый выбор компилятора по умолчанию и список компиляторов, найденных на компьютере пользователя, один из которых выбран.",
	"c_cpp.walkthrough.create.cpp.file.title": "Создание файла C++",
	"c_cpp.walkthrough.create.cpp.file.description": "[Открыть](command:toSide:workbench.action.files.openFile) или [создать](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22cpp%22%7D) файл C++. Обязательно сохраните его с расширением \".cpp\", например \"helloworld.cpp\".\n[Создать файл C++](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22cpp%22%7D)",
	"c_cpp.walkthrough.create.cpp.file.altText": "Откройте файл C++ или папку с проектом C++.",
	"c_cpp.walkthrough.command.prompt.title": "Запуск из командной строки разработчика",
	"c_cpp.walkthrough.command.prompt.description": "При использовании компилятора Microsoft Visual Studio C++ расширение C++ требует запуска VS Code из командной строки разработчика. Следуйте инструкциям справа для перезапуска.\n[Перезагрузить окно](command:workbench.action.reloadWindow)",
	"c_cpp.walkthrough.run.debug.title": "Запустите и отладьте файл C++",
	"c_cpp.walkthrough.run.debug.mac.description": "Откройте файл C++ и нажмите кнопку воспроизведения в правом верхнем углу редактора или нажмите F5 при открытии файла. Выберите \"clang++— сборка и отладка активного файла\" для запуска с отладчиком.",
	"c_cpp.walkthrough.run.debug.linux.description": "Откройте файл C++ и нажмите кнопку воспроизведения в правом верхнем углу редактора или нажмите F5 при открытии файла. Выберите \"g++ — сборка и отладка активного файла\" для запуска с отладчиком.",
	"c_cpp.walkthrough.run.debug.windows.description": "Откройте файл C++ и нажмите кнопку воспроизведения в правом верхнем углу редактора или нажмите F5 при открытии файла. Выберите \"cl.exe — сборка и отладка активного файла\" для запуска с отладчиком.",
	"c_cpp.walkthrough.run.debug.windows.altText": "Изображение, показывающее точку останова в файле C++, кнопку F5 и символ запуска в правом верхнем углу",
	"c_cpp.walkthrough.customize.debugging.title": "Настройка отладки",
	"c_cpp.walkthrough.customize.debugging.mac.description": "Чтобы настроить конфигурацию отладки, выберите обозреватель на панели действий и откройте папку, содержащую файл C++. Откройте файл C++ и выберите \"Добавить конфигурацию отладки\" справа от кнопки воспроизведения. Новая конфигурация отладки сохранена в файле launch.json проекта. \n[Дополнительные сведения](https://code.visualstudio.com/docs/cpp/config-linux#_debug-helloworldcpp)",
	"c_cpp.walkthrough.customize.debugging.linux.description": "Чтобы настроить конфигурацию отладки, выберите обозреватель на панели действий и откройте папку, содержащую файл C++. Откройте файл C++ и выберите \"Добавить конфигурацию отладки\" справа от кнопки воспроизведения. Новая конфигурация отладки сохранена в файле launch.json проекта. \n[Дополнительные сведения](https://code.visualstudio.com/docs/cpp/config-msvc#_debug-helloworldcpp)",
	"c_cpp.walkthrough.customize.debugging.windows.description": "Чтобы настроить конфигурацию отладки, выберите обозреватель на панели действий и откройте папку, содержащую файл C++. Откройте файл C++ и выберите \"Добавить конфигурацию отладки\" справа от кнопки воспроизведения. Новая конфигурация отладки сохранена в файле launch.json проекта. \n[Дополнительные сведения](https://code.visualstudio.com/docs/cpp/config-clang-mac#_debug-helloworldcpp)",
	"c_cpp.walkthrough.customize.debugging.altText": "Изображение, показывающее пункт \"Добавить конфигурацию отладки\" в раскрывающемся списке.",
	"c_cpp.codeActions.refactor.inline.macro.title": "Встроенный макрос",
	"c_cpp.codeActions.refactor.inline.macro.description": "Заменить вызов макроса расширенным кодом.",
	"c_cpp.codeActions.refactor.extract.function.title": "Извлечение в функцию",
	"c_cpp.codeActions.refactor.extract.function.description": "Извлечение выбранного кода в свободную функцию или функцию-член.",
	"c_cpp.configuration.refactoring.includeHeader.markdownDescription": "Определяет, следует ли включать файл заголовка переработанной функции/символа в соответствующий исходный файл при выполнении действия рефакторинга, например при создании объявления/определения.",
	"c_cpp.configuration.refactoring.includeHeader.always.description": "Всегда включать файл заголовка, если он не включен явным образом в исходный файл.",
	"c_cpp.configuration.refactoring.includeHeader.ifNeeded.description": "Включать файл заголовка, только если он не включен явным образом в исходный файл или путем неявного включения.",
	"c_cpp.configuration.refactoring.includeHeader.never.description": "Никогда не включать файл заголовка.",
	"c_cpp.languageModelTools.configuration.displayName": "Конфигурация C/C++",
	"c_cpp.languageModelTools.configuration.userDescription": "Конфигурация активного файла C или C++, например, версия стандарта языка и целевая платформа."
}